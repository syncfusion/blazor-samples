@namespace BlazorDemos.Shared
<style>
    .sb-body-overlay {
        font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
        z-index: 100000025;
        display: block;
        position: absolute;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 1);
        overflow: hidden;
        pointer-events: none;
        top: 0;
        bottom: 0;
    }
    .sb-caption h4 {
        font-size: 18px;
        font-weight: normal;
    }
    .sb-loading.e-hide,
    .sb-body-overlay.e-hide {
        display: none;
        opacity: 0;
    }
    .sb-loading {
        width: 56px;
        height: 56px;
        position: absolute;
        top: calc(50% - 28px);
        left: calc(50% - 28px);
        z-index: 10000;
        border-radius: 50%;
        padding: 2px;
        box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
        overflow: hidden;
        display: inline-block;
        background: white;
    }
    .sb-caption {
        position: absolute;
        top: calc(50% + 48px);
        left: calc(50% - 180px);
    }
    .circular {
        animation: rotate 2s linear infinite;
        height: 50px;
        width: 50px;
        border-radius: 50%;
    }
    .path {
        stroke-dasharray: 1, 200;
        stroke-dashoffset: 0;
        animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;
        stroke-linecap: round;
        stroke: #007bff;
    }
    @@keyframes rotate {
        100% {
            transform: rotate(360deg);
        }
    }
    @@keyframes dash {
        0% {
            stroke-dasharray: 1, 200;
            stroke-dashoffset: 0;
        }
        50% {
            stroke-dasharray: 89, 200;
            stroke-dashoffset: -35;
        }
        100% {
            stroke-dasharray: 89, 200;
            stroke-dashoffset: -124;
        }
    }
    .sf-visible {
        visibility: visible;
    }
    .sf-hidden {
        visibility: hidden;
    }
    .prerender-style {
        margin: 2px;
    }
</style>
@{#if SERVER}
<style>
    /*  Apply styles specifically for devices with a screen width of 767px or less (typically smartphones)  */
    @@media (max-width: 767px) {
        .sb-body-overlay {
            display: none;
        }
    }
</style>
@{#endif}
<div class="@classNames @CssClass">
    <div id="loader" class="@loadingClass">
        <svg class="circular prerender-style" height="40" width="40" role="progressbar">
            <circle class="path" cx="25" cy="25" r="20" fill="none" stroke-width="6" stroke-miterlimit="10"></circle>
        </svg>
    </div>
    <div class="sb-caption">
        @{ var loading_text = "Loading Syncfusion Blazor " + demoName + " Demos…";}
        <h4 class="my-4" id="Loading-Text">@loading_text</h4>
    </div>
</div>
@code {
    private string classNames = "sb-body-overlay";
    private string loadingClass = "sb-loading";
    private string? demoName { get; set; }
    [Parameter]
    public string CssClass { get; set; }

    /// <summary>
    /// Hides the Spinner component.
    /// </summary>
    public void Hide()
    {
        if (classNames.Contains("sb-body-overlay"))
        {
            classNames = SampleUtils.AddClass(classNames, SampleUtils.HIDDEN);
        }
        StateHasChanged();
    }

    /// <summary>
    /// Shows the Spinner component.
    /// </summary>
    public void Show()
    {
        classNames = SampleUtils.RemoveClass(classNames, SampleUtils.HIDDEN);
        StateHasChanged();
    }

    public void NotifyOpened()
    {
        classNames = SampleUtils.AddClass(classNames, "sb-notification-overlay");
        classNames = SampleUtils.RemoveClass(classNames, SampleUtils.HIDDEN);
        classNames = SampleUtils.RemoveClass(classNames, "sb-body-overlay");
        loadingClass = SampleUtils.AddClass(loadingClass, SampleUtils.HIDDEN);
        StateHasChanged();
    }
    public void NotifyClosed()
    {
        classNames = SampleUtils.RemoveClass(classNames, "sb-notification-overlay");
        classNames = SampleUtils.AddClass(classNames, SampleUtils.HIDDEN);
        classNames = SampleUtils.AddClass(classNames, "sb-body-overlay");
        loadingClass = SampleUtils.RemoveClass(loadingClass, SampleUtils.HIDDEN);
        StateHasChanged();
    }

    /// <summary>
    /// Sets model layout to the app background to prevent mouse interaction.
    /// </summary>
    public void ShowModalSpinner()
    {
        classNames = SampleUtils.RemoveClass(classNames, SampleUtils.MODAL_CLASS);
        if (classNames.Contains("sb-body-overlay"))
        {
             classNames = SampleUtils.AddClass(classNames, SampleUtils.HIDDEN);
        }
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        #if WASM
            demoName = "Web Assembly";
        #else
            demoName = "Server";
        #endif
    }
}
