﻿@using System.Threading;
@using Syncfusion.Blazor.Buttons;
@using Syncfusion.Blazor.Navigations;
@using Syncfusion.Blazor.Cards;
@using Syncfusion.Blazor.SplitButtons;


@namespace BlazorDemos.Shared

@inject SampleService SampleService;
@inject IJSRuntime JS

@if (isLazyLoad)
{
    <div class="sf-showcase-demo" style="pointer-events: none;">
        <h2>See how our components can be transformed into beautiful and efficient apps</h2>
        <div id="cardList">
            <div class="card-container">
                @foreach (var data in dataSource ?? new List<ShowCaseItem>())
                {
                    <div class="card-control-section tile_layout">
                        <div class='row e-card-layout' style="margin: auto">
                            <div class="card-container-content">
                                <SfCard style=@($"background:{data.BgColor}")>
                                    <div class="image-container">
                                        <CardImage Image="@data.ImagePath" />
                                    </div>
                                    <CardContent>
                                        <div class="">
                                            <p class="sample-heading">@data.Header</p>
                                            <div class="">
                                                <p class="sample-description">@data.Content</p>
                                            </div>
                                        </div>
                                        <div class="card-footer-content" style="pointer-events: auto;">
                                            <div id="sf-view-demo-dropdown">
                                                @if(data.isServer && data.isWasm){
                                                    <SfDropDownButton Content="View Demo" CssClass="showcase-demo-btn">
                                                        <DropDownButtonEvents ItemSelected="@((e) => NavigateDemo(e, data.DemoUrl))">
                                                        </DropDownButtonEvents>
                                                        <DropDownMenuItems>
                                                            <DropDownMenuItem Text="Server App"></DropDownMenuItem>
                                                            <DropDownMenuItem Text="WASM App"></DropDownMenuItem> 
                                                        </DropDownMenuItems>
                                                    </SfDropDownButton>
                                                }
                                                else{
                                                    if(data.isServer){
                                                        <SfButton IsPrimary="true" CssClass="showcase-demo-btn" OnClick="@(() => NavigateSingleDemo("server", data.DemoUrl))">Server Demo</SfButton>
                                                    }
                                                    else{
                                                        <SfButton IsPrimary="true" CssClass="showcase-demo-btn" OnClick="@(() => NavigateSingleDemo("wasm", data.DemoUrl))">WASM Demo</SfButton>
                                                    }
                                                }
                                            </div>
                                            <a class="showcase-github-btn" href="@data.GitHubLink" target="_blank">
                                                <div class="browse-code">
                                                    <img class="github-logo" alt="Github Logo" src="https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/github-logo.svg">
                                                    <span class="github-btn-content">Browse Code</span>
                                                </div>
                                            </a>
                                        </div>
                                    </CardContent>
                                </SfCard>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="direction" style="pointer-events: auto; position: relative; bottom: 250px;">
            <div class="prev">
                <SfButton IconCss="sb-icons sf-left-arrow-icon" CssClass="e-round" IsPrimary="true" aria-label="Navigate to previous showcase application" style="pointer-events:auto" @onclick="PrevScroll"></SfButton>
            </div>
            <div class="next">
                <SfButton IconCss="sb-icons sf-right-arrow-icon" CssClass="e-round" IsPrimary="true" aria-label="Navigate to next showcase application" style="pointer-events:auto" @onclick="NextScroll"></SfButton>
            </div>
        </div>
        @if(isProgress){
            <div class="sf-showcase-progress">
                <div class="sf-showcase-steps">
                    @for (var i = 0; i < dataCount - count; i++)
                    {
                        <span class="sf-showcase-step"></span>
                    }
                </div>
            </div>
        }

    </div>
}


@code {

    private int dataCount;
    private int count;
    private bool isLazyLoad;
    private bool isProgress = false;
    private string? NavDemo_Url;
    private List<ShowCaseItem>? dataSource;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        var gitHubPath = "https://github.com/syncfusion/blazor-showcase-";
        dataSource = new List<ShowCaseItem>() {
           new ShowCaseItem("Expense Tracker", "Track and visualize your daily expenses with a great UI.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/expense-tracker.webp", "expensetracker/", gitHubPath + "expense-tracker", "#E8FCD4", true, true),
           new ShowCaseItem("Health Tracker", "Monitor health metrics like steps and calories.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/health-tracker.webp", "health-tracker/", gitHubPath + "healthtracker", "#FEEBEB", false, true),
           new ShowCaseItem("Appointment Planner", "A scheduling app for doctors to manage clinic appointments.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/appointment-planner.webp", "appointmentplanner/", gitHubPath + "appointment-planner", "#EFEFFF", true, true),
           new ShowCaseItem("Document Explorer", "Manage and edit documents and images with a file tool.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/document-explorer.webp", "documentexplorer/", gitHubPath + "document-explorer", "#E9F4FF", true, false),
           new ShowCaseItem("Diagram Builder", "Create flow charts and diagrams with a web app.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/diagram-builder.webp", "diagrambuilder/", gitHubPath + "diagram-builder", "#FAECFC", true, true),
           new ShowCaseItem("Mind Map Maker", "Mind map shows ideas linked around a central concept.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/mind-map-maker.webp", "mind-map/", gitHubPath + "mindmap", "#FEEBEB", true, true),
           new ShowCaseItem("Org Chart Creator", "Illustrate company structure with organizational charts.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/org-chart-creator.webp", "organization-chart/", gitHubPath + "organizational-chart", "#FEEBEB", true, true),
           new ShowCaseItem("BPMN Editor", "BPMN diagrams map complex business processes like flowcharts.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/bpmn-editor.webp", "bpmn-editor/", gitHubPath + "bpmn-editor", "#EFEFFF", true, true),
           new ShowCaseItem("Logic Circuit Designer", "Design and simulate logic circuits with gates and I/O components.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/logic-circuit-designer.webp", "logic-circuit-designer/", gitHubPath + "logic-circuit-designer", "#E9F4FF", true, true),
           new ShowCaseItem("Floor Planner", "Plan building layouts with this design tool.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/floor-planner.webp", "floor-planner/", gitHubPath + "floor-planner", "#E8FCD4", true, true),
           new ShowCaseItem("Fitness Tracker", "Track routines and visualize fitness metrics.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/fitness-tracker.webp", "fitness-tracker/", gitHubPath + "fitness-tracker", "#FEEBEB", true, false),
           new ShowCaseItem("Loan Calculator", "Effortlessly Calculate and track the loan details easily.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/loan-calculator.webp", "wasm/loan-calculator/", gitHubPath + "loan-calculator", "#EFEFFF", false, true),
           new ShowCaseItem("Stay Reservation", "Manage bookings and room occupancy efficiently.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/hotel-booking-app.webp", "stay-reservation/", gitHubPath + "stay-reservation", "#FAECFC", true, false),
           new ShowCaseItem("Stockmarket Dashboard", "Monitor stock prices with a dynamic dashboard.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/stock-market.webp", "stockmarket-dashboard/", gitHubPath + "stockmarket-dashboard", "#FEEBEB", true, false),
           new ShowCaseItem("Sprint Management", "Manage task progress using an agile sprint board.", "https://cdn.syncfusion.com/content/images/products/ShowcaseSamples/blazor-samples/sprint-management.webp", "sprint-management/", gitHubPath + "sprint-management", "#FEEBEB", true, false),
    };

        dataCount = dataSource.Count;
        isLazyLoad = true;
    }



    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender){
            count = await this.JS.InvokeAsync<int>("updateProgressSteps");
            isProgress = true;
            StateHasChanged();
        }
        await JS.InvokeAsync<string>("initializeCarousel", "#cardList");
    }

    private async Task NextScroll()
    {
        await JS.InvokeVoidAsync("scrollNext");
    }

    private async Task PrevScroll()
    {
        await JS.InvokeVoidAsync("scrollPrev");
    }

    private async Task NavigateDemo(MenuEventArgs args, string demoUrl)
    {
        if(args.Item.Text == "Server App") {
            NavDemo_Url = "https://blazor.syncfusion.com/showcase/" + demoUrl;
        }
        else{
            NavDemo_Url = "https://blazor.syncfusion.com/showcase/wasm/" + demoUrl;
        }
        await JS.InvokeVoidAsync("open", NavDemo_Url, "_blank");
    }

    private async Task NavigateSingleDemo(string isMode, string demoUrl)
    {
        if(isMode == "server"){
            NavDemo_Url = "https://blazor.syncfusion.com/showcase/" + demoUrl;
        }
        else
        {
            NavDemo_Url = "https://blazor.syncfusion.com/showcase/wasm/" + demoUrl;
        }
        await JS.InvokeVoidAsync("open", NavDemo_Url, "_blank");
    }
}

<style>

    #cardList .e-card-button {
        border: none;
    }

    #cardList .e-card-image {
        height: 180px;
        transition: transform 0.3s ease-in-out;
        pointer-events: auto;
        z-index:1;
        /* width: 240px; */
    }

    #cardList .e-card .image-container:hover .e-card-image {
        transform: scale(1.1);
        z-index: 2;
    }

    #cardList .card-text-value {
        text-align: left;
        font-weight: 500;
    }

    #cardList .tile_layout.card-control-section .row.filter .col-xs-6.col-sm-6.col-lg-6.col-md-6 {
        display: inline-flex;
        flex-direction: column;
        width: 100%;
    }

    #cardList .tile_layout.card-control-section .col-xs-6.col-sm-6.col-lg-6.col-md-6 {
        width: 100%;
        padding: 10px;
    }

    #cardList .card-control-section.tile_layout .e-card-layout {
        margin: auto;
        width: 350px;
    }

    #cardList .e-card-header {
        padding-left: inherit !important;
    }


    #cardList .e-card .e-card-header .e-card-header-caption .e-card-header-title {
        font-weight: bold;
    }

    #cardList .card-container {
        margin-top: 200px;
        display: flex;
        flex-direction: row;
        align-content: center;
    }

    #cardList .card-container-content {
        padding: 0px 20px;
    }

    #cardList .card-footer-content {
        display: flex;
        flex-direction: row;
        font-size: 12px !important;
    }

    #cardList .card-footer-content a {
        color: #0057FF;
        font-weight: 600;
    }

    .sf-showcase-demo {
        background-color: #FAFBFF;
    }

    .sf-showcase-demo h2 {
        color: #1E293B;
        z-index: auto;
    }

    #cardList .e-card .image-container {
        padding: 20px 0px 0px 20px;
    }

    #cardList .e-card {
        /* background-color: bisque; */
        height: 370px;
        box-shadow: 2px 6px 15px 0 rgba(22, 22, 26, 0.18);
    }

    #cardList .e-card .e-card-content {
        background-color: #fff;
        padding: 16px !important;
        height: 170px;
        z-index: 2;
    }

    #cardList .sample-heading {
        font-weight: 600;
        font-size: 18px;
        line-height: 30px;
        letter-spacing: 0.4px;
        color: #1E293B;
    }

    #cardList .sample-description {
        font-weight: 400;
        font-size: 13px;
        line-height: 22px;
        color: #6C7787;
        width: 90%;
        padding: 8px 0px;
        min-height: 60px;
    }

    #cardList {
        width: 1280px;
        max-width: 100%;
        overflow: auto;
        margin: 0px auto 50px;
        scroll-behavior: smooth;
        scroll-snap-type: both;
    }

    #cardList::-webkit-scrollbar {
        display: none;
    }

    .button-disabled {
        opacity: 0.5;
        cursor: default;
    }

    @@media (min-width: 1024px) and (max-width: 1080px) {
        #cardList {
            width: 850px !important;
        }

        .sf-showcase h2 {
            font-size: 33px;
            width: 75%;
        }
    }

    @@media (min-width: 1080px) and (max-width: 1200px) {
        #cardList {
            width: 835px !important;
        }

        .sf-showcase h2 {
            font-size: 33px;
            width: 75%;
        }

        .direction .next .e-btn {
            margin-right: 75px;
        }

        .direction .prev .e-btn {
            margin-left: 85px;
        }
    }

    @@media (min-width: 1200px) and (max-width: 1400px) {
        #cardList {
            width: 940px !important;
        }

        .sf-showcase h2 {
            font-size: 33px;
            width: 70%;
        }

        .direction .next .e-btn {
            margin-right: 75px;
        }

        .direction .prev .e-btn {
            margin-left: 85px;
        }
    }

    @@media (min-width: 1400px) and (max-width: 1500px) {
        .sf-showcase h2 {
            width: 65% !important;
        }
    }
</style>

