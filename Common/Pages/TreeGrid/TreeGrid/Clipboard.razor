@page "/tree-grid/clipboard"

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.TreeGrid
@using Syncfusion.Blazor.Navigations
@*Hidden:Lines*@
@using Selfdata
@inherits SampleBaseComponent;
@*End:Hidden*@

@{
    List<ItemModel> Toolbar = new List<ItemModel>();
    Toolbar.Add(new ItemModel { Text = "Copy", TooltipText = "Copy", PrefixIcon = "e-copy", Id = "copy" });
    Toolbar.Add(new ItemModel { Text = "Copy With Header", TooltipText = "Copy With Header", PrefixIcon = "e-copy", Id = "copyHeader" });
}

<SampleDescription>
    <p>This sample demonstrates copy to clipboard functionality of the Tree Grid component. Select rows and click 'Copy' button from the toolbar to copy the content of rows. To copy with header, click 'Copy With Header' button from toolbar. </p>
</SampleDescription>
<ActionDescription>
    <p>In this demo, selected rows' data can be copied into the clipboard using the following keyboard shortcuts, toolbar interactions, or the <a aria-label="Navigate to the CopyAsync method reference for the tree grid component" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.TreeGrid.SfTreeGrid-1.html#Syncfusion_Blazor_TreeGrid_SfTreeGrid_1_CopyAsync_System_Nullable_System_Boolean__">CopyAsync</a> method.</p>
    <ul>
        <li><code>Ctrl + C</code> - Selects rows or cells data without the header.</li>
        <li><code>Ctrl + Shift + H</code> - Selects rows or cells data with the header.</li>
    </ul>
    <p>More information on the clipboard can be found in this <a aria-label="Navigate to documentation for clipboard in the tree grid component" target="_blank" href="https://blazor.syncfusion.com/documentation/treegrid/clipboard/">documentation section</a>.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
             <SfTreeGrid @ref="@TreeGridInstance" Toolbar="Toolbar" Height="312" DataSource="@TreeData" IdMapping="TaskID" AllowPaging="true" ParentIdMapping="ParentID" TreeColumnIndex="1">
                <TreeGridEvents TValue="SelfReferenceData" OnToolbarClick="HandleToolbarClick"></TreeGridEvents>
                <TreeGridSelectionSettings Type="SelectionType.Multiple"></TreeGridSelectionSettings>
                <TreeGridPageSettings PageSize="2"></TreeGridPageSettings>
                <TreeGridColumns>
                    <TreeGridColumn Field="TaskID" HeaderText="Task ID" Width="80" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="TaskName" HeaderText="Task Name" Width="145"></TreeGridColumn>
                    <TreeGridColumn Field="StartDate" HeaderText="Start Date" Format="d" Type=ColumnType.Date Width="140" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Duration" HeaderText="Duration" Width="100" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Progress" HeaderText="Progress" Width="100"></TreeGridColumn>
                    <TreeGridColumn Field="Priority" HeaderText="Priority" Width="100"></TreeGridColumn>

                </TreeGridColumns>
            </SfTreeGrid>
        </div>
    </div>
</div>

@code{
    SfTreeGrid<SelfReferenceData> TreeGridInstance { get; set; } = null!;

    private List<SelfReferenceData> TreeData { get; set; } = new List<SelfReferenceData>();
    
    protected override void OnInitialized()
    {
        TreeData = SelfReferenceData.GetTree().ToList();
    }

    public async void HandleToolbarClick(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        var selectedTasks = await TreeGridInstance.GetSelectedRecordsAsync();
        if (selectedTasks.Any())
        {
            bool includeHeader = args.Item.Id == "copyHeader";
            await TreeGridInstance.CopyAsync(includeHeader);
        }
    }
}
