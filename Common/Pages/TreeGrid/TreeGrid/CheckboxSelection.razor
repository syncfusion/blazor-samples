@page "/tree-grid/checkbox-selection"

@using Syncfusion.Blazor.TreeGrid
@using Syncfusion.Blazor.Grids
@*Hidden:Lines*@
@using Selfdata
@inherits SampleBaseComponent;
@*End:Hidden*@

<SampleDescription>
    <p>This sample uses checkbox selection to demonstrate the Tree Grid's selection functionality. Use the header checkbox to select and deselect all rows. To select or deselect a specific row, click the checkbox in desired row.</p>
</SampleDescription>
<ActionDescription>
    <p>To display a checkbox in each Tree Grid row, set the <a aria-label="Navigate to the type property of tree grid column" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.TreeGrid.TreeGridColumn.html#Syncfusion_Blazor_TreeGrid_TreeGridColumn_Type">Type</a> property of <a aria-label="Navigate to class reference to Tree Grid column" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.TreeGrid.TreeGridColumn.html">TreeGridColumn</a> to Checkbox.</p>
    <p>The <a aria-label="Navigate to PersistSelection property reference for tree grid selection settings" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.TreeGrid.TreeGridSelectionSettings.html#Syncfusion_Blazor_TreeGrid_TreeGridSelectionSettings_PersistSelection">PersistSelection</a> property of <a aria-label="Navigate to class reference to tree grid selection settings" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.TreeGrid.TreeGridSelectionSettings.html">TreeGridSelectionSettings</a> can be used to persist selection across all Tree Grid operations. Any of the columns should be defined as a primary key using the <a aria-label="Navigate to the IsPrimary-key property for tree grid column" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.TreeGrid.TreeGridColumn.html#Syncfusion_Blazor_TreeGrid_TreeGridColumn_IsPrimaryKey">IsPrimaryKey</a> property of <a aria-label="Navigate to class reference to Tree Grid column" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.TreeGrid.TreeGridColumn.html">TreeGridColumn</a> for persistent selection.</p>
    <p>In this demo, Tree Grid multiple selection has been enabled with selection persistence.</p>
    <p>More information on the checkbox selection feature can be found in this <a aria-label="Navigate to the documentation for the checkbox selection in the tree grid component" target="_blank" href="https://blazor.syncfusion.com/documentation/treegrid/selection/#checkbox-selection">documentation section.</a></p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfTreeGrid DataSource="TreeData" IdMapping="TaskID" ParentIdMapping="ParentID" TreeColumnIndex="2" Height="326">
                <TreeGridSelectionSettings PersistSelection="true" CheckboxOnly="true"></TreeGridSelectionSettings>
                <TreeGridColumns>
                    <TreeGridColumn Type="Syncfusion.Blazor.Grids.ColumnType.CheckBox" IsPrimaryKey="true" Width="50"></TreeGridColumn>
                    <TreeGridColumn Field="TaskID" HeaderText="Task ID" Width="120" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="TaskName" HeaderText="Task Name" Width="145"></TreeGridColumn>
                    <TreeGridColumn Field="StartDate" HeaderText="Start Date" Format="d" Type=ColumnType.Date Width="100" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Duration" HeaderText="Duration" Width="100" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Progress" HeaderText="Progress" Width="110"></TreeGridColumn>
                    <TreeGridColumn Field="Priority" HeaderText="Priority" Width="100"></TreeGridColumn>

                </TreeGridColumns>
            </SfTreeGrid>
        </div>
    </div>
</div>

@code{

    private List<SelfReferenceData> TreeData { get; set; } = new List<SelfReferenceData>();

    protected override void OnInitialized()
    {
        TreeData = SelfReferenceData.GetTree().Take(12).ToList();
    }
}
