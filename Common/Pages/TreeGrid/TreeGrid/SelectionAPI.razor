@page "/tree-grid/selection-api"

@using Syncfusion.Blazor.TreeGrid
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons

@*Hidden:Lines*@
@using Selfdata
@inherits SampleBaseComponent;
@*End:Hidden*@

<SampleDescription>
 <p>This sample demonstrates the Tree Grid's programmatic selection functionality. In this demo, you can select multiple rows from the properties panel by entering the start and end indexes and then clicking the select row button. Click the clear selection button to clear all selected rows.</p>
</SampleDescription>
<ActionDescription>
    <p>The selection feature allows you to highlight the row or cell that you select interactively. A simple mouse down or keyboard interaction can be used to make a selection. Set <a aria-label="Navigate to the AllowSelection property reference for tree grid rows" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.TreeGrid.SfTreeGrid-1.html#Syncfusion_Blazor_TreeGrid_SfTreeGrid_1_AllowSelection">AllowSelection</a> property to true to enable selection.</p>
    <p>Tree Grid supports the following two types of selection, which can be set using the <a aria-label="Navigate to the type property reference for tree grid selection settings" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.TreeGrid.TreeGridSelectionSettings.html#Syncfusion_Blazor_TreeGrid_TreeGridSelectionSettings_Type">TreeGridSelectionSettings->Type</a> property.</p>
    <ul>
        <li><code>SelectionType.Single</code> - By default, it is enabled. Allows the user to select only one row or cell at a time.</li>
        <li><code>SelectionType.Multiple</code> - Allows the user to select multiple rows/cells at once.</li>
    </ul>
    <p>It also supports the following three modes of selection, which can be set using the <a aria-label="Navigate to the mode property reference for tree grid selection settings" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.TreeGrid.TreeGridSelectionSettings.html#Syncfusion_Blazor_TreeGrid_TreeGridSelectionSettings_Mode">TreeGridSelectionSettings->Mode</a> property.</p>
    <ul>
        <li><code>Row</code> - By default, it is enabled. Allows row selection in the Tree Grid.</li>
        <li><code>Cell</code> - Allows cell selection in the Tree Grid.</li>
        <li><code>Both</code> - Allows for both row and cell selection. By clicking any cell, you will select both the row and the cell at the same time.</li>
    </ul>
    <p>Cell selection supports the following two modes, which can be configured using the <a aria-label="Navigate to the cell selection mode property reference for tree grid selection settings" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.TreeGrid.TreeGridSelectionSettings.html#Syncfusion_Blazor_TreeGrid_TreeGridSelectionSettings_CellSelectionMode">TreeGridSelectionSettings->CellSelectionMode</a> property.</p>
    <ul>
        <li><code>Flow</code> - By default, the Flow value is set. The range of cells is chosen between the start and end indexes, which includes cells in between rows.</li>
        <li><code>Box</code> - A range of cells is chosen from the start and end column indexes, which includes cells in between rows within the range.</li>
    </ul>
    <p>Hold down the <strong>CTRL</strong> key and click the desired rows/cells to perform a multi-selection. Hold the <strong>SHIFT</strong> key and click the rows/cells to select a range of rows/cells.</p>
    <p>When using the Tree Grid in a touch device environment, tap on the row to bring up a popup with the multi-selection icon. Then tap the icon for multiple selection with a single click.</p>
    <p>More information on selection can be found in this <a aria-label="Navigate to the documentation for selection in tree grid component" target="_blank" href="https://blazor.syncfusion.com/documentation/treegrid/selection/">documentation section</a>.</p>
</ActionDescription>

<div class="col-lg-9 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfTreeGrid @ref="TreeGridInstance" DataSource="@TreeGridData" IdMapping="TaskID" ParentIdMapping="ParentID" TreeColumnIndex="1" Height="312" AllowPaging="true" AllowSelection="true">
                <TreeGridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple" Mode="Syncfusion.Blazor.Grids.SelectionMode.Row"></TreeGridSelectionSettings>
                <TreeGridPageSettings PageSize="2"></TreeGridPageSettings>
                <TreeGridColumns>
                    <TreeGridColumn Field="TaskID" HeaderText="Task ID" Width="80" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="TaskName" HeaderText="Task Name" Width="170"></TreeGridColumn>
                    <TreeGridColumn Field="StartDate" HeaderText="Start Date" Format="d" Type=ColumnType.Date Width="100" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Duration" HeaderText="Duration" Width="100" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Progress" HeaderText="Progress" Width="110"></TreeGridColumn>
                    <TreeGridColumn Field="Priority" HeaderText="Priority" Width="100"></TreeGridColumn>

                </TreeGridColumns>
            </SfTreeGrid>

        </div>
    </div>
</div>

<div class="col-lg-3 property-section">
    <h4 style="margin-top:38px;">Properties</h4>

    <table id="property" style="width: 73%; height: 300px;">
        <tr>
            <td class="left-side" style="padding-right:15px;"><b>Select Rows</b></td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;">Start</td>
            <td>
                <SfNumericTextBox @ref="StartRow" TValue="int?" Min="0" Max="12" Format="##0"></SfNumericTextBox>
            </td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;">To</td>
            <td>
                <SfNumericTextBox @ref="EndRow" TValue="int?" Min="1" Max="12" Format="##0"></SfNumericTextBox>
            </td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;"><b>Select Row</b></td>
            <td>
                <SfButton OnClick="Select" IsPrimary="true">Select Row</SfButton>
            </td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;"><b>Clear Selection</b></td>
            <td>
                <SfButton OnClick="Clear" IsPrimary="true">Clear Selection</SfButton>
            </td>
        </tr>
    </table>
</div>

@code{
    
    private SfTreeGrid<SelfReferenceData> TreeGridInstance { get; set; } = new SfTreeGrid<SelfReferenceData>();

    private SfNumericTextBox<int?> StartRow { get; set; } = new SfNumericTextBox<int?>();

    private SfNumericTextBox<int?> EndRow { get; set; } = new SfNumericTextBox<int?>();

    private List<int> Rows { get; set; } = new List<int>();

    private List<SelfReferenceData> TreeGridData { get; set; } = new    List<SelfReferenceData>();

    protected override void OnInitialized()
    {
        TreeGridData = SelfReferenceData.GetTree().ToList();
    }

    public async void Select(MouseEventArgs args)
    {
        if (StartRow.Value.HasValue && EndRow.Value.HasValue)
        {
            int startRow = (StartRow.Value).Value;
            int endRow = (EndRow.Value).Value;
            if (endRow < startRow)
            {
                int Swap = endRow;
                endRow = startRow;
                startRow = Swap;
            }
            for (int i = startRow; i <= endRow; i++)
            {
                Rows.Add(i);
            }
            await TreeGridInstance.SelectRowsAsync(Rows.ToArray());
            Rows.Clear();
        }
    }

    public async void Clear(MouseEventArgs args)
    {
        await TreeGridInstance.ClearSelectionAsync();
        Rows.Clear();
    }

}
