@page "/datagrid/column-menu"

@using Syncfusion.Blazor.Grids
@*Hidden:Lines*@
@using BlazorDemos
@using blazor_ordersdetails
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
  <p>This sample demonstrates the DataGrid column menu feature's default functionality. To open the column menu, click on the multiple icon in each column.</p>
</SampleDescription>
<ActionDescription>
   <p>When you click the multiple icon in a column, the Blazor DataGrid will display a column menu. The column menu includes options for interacting with features such as sorting, grouping, filtering, column chooser, and autofit. By setting the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.SfGrid-1.html#Syncfusion_Blazor_Grids_SfGrid_1_ShowColumnMenu' aria-label="Navigate to the ShowColumnMenu property reference for DataGrid component">ShowColumnMenu</a> property value to <b>true</b>, you can enable the column menu. The column menu's default items are,</p>
   <ul>
       <li><strong>SortAscending</strong> - Sort the current column in ascending order.</li>
       <li><strong>SortDescending</strong> - Sort the current column in descending order.</li>
       <li><strong>Group</strong> - Group the current column.</li>
       <li><strong>Ungroup</strong> - Ungroup the current column.</li>
       <li><strong>AutoFit</strong> - Auto fit current column.</li>
       <li><strong>AutoFitAll</strong> - Auto fit all columns.</li>
       <li><strong>ColumnChooser</strong> - Choose the column visibility.</li>
       <li><strong>Filter</strong> - Show the filter option as given in <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridFilterSettings.html#Syncfusion_Blazor_Grids_GridFilterSettings_Type' aria-label="Navigate to the Type property reference for Grid filter settings">Type</a> property of the <a target='_blank' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.Blazor.Grids.GridFilterSettings.html' aria-label="Navigate to the class reference for GridFilterSettings">GridFilterSettings</a> component.</li>
    </ul>
    <p>Column menu functionality is enabled in this demo, including sorting, grouping, filtering, column chooser, and autofit options.</p>
    <p>More information about the Column menu feature can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/datagrid/column-menu' aria-label="Navigate to the documentation for Column Menu in DataGrid component">documentation</a> section.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@GridData" Height="400" AllowGrouping="true" AllowSorting="true" AllowFiltering="true" AllowPaging="true" ShowColumnMenu="true">
               <GridFilterSettings Type="@Syncfusion.Blazor.Grids.FilterType.CheckBox"></GridFilterSettings>
                <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" TextAlign="TextAlign.Right"  Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer ID" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) Format="C2" Width="120" TextAlign="TextAlign.Right"  EditType="EditType.NumericEdit"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipName) HeaderText="Ship Name" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Visible="false" Width="200"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCity) HeaderText="Ship City" Width="150"></GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code{

    public List<OrdersDetails>? GridData { get; set; }


    protected override void OnInitialized()
    {

        GridData = OrdersDetails.GetAllRecords();
    }
}