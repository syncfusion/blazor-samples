@page "/datagrid/reorder"

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.DropDowns
@*Hidden:Lines*@
@using BlazorDemos
@using blazor_ordersdetails
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
   <p>This example shows how to reorder the DataGrid columns. You can reorder columns by dragging and dropping them into the desired column position.</p> 
</SampleDescription>
<ActionDescription>
    <p>The Blazor DataGrid Reordering feature can be enabled by setting <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.SfGrid-1.html#Syncfusion_Blazor_Grids_SfGrid_1_AllowReordering' aria-label="Navigate to the AllowReordering property reference for DataGrid component">AllowReordering</a> property as <b>true</b>. </p>
   <p>Reordering can be accomplished in this demo by dragging and dropping the column header from one index to another within the DataGrid. Two arrow symbols indicate the location where the column will be placed.</p>
    <p>More information about the column Reordering feature can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/datagrid/column-reorder' aria-label="Navigate to the documentation for Column Reorder in DataGrid component">documentation</a> section.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@GridData" AllowReordering="true" AllowPaging="true">
                <GridPageSettings PageCount="5"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" IsPrimaryKey="true" TextAlign="TextAlign.Right" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer ID" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) TextAlign="TextAlign.Right" Width="120" Format="C2"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCity) HeaderText="Ship City" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Width="150"></GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code{

    public List<OrdersDetails>? GridData { get; set; }
    

    public class Columns
    {
        public string? id { get; set; }

        public string? name { get; set; }
    }

    private List<Columns> columns = new List<Columns>()
    {
        new Columns(){ id= "Order ID", name= "Order ID" },
        new Columns(){ id= "Customer ID", name= "Customer ID" },
        new Columns(){ id= "Freight", name= "Freight" },
        new Columns(){ id= "Ship City", name= "Ship City" },
        new Columns(){ id= "Ship Country", name= "Ship Country" },
    };

    public class Index
    {
        public string? id { get; set; }

        public string? index { get; set; }
    }

    private List<Index> indexes = new List<Index>()
    {
        new Index(){ id= "1", index= "1" },
        new Index(){ id= "2", index= "2" },
        new Index(){ id= "3", index= "3" },
        new Index(){ id= "4", index= "4" },
        new Index(){ id= "5", index= "5" },
    };

    protected override void OnInitialized()
    {
        
        GridData = OrdersDetails.GetAllRecords();
    }
}