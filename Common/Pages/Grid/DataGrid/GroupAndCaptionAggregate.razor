@page "/datagrid/group-and-caption-aggregate"

@using Syncfusion.Blazor.Grids
@*Hidden:Lines*@
@using BlazorDemos
@using blazor_categorydata
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
   <p>This sample demonstrates the DataGrid's aggregate functionality. In this sample, the aggregate value of the Units in Stock and Discontinued columns is displayed in the group footer. The aggregate value of the Units in Stock column is also displayed in the group caption.</p> 
</SampleDescription>
<ActionDescription>
    <p>The Blazor DataGrid supports aggregates which will be displayed at the footer, group footer and group caption of the DataGrid. The aggregate configurations can be provided by using the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridAggregates.html' aria-label="Navigate to the class reference for GridAggregates">GridAggregates</a> component.</p>
    <p>The built-in aggregates are,</p>
    <ul>
        <li><strong>Sum</strong></li>    
        <li><strong>Average</strong></li>    
        <li><strong>Min</strong></li>    
        <li><strong>Max</strong></li>    
        <li><strong>Count</strong></li>    
        <li><strong>TrueCount</strong></li>    
        <li><strong>FalseCount</strong></li>
    </ul>   
    <p>In this demo, the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridAggregateColumn.html#Syncfusion_Blazor_Grids_GridAggregateColumn_GroupFooterTemplate' aria-label="Navigate to the GroupFooterTemplate property reference for GridAggregateColumn">GroupFooterTemplate</a> is used for displaying the group footer aggregation for the <strong><i>Units in Stock</i></strong> and <strong><i>Discontinued</i></strong> columns and <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridAggregateColumn.html#Syncfusion_Blazor_Grids_GridAggregateColumn_GroupCaptionTemplate' aria-label="Navigate to the GroupCaptionTemplate property reference for GridAggregateColumn">GroupCaptionTemplate</a> is used for displaying the group caption aggregation for the <strong><i>Unit In Stock</i></strong> column.</p>
    <p>To enable group footer aggregation for <strong><i>Units in Stock</i></strong> column, the <strong>Sum</strong> aggregate type is used by setting it in <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridAggregateColumn.html#Syncfusion_Blazor_Grids_GridAggregateColumn_Type' aria-label="Navigate to the Type property reference for GridAggregateColumn">Type</a> property and <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridAggregateColumn.html#Syncfusion_Blazor_Grids_GridAggregateColumn_Field' aria-label="Navigate to the Field property reference for GridAggregateColumn">Field</a> property value as <strong><i>UnitsInStock</i></strong> which will be used to perform the aggregation. The aggregate value is accessed inside the <code>GroupFooterTemplate </code>using its <code>Type</code> name (<strong>Unit.Sum</strong>) where <b>Unit</b> is an implicit named parameter - <b>Context</b>.</p>
    <p>To enable group caption aggregation for <strong><i>Units in Stock</i></strong> column, the <strong>Max</strong> aggregate type is used by setting it in <code>Type</code> property and the property is set as <strong><i>UnitsInStock</i></strong> which will be used to perform the aggregation. The aggregate value is accessed inside the <code>GroupCaptionTemplate</code> using its <code>Type</code> name (<strong>Unit.Max</strong>) where <b>Unit</b> is an implicit named parameter - <b>Context</b>.</p>
    <p>More information about the Group and Caption aggregate can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/datagrid/aggregates/#group-and-caption-aggregate' aria-label="Navigate to the documentation for Group and caption aggregate in DataGrid component">documentation</a> section.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@GridData" Height="400" AllowPaging="true" AllowGrouping="true">
                <GridGroupSettings Columns=@GroupedColumn></GridGroupSettings>
                <GridPageSettings PageCount="5"></GridPageSettings>
                <GridAggregates>
                    <GridAggregate>
                        <GridAggregateColumns>
                            <GridAggregateColumn Field=@nameof(Category.UnitsInStock) Type="AggregateType.Sum">
                                <GroupFooterTemplate>
                                    @{
                                        var Unit = (context as AggregateTemplateContext);
                                        <div>
                                            Total units: @Unit?.Sum
                                        </div>
                                    }
                                </GroupFooterTemplate>
                            </GridAggregateColumn>
                            <GridAggregateColumn Field=@nameof(Category.Discontinued) Type="AggregateType.TrueCount">
                                <GroupFooterTemplate>
                                    @{
                                        var Count = (context as AggregateTemplateContext);
                                        <div>
                                            Discontinued: @Count?.TrueCount
                                        </div>
                                    }
                                </GroupFooterTemplate>
                            </GridAggregateColumn>
                            <GridAggregateColumn Field=@nameof(Category.UnitsInStock) Type="AggregateType.Max">
                                <GroupCaptionTemplate>
                                    @{
                                        var Maxcount = (context as AggregateTemplateContext);
                                        <div>
                                            Maximum: @Maxcount?.Max
                                        </div>
                                    }
                                </GroupCaptionTemplate>
                            </GridAggregateColumn>
                        </GridAggregateColumns>
                    </GridAggregate>
                </GridAggregates>
                <GridColumns>
                    <GridColumn Field=@nameof(Category.CategoryName) HeaderText="Category Name" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(Category.ProductName) HeaderText="Product Name" Width="210"></GridColumn>
                    <GridColumn Field=@nameof(Category.QuantityPerUnit) HeaderText="Quantity per Unit"  Width="170"></GridColumn>
                    <GridColumn Field=@nameof(Category.UnitsInStock) HeaderText="Units in Stock" TextAlign="TextAlign.Right" Width="170"></GridColumn>
                    <GridColumn Field=@nameof(Category.Discontinued) HeaderText="Discontinued" Width="120" DisplayAsCheckBox=@true Type="ColumnType.Boolean" TextAlign="TextAlign.Center" ></GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code{

    private string[] GroupedColumn = new string[] { "CategoryName" };
    
    public List<Category>? GridData { get; set; }
    

    protected override void OnInitialized()
    {
        
        GridData = Category.GetAllRecords();
    }
}