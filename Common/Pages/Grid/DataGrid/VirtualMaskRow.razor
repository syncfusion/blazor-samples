@page "/datagrid/virtual-mask-row"

@using Syncfusion.Blazor.Grids
@*Hidden:Lines*@
@using BlazorDemos
@using blazor_orderdatas
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

@*Hidden:Lines*@
<style>
    .bootstrap5-dark .e-grid.sf-grid .e-masked-cell.e-rowcell .e-virtualcell {
        background-color: #FFFFFF;
    }

    .highcontrast .e-grid.sf-grid .e-masked-cell.e-rowcell .e-virtualcell {
        background-color: #ffd939;
    }
</style>
@*End:Hidden*@

<SampleDescription>
    <p>This sample shows the DataGrid component in action by displaying a virtual mask row while scrolling vertically to load a new set of records on demand.</p>
</SampleDescription>
<ActionDescription>
    <p>The Blazor DataGrid component allows you to render only the rows and columns that are visible in the view-port without buffering the entire datasource, and a loading placeholder indicator was displayed while the new data was loaded.</p>
    <p>The <code>OverscanCount</code> property is used to render additional items in the DOM before and after the visible items (based on pagesize) during virtual scrolling and initial rendering. This reduces the frequency of rendering during scrolling. In this demo, the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.SfGrid-1.html#Syncfusion_Blazor_Grids_SfGrid_1_OverscanCount' aria-label="Navigate to the OverscanCount property reference for DataGrid component">OverscanCount</a> property is set to 5.</p>
    <p>Set the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.SfGrid-1.html#Syncfusion_Blazor_Grids_SfGrid_1_EnableVirtualMaskRow' aria-label="Navigate to the EnableVirtualMaskRow property reference for DataGrid component">EnableVirtualMaskRow </a>property value to <b>true</b> to enable mask row support. To improve performance, the same set of DOM elements is used again.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@GridData" Height="410" RowHeight="38" OverscanCount="5" EnableVirtualMaskRow="true" EnableVirtualization="true" >
                <GridPageSettings PageSize="30"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(Order.OrderID) HeaderText="Order ID" TextAlign="TextAlign.Right" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(Order.CustomerID) HeaderText="Customer ID" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(Order.OrderDate) HeaderText="Order Date" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right" Width="130"></GridColumn>
                    <GridColumn Field=@nameof(Order.Freight) Format="C2" TextAlign="TextAlign.Right" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(Order.ShipName) HeaderText="Ship Name" Width="170"></GridColumn>
                   <GridColumn Field=@nameof(Order.ShipCountry) HeaderText="Ship Country" Width="150"></GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code{

    public List<Order>? GridData { get; set; }
    

    protected override void OnInitialized()
    {
        
        GridData = Order.GetAllRecords();
    }
}