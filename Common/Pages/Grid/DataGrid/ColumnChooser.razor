@page "/datagrid/column-chooser"

@using Syncfusion.Blazor.Grids
@*Hidden:Lines*@
@using BlazorDemos
@using blazor_ordersdetails
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
  <p>The DataGrid with column chooser feature is demonstrated in this sample. To open the column chooser, click the column chooser icon in the toolbar, and then select columns to hide or show from the checkbox list.</p>
</SampleDescription>
<ActionDescription>
   <p>The DataGrid columns can be dynamically shown/hidden by using the column chooser functionality. Set the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.SfGrid-1.html#Syncfusion_Blazor_Grids_SfGrid_1_ShowColumnChooser' aria-label="Navigate to the ShowColumnChooser property reference for DataGrid component">ShowColumnChooser</a> property to <b>true</b> to enable the column chooser. You can also prevent the display of a column in column chooser by setting <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridColumn.html#Syncfusion_Blazor_Grids_GridColumn_ShowInColumnChooser' aria-label="Navigate to the ShowInColumnChooser property reference for Grid column">ShowInColumnChooser</a> to <b>false</b> in the columns definition.</p>
   <p>When the user clicks the column chooser icon in the toolbar in this demo, the column chooser menu appears. By changing the state of the checkbox, the user can show or hide the columns.</p>
   <p>More information about the Column chooser feature can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/datagrid/column-chooser' aria-label="Navigate to the documentation for Column Chooser in Blazor DataGrid component">documentation</a> section.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@GridData" ShowColumnChooser="true" Toolbar="@( new List<string>() { "ColumnChooser"})" AllowPaging="true">
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" TextAlign="TextAlign.Right"  IsPrimaryKey="true" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer ID" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.OrderDate) HeaderText="Order Date" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right"  Width="130"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) Format="C2" TextAlign="TextAlign.Right"  Width="200"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShippedDate) HeaderText="Shipped Date" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Visible="false" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCity) HeaderText="Ship City" Visible="false" Width="150"></GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code{

    public List<OrdersDetails>? GridData { get; set; }


    protected override void OnInitialized()
    {

        GridData = OrdersDetails.GetAllRecords();
    }
}