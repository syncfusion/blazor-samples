@page "/datagrid/show-or-hide-column"

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@*Hidden:Lines*@
@using blazor_ordersdetails
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates DataGrid's dynamic show or hide columns feature. Toggle the visibility of columns by clicking the switch button.</p>
</SampleDescription>
<ActionDescription>
    <p>The Blazor DataGrid column can be dynamically shown or hidden by using the DataGrid's <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.SfGrid-1.html#Syncfusion_Blazor_Grids_SfGrid_1_ShowColumnAsync_System_String_System_String_' aria-label="Navigate to the ShowColumnAsync method reference for DataGrid component">ShowColumnAsync</a> and <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.SfGrid-1.html#Syncfusion_Blazor_Grids_SfGrid_1_HideColumnAsync_System_String_System_String_' aria-label="Navigate to the HideColumnAsync method reference for DataGrid component">HideColumnAsync</a> methods.</p>
    <p>The columns in this demo can be shown or hidden by clicking the Switch buttons to toggle visibility. The visibility of the column is also toggled based on the <b>HeaderText</b> value.</p>
    <p>The visibility of a column is specified by the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridColumn.html#Syncfusion_Blazor_Grids_GridColumn_Visible' aria-label="Navigate to the Visible property reference for Grid column">Visible</a> property. Set the <code>Visible</code> property to <b>false</b> to hide a column during the initial rendering.</p>
    <p>More information about the Show and Hide columns feature can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/datagrid/columns#show-or-hide-columns' aria-label="Navigate to the documentation for Show or hide columns in DataGrid component">documentation</a> section.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <div class="e-mastertext">Click the switch to toggle visibility</div>
            <div class="e-switch-control">
                <div>
                    <label class="showhide" style="padding: 10px 5px 10px 0"> Order ID </label>
                    <SfSwitch ValueChange="@((Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args) => { change("Order ID", args); })" @bind-Checked="@Check" TChecked="bool"></SfSwitch>
                </div>
                <div>
                    <label class="showhide" style="padding: 10px 5px 10px 10px"> Customer ID </label>
                    <SfSwitch ValueChange="@((Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args) => { change("Customer ID", args); })" @bind-Checked="@Check1" TChecked="bool"></SfSwitch>
                </div>
                <div>
                    <label class="showhide" style="padding: 10px 5px 10px 10px"> Freight </label>
                    <SfSwitch ValueChange="@((Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args) => { change("Freight", args); })" @bind-Checked="@Check2" TChecked="bool"></SfSwitch>
                </div>
            </div>

            <SfGrid DataSource="@GridData" @ref="Grid" AllowPaging="true">
                <GridPageSettings PageCount="5"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" TextAlign="TextAlign.Right" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer ID" Visible="true" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.OrderDate) HeaderText="Order Date" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right" Width="130"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) Format="C2" Visible="true" TextAlign="TextAlign.Right" Width="120"></GridColumn>
                </GridColumns>
            </SfGrid>

        </div>
    </div>
</div>

@*Hidden:Lines*@
<style>
    .showhide {
        font-size: 15px;
        font-weight: 200;
    }

    .e-mastertext {
        font-size: 15px;
        font-family: Roboto;
        opacity: 0.87;
        padding: 1em;
    }

    .e-switch-control div {
        display: flex;
        align-items: center;
    }

    .e-switch-control  {
        width: auto;
        display: flex;
    }

</style>
@*End:Hidden*@

@code {
    SfGrid<OrdersDetails>? Grid;

    Boolean Check = true, Check1 = true, Check2 = true;

    public List<OrdersDetails>? GridData { get; set; }


    protected override void OnInitialized()
    {

        GridData = OrdersDetails.GetAllRecords();
    }

    public void change(string name, Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        if (this.Grid != null)
        {
            if (args.Checked)
            {
                this.Grid.ShowColumnAsync(name);
            }
            else
            {
                this.Grid.HideColumnAsync(name);
            }
        }
    }
}
