@page "/datagrid/selection"

@using Syncfusion.Blazor.Grids
@*Hidden:Lines*@
@using BlazorDemos
@using blazor_ordersdetails
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p>  This sample shows how to use DataGrid's selection feature, which allows you to select rows or cells with a simple mouse down or keyboard interaction.</p>
</SampleDescription>
<ActionDescription>
    <p>The Blazor DataGrid offers interactive support for highlighting the row or cell that you choose. A simple mouse down or keyboard interaction can be used to make a selection. Set the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.SfGrid-1.html#Syncfusion_Blazor_Grids_SfGrid_1_AllowSelection' aria-label="Navigate to the AllowSelection property reference for DataGrid component">AllowSelection</a> property to <b>true</b> to enable selection.</p>
    <p>DataGrid supports two types of selection, which can be configured via the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridSelectionSettings.html#Syncfusion_Blazor_Grids_GridSelectionSettings_Type' aria-label="Navigate to the Type property reference for GridSelectionSettings">Type</a> property of the <a target='_blank' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.Blazor.Grids.GridSelectionSettings.html' aria-label="Navigate to the class reference for GridSelectionSettings">GridSelectionSettings</a> component. They are,</p>
    <ul>
        <li><strong>Single</strong> - This option is enabled by default. Allows the user to choose only one row or cell at a time.</li>
        <li><strong>Multiple</strong> - Allows the user to select more than one row or cell at the same time.</li>
    </ul>
    <p>There are also three modes of selection available, which can be set using the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridSelectionSettings.html#Syncfusion_Blazor_Grids_GridSelectionSettings_Mode' aria-label="Navigate to the Mode property reference for GridSelectionSettings">Mode</a> property. They are,</p>
     <ul>
        <li><strong>Row</strong> - This option is enabled by default. Allows row selection in DataGrid.</li>
         <li><strong>Cell</strong> - Enables the selection of cells in DataGrid.</li>
         <li><strong>Both</strong> - Allows row and cell selection in DataGrid. clicking any cell selects both the row and the cell at the same time.</li>
      </ul>
        <p>Hold down the <b>Ctrl</b> key and click the desired rows or cells to perform the multi-selection. Hold the <b>Shift</b> key and click the rows or cells to select a range of rows or cells.</p>
    <p>More information about the Selection feature can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/datagrid/selection' aria-label="Navigate to the documentation for selection in DataGrid component">documentation</a> section.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@GridData" AllowSelection="true" AllowPaging="true">
                <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                <GridPageSettings PageCount="5"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" IsPrimaryKey="true" TextAlign="TextAlign.Right" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer ID" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) HeaderText="Freight" TextAlign="TextAlign.Right" Width="120" Format="C2"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCity) HeaderText="Ship City" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Width="150"></GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code{

    
    public List<OrdersDetails>? GridData { get; set; }

    public class SelectionType
    {
        public string? id { get; set; }
        public string? type { get; set; }
    }

    private List<SelectionType> types = new List<SelectionType>()
    {
        new SelectionType(){ id= "Multiple", type= "Multiple" },
        new SelectionType(){ id= "Single", type= "Single" },
    };

    public class Mode
    {
        public string? id { get; set; }
        public string? mode { get; set; }
    }

    private List<Mode> modes = new List<Mode>()
    {
        new Mode(){ id= "Row", mode= "Row" },
        new Mode(){ id= "Cell", mode= "Cell" },
        new Mode(){ id= "Both", mode= "Both" },
    };

    protected override void OnInitialized()
    {
        
        GridData = OrdersDetails.GetAllRecords();
    }
}