@page "/datagrid/excel-like-filter"

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.DropDowns
@*Hidden:Lines*@
@using BlazorDemos
@using blazor_ordersdetails
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the way of filtering DataGrid columns using Excel-like filter UI. </p>
</SampleDescription>
<ActionDescription>
    <p>The Excel-like filter helps create complex filter criteria for a column by allowing users to select possible filter values from a check box list. Additionally, users can build complex filter criteria using advanced filter option such as Sorting, Clear filter, Sub menu and so on. It can be enabled by setting <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.SfGrid-1.html#Syncfusion_Blazor_Grids_SfGrid_1_AllowFiltering' aria-label="Navigate to the AllowFiltering property reference for DataGrid component">AllowFiltering</a> property as <b>true</b>.</p>
    <p>It can be enabled by setting <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.SfGrid-1.html#Syncfusion_Blazor_Grids_SfGrid_1_AllowFiltering' aria-label="Navigate to the AllowFiltering property reference for DataGrid component">AllowFiltering</a> property as <b>true</b>. And you can change the filter type by using <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridFilterSettings.html#Syncfusion_Blazor_Grids_GridFilterSettings_Type' aria-label="Navigate to the Type property reference for Grid filter settings">Type</a> property of the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridFilterSettings.html' aria-label="Navigate to the class reference for GridFilterSettings">GridFilterSettings</a> component.</p>
    <p>DataGrid supports the following filter types,</p>
    <ul>
        <li><strong>Filterbar</strong></li>
        <li><strong>Menu</strong></li>
        <li><strong>Checkbox</strong></li>
        <li><strong>Excel</strong></li>
    </ul>
    <p>In this sample, click the filtering icon from column header to show filter UI for a particular column.</p>
    <p>More information about the Filtering feature can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/datagrid/filtering' aria-label="Navigate to the documentation for filtering in DataGrid component"> documentation </a>section.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@GridData" AllowFiltering="true" AllowPaging="true">
                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                <GridPageSettings PageCount="5"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" TextAlign="TextAlign.Right"  Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer ID" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) TextAlign="TextAlign.Right"  Width="120" Format="C2"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCity) HeaderText="Ship City" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Width="150"></GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code{

    public List<OrdersDetails>? GridData { get; set; }
    

    protected override void OnInitialized()
    {
        
        GridData = OrdersDetails.GetAllRecords();
    }
}