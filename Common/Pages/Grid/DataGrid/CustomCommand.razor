@page "/datagrid/custom-command"
@using Syncfusion.Blazor.Grids;
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@using Syncfusion.Blazor.Popups;
@*Hidden:Lines*@
@inherits SampleBaseComponent;
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the DataGrid with custom command button column.
    </p>
</SampleDescription>

<ActionDescription>
    <p>By setting the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridCommandColumn.html#Syncfusion_Blazor_Grids_GridCommandColumn_Type' aria-label="Navigate to the Type property reference for GridCommandColumn">Type</a> property of the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridCommandColumn.html' aria-label="Navigate to the class reference for GridCommandColumn">GridCommandColumn</a> component to <b>None</b>, the Blazor DataGrid Custom command button can be added to the column. The <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridEvents-1.html#Syncfusion_Blazor_Grids_GridEvents_1_CommandClicked' aria-label="Navigate to the CommandClicked event reference for DataGrid component">CommandClicked</a> event can be used to capture end-user clicks, and <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.CommandClickEventArgs-1.html' aria-label="Navigate to the class reference for CommandClickEventArgs">CommandClickEventArgs</a> can be used to access corresponding row details.</p>
    <p>
        In this demo, the following changes had been made in the DataGrid to use a custom command button in a column.
        <ul>
            <li>Added a column named <b>View Details</b> and command button configurations given using <code> GridCommandColumn</code>.</li>
            <li><code>CommandClicked</code> event is used to capture user clicks.</li>
            <li>Used the <a href='https://blazor.syncfusion.com/documentation/dialog/getting-started' aria-label="Navigate to the documentation for getting started with Blazor dialog component."> SfDialog</a> component in viewing the user details.</li>
        </ul>
        Now click the view icon in the <b>View Details</b> column to see an additional information about the particular row.
    </p>
    <p>
        More information about the Custom command column feature can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/datagrid/command-column-editing#custom-command-column' aria-label="Navigate to the documentation for Custom command column in DataGrid component">documentation</a> section.
    </p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid ID="MyGrid" @ref="Grid" DataSource="EmployeeList" AllowSelection="true">
                <GridEvents CommandClicked="OnCommandClicked" TValue="EmployeeData"> </GridEvents>
                <GridColumns>
                    <GridColumn Field="@nameof(EmployeeData.EmployeeId)" HeaderText="Employee ID" TextAlign="TextAlign.Right" Width="120"></GridColumn>
                    <GridColumn Field="@nameof(EmployeeData.FirstName)" HeaderText="First Name" Width="120"></GridColumn>
                    <GridColumn Field="@nameof(EmployeeData.LastName)" HeaderText="Last Name" Width="120"></GridColumn>
                    <GridColumn Field="@nameof(EmployeeData.HireDate)" HeaderText="Hire Date" TextAlign="TextAlign.Right" Format="d" Width="120"></GridColumn>
                    <GridColumn Field="@nameof(EmployeeData.Country)" Width="120" ></GridColumn>
                    <GridColumn HeaderText="View Details" TextAlign="TextAlign.Center" Width="150">
                        <GridCommandColumns>
                            <GridCommandColumn ButtonOption="@(new CommandButtonOptions() { IconCss="e-icons e-view-details"})" Title="View"></GridCommandColumn>
                        </GridCommandColumns>
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

<SfDialog Width="420" @bind-Visible="@IsVisible" ShowCloseIcon="true" IsModal="false" Target="#MyGrid">
    <DialogTemplates>
        <Header>Employee Information</Header>
        <Content>
            @{
                <div style="display:inline-flex;padding-bottom:15px">
                    @if (RowDetails != null)
                    {
                        <div style="float:left;padding:48px 45px 10px 10px"><img class="photo" src="@UriHelper.ToAbsoluteUri($"{SampleService?.WebAssetsPath}images/data-grid/{RowDetails?.EmployeeId}.png")" alt="@RowDetails?.FirstName @RowDetails?.LastName" /></div>
                    }

                    <div style="padding-top:20px">
                        <div style="padding-bottom:10px;padding-left:10px;">
                            <span style="font-size:large;font-weight: bold">@RowDetails?.FirstName @RowDetails?.LastName</span>
                        </div>
                        <div>
                            <span class="position">@RowDetails?.Title</span>
                        </div>
                        <div style="padding-top:10px;">
                            <table class="table">
                                <tr>
                                    <th>Birth Date </th>
                                    <td>@RowDetails?.BirthDate?.ToString("dd/MM/yyyy")</td>
                                </tr>
                                <tr>
                                    <th>City </th>
                                    <td>@RowDetails?.City</td>
                                </tr>
                                <tr>
                                    <th>Postal Code </th>
                                    <td>@RowDetails?.Code</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>

            }
        </Content>
    </DialogTemplates>
    <DialogPositionData X="@Xvalue" Y="@Yvalue"></DialogPositionData>
</SfDialog>

@*Hidden:Lines*@
<style>

    .table {
        display: table;
        border-collapse: separate;
        border-spacing: 10px;
        font-size: medium;
        text-align: left;
    }

    .position {
        background: #E0E0E0;
        border-radius: 13px;
        text-align: center;
        font-size: 13px;
        padding-top: 10px;
        width: 165px;
        height: 28px;
        padding: 8px 16px;
        color: #000000;
    }

    .photo {
        width: 100px;
        height: 100px;
        border-radius: 50px;
        border: 2px solid #CBCBCB;
    }

    .styleDialog {
        margin-top: 4px;
    }

    .bootstrap5 .e-view-details::before,
    .bootstrap5-dark .e-view-details::before,
    .bootstrap5\.3 .e-view-details::before,
    .bootstrap5\.3-dark .e-view-details::before{
        content: "\e7de";
        color: #FFFFFF;
    }

    /*color*/
    .material .e-view-details::before,
    .fabric .e-view-details::before{
        content: "\e345";
        color: #0b0000;
    }

    .material-dark .e-view-details::before,
    .fabric-dark .e-view-details::before,
    .highcontrast .e-view-details::before{
        content: "\e345";
        color: #FFFFFF;
    }

    .bootstrap4 .e-view-details::before {
        content: "\e787";
        color: #FFFFFF;
    }

    .tailwind .e-view-details::before,
    .tailwind3 .e-view-details::before{
        content: "\e7d0";
        color: #0b0000;
    }

    .tailwind-dark .e-view-details::before,
    .tailwind3-dark .e-view-details::before{
        content: "\e7d0";
        color: #FFFFFF;
    }

    .material3 .e-view-details::before,
    .fluent .e-view-details::before,
    .fluent2 .e-view-details::before {
        content: "\e7de";
        color: #0b0000;
    }

    .material3-dark .e-view-details::before,
    .fluent-dark .e-view-details::before,
    .fluent2-dark .e-view-details::before,
    .fluent2-highcontrast .e-view-details::before {
        content: "\e7de";
        color: #FFFFFF;
    }
</style>
@*End:Hidden*@

@code
{
    SfGrid<EmployeeData>? Grid;
    List<EmployeeData>? EmployeeList;
    public bool IsVisible { get; set; } = false;
    public EmployeeData? RowDetails { get; set; }
    private string Xvalue = "center";
    private string Yvalue = "center";


    public void OnCommandClicked(CommandClickEventArgs<EmployeeData> args)
    {
        RowDetails = args.RowData;
        IsVisible = true;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        EmployeeList = new List<EmployeeData>();
        EmployeeList.Add(new EmployeeData() { FirstName = "Nancy", LastName = "Davolio", HireDate = new DateTime(1992, 01, 05), Country = "USA", City = "Seattle", EmployeeId = 1, Title = "Sales Representative", Code = 98122, BirthDate = new DateTime(1948, 01, 05) });
        EmployeeList.Add(new EmployeeData() { FirstName = "Andrew", LastName = "Fuller", HireDate = new DateTime(1993, 03, 08), Country = "USA", City = "Tacoma", EmployeeId = 2, Title = "Vice President, Sales ", Code = 98711, BirthDate = new DateTime(1950, 01, 05) });
        EmployeeList.Add(new EmployeeData() { FirstName = "Janet", LastName = "Leverling", HireDate = new DateTime(1992, 11, 04), Country = "UK", City = "Kirkland", EmployeeId = 3, Title = "Sales Representative", Code = 97122, BirthDate = new DateTime(1949, 01, 05) });
        EmployeeList.Add(new EmployeeData() { FirstName = "Steven", LastName = "Peacock", HireDate = new DateTime(1992, 05, 05), Country = "USA", City = "Redmond", EmployeeId = 4, Title = "Sales Representative", Code = 96221, BirthDate = new DateTime(1948, 01, 05) });
        EmployeeList.Add(new EmployeeData() { FirstName = "Margaret", LastName = "Buchanan", HireDate = new DateTime(1993, 07, 05), Country = "UK", City = "London", EmployeeId = 5, Title = "Sales Manager", Code = 98321, BirthDate = new DateTime(1949, 01, 05) });
        EmployeeList.Add(new EmployeeData() { FirstName = "Micheal", LastName = "Suyama", HireDate = new DateTime(1993, 08, 05), Country = "UK", City = "London", EmployeeId = 6, Title = "Sales Representative", Code = 98321, BirthDate = new DateTime(1950, 01, 05) });
        EmployeeList.Add(new EmployeeData() { FirstName = "Robert", LastName = "King", HireDate = new DateTime(1993, 09, 05), Country = "USA", City = "London", EmployeeId = 7, Title = "Sales Representative", Code = 98321, BirthDate = new DateTime(1950, 01, 05) });
        EmployeeList.Add(new EmployeeData() { FirstName = "Laura", LastName = "Callahan", HireDate = new DateTime(1993, 10, 05), Country = "UK", City = "Seattle", EmployeeId = 8, Title = "Inside Sales Coordinator", Code = 98321, BirthDate = new DateTime(1948, 01, 05) });
        EmployeeList.Add(new EmployeeData() { FirstName = "Anne", LastName = "Dodsworth", HireDate = new DateTime(1993, 11, 05), Country = "USA", City = "London", EmployeeId = 9, Title = "Sales Representative", Code = 98321, BirthDate = new DateTime(1947, 01, 05) });
    }

    public class EmployeeData
    {
        public int? EmployeeId { get; set; }
        public string? FirstName { get; set; }
        public string? LastName { get; set; } 
        public DateTime? HireDate { get; set; }
        public string? Country { get; set; }
        public string? Title { get; set; }
        public string? City { get; set; }
        public int Code { get; set; }
        public DateTime? BirthDate { get; set; }
    }
}
