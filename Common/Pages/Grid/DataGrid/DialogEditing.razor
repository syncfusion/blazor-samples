@page "/datagrid/dialog-editing"

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.DropDowns
@*Hidden:Lines*@
@using BlazorDemos
@using blazor_ordersdetails
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p>This sample shows how to use the dialog editing mode in DataGrid to perform CRUD operations.</p>
</SampleDescription>
<ActionDescription>
  <p>You can use the Blazor DataGrid dialog editing features to edit the currently selected row data. You can carry out the following CRUD operations:</p>
  <ul>
       <li><strong>Add</strong> -  To add new record, click Add toolbar button.</li>
       <li><strong>Edit</strong> - To edit record, double click a row or click toolbar Edit button after selecting a row.</li>
       <li><strong>Delete</strong> - To delete record, click toolbar Delete button after selecting a row.</li>
       <li><strong>Update</strong> - To save the edited changes, click toolbar Update button.</li>
       <li><strong>Cancel</strong> - To discard the edited changes, click toolbar Cancel button.</li>
   </ul>
   <p>The CRUD operations in DataGrid can be configured using the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridEditSettings.html' aria-label="Navigate to the class reference for GridEditSettings">GridEditSettings</a> component. Any one of the columns should be defined as a primary key using the <code>GridColumn</code> component's <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridColumn.html#Syncfusion_Blazor_Grids_GridColumn_IsPrimaryKey' aria-label="Navigate to the IsPrimaryKey property reference for Grid column">IsPrimaryKey</a> property. It also has various modes for manipulating the datasource.</p>
   <p>The modes that are available are,</p>
   <ul>
       <li><strong>Inline</strong></li>
       <li><strong>Batch</strong></li>
   </ul>
   <p>In this demo, Dialog mode is enabled for editing by setting <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridEditSettings.html#Syncfusion_Blazor_Grids_GridEditSettings_Mode' aria-label="Navigate to the Mode property reference for GridEditSettings">Mode</a> to Dialog in <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridEditSettings.html' aria-label="Navigate to the class reference for GridEditSettings">GridEditSettings</a> component. You can begin editing by double-clicking a row or clicking the <b>Edit</b> button on the toolbar. A dialog will appear with the currently selected row, allowing you to change the row values and save the edited data to the datasource.</p>
   <p>More information about the Dialog editing feature can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/datagrid/dialog-editing' aria-label="Navigate to the documentation for dialog editing in DataGrid component">documentation</a> section.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@GridData" Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })" AllowPaging="true">
                <GridEditSettings AllowAdding="true" AllowDeleting="true" AllowEditing="true" Mode="EditMode.Dialog"></GridEditSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" IsPrimaryKey="true" ValidationRules="@(new ValidationRules{ Required=true, Number=true})" TextAlign="TextAlign.Right"  Width="140"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer ID" ValidationRules="@(new ValidationRules{ Required=true})" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) ValidationRules="@(new ValidationRules{ Required=true, Range = new object[]{1, 1000}})" EditType="EditType.NumericEdit" Format="C2" TextAlign="TextAlign.Right"  Width="140"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.OrderDate) HeaderText="Order Date" EditType="EditType.DatePickerEdit" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right"  Width="160"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" EditType="EditType.DropDownEdit" EditorSettings="@ShipCountryEditParams" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Verified) EditType="EditType.BooleanEdit" DisplayAsCheckBox="true" Width="150" TextAlign="TextAlign.Center" ></GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code{

    public List<OrdersDetails>? GridData { get; set; }
    public IEditorSettings ShipCountryEditParams = new DropDownEditCellParams
        {
            Params = new DropDownListModel<object, object>()
            {
                DataSource = new List<OrdersDetails>()
                {
                    new OrdersDetails() { ShipCountry = "Denmark" },
                    new OrdersDetails() { ShipCountry = "Brazil" },
                    new OrdersDetails() { ShipCountry = "Germany" },
                    new OrdersDetails() { ShipCountry = "Austria" },
                    new OrdersDetails() { ShipCountry = "Switzerland" }
                },
                PopupWidth = "100%"
            }
        };


    protected override void OnInitialized()
    {

        GridData = OrdersDetails.GetAllRecords();
    }
}