@page "/datagrid/frozen-rows"

@using Syncfusion.Blazor.Grids
@*Hidden:Lines*@
@using blazor_taskdetails
@using BlazorDemos
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the frozen rows and columns feature of the DataGrid. Scroll horizontally to experience the persistent left, right, and fixed columns that stay in view as you scroll through your data. Scroll vertically to effortlessly discover frozen rows.</p>
</SampleDescription>
<ActionDescription>
    <p>This feature enables users to freeze certain columns at specific positions. This can be achieved by setting the <code>Freeze</code> property of column settings. The various modes are:</p>
    <ul>
        <li>
            <span class="key-class"><code>Left</code></span>
            <span> : Freezes the column at the left.</span>
        </li>
        <li>
            <span class="key-class"><code>Right</code></span>
            <span> : Freezes the column at the right.</span>
        </li>
        <li>
            <span class="key-class"><code>Fixed</code></span>
            <span> : Freezes the column at a fixed position. This will ensure its visibility while scrolling horizontally.</span>
        </li>
    </ul>
    <p>In this demo sample, the <b>Task ID</b> column is frozen at the left, <b>Status</b> column is frozen at the right and the <b>Assigned To</b> column at a fixed position using <code>Freeze</code> property.</p>
    <p>More information about the Frozen rows and columns feature can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/datagrid/scrolling/#frozen-rows-and-columns' aria-label="Navigate to the documentation for Frozen rows and columns in DataGrid component">documentation</a> section.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@GridData" Height="510" FrozenRows="2" EnableHover="true"AllowSelection="false" AllowTextWrap="true" AllowSorting="true" AllowMultiSorting="false">
                <GridColumns>
                    <GridColumn Field=@nameof(TaskDetails.TaskID) HeaderText="Task ID" IsFrozen="true" Freeze="FreezeDirection.Left" TextAlign="TextAlign.Right" Width="100"></GridColumn>
                    <GridColumn Field=@nameof(TaskDetails.Name) HeaderText="Title" Width="200" MaxWidth="300"></GridColumn>
                    <GridColumn Field=@nameof(TaskDetails.AssignedTo) HeaderText="Assigned To" IsFrozen="true" Freeze="FreezeDirection.Fixed" Width="150" TextAlign="TextAlign.Center">
                        <Template>
                            @{
                                var catagory = (context as TaskDetails);
                                {
                                    <div class="title-temp11">
                                        <span class="font">@catagory?.AssignedTo</span>
                                    </div>
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(TaskDetails.Priority) Width="120" TextAlign="TextAlign.Center">
                        <Template>
                            @{
                                var catagory = (context as TaskDetails);
                                @if (catagory?.Priority == "Critical")
                                {
                                    <div class="title-temp1 ">
                                        <span class="font">@catagory.Priority</span>
                                    </div>
                                }
                                @if (catagory?.Priority == "High")
                                {
                                    <div class="title-temp2 ">
                                        <span class="font">@catagory.Priority</span>
                                    </div>
                                }
                                @if (catagory?.Priority == "Normal")
                                {
                                    <div class="title-temp3">
                                        <span class="font">@catagory.Priority</span>
                                    </div>
                                }
                                @if (catagory?.Priority == "Low")
                                {
                                    <div class="title-temp4">
                                        <span class="font">@catagory?.Priority</span>
                                    </div>
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(TaskDetails.Status) HeaderText="Status" IsFrozen="true" Freeze="FreezeDirection.Right" Width="180" TextAlign="TextAlign.Center">
                        <Template>
                            @{
                                var catagory = (context as TaskDetails);
                                @if (catagory?.Status == "In Progress")
                                {
                                    <div class="title-temp5">
                                        <span class="font">@catagory.Status</span>
                                    </div>
                                }
                                @if (catagory?.Status == "Completed")
                                {
                                    <div class="title-temp6">
                                        <span class="font">@catagory.Status</span>
                                    </div>
                                }
                                @if (catagory?.Status == "Blocked")
                                {
                                    <div class="title-temp7">
                                        <span class="font">@catagory.Status</span>
                                    </div>
                                }
                                @if (catagory?.Status == "Won't Fix")
                                {
                                    <div class="title-temp8">
                                        <span class="font">@catagory.Status</span>
                                    </div>
                                }
                                @if (catagory?.Status == "Cannot Reproduce")
                                {
                                    <div class="title-temp9">
                                        <span class="font">@catagory.Status</span>
                                    </div>
                                }
                                @if (catagory?.Status == "By Design")
                                {
                                    <div class="title-temp10">
                                        <span class="font">@catagory.Status</span>
                                    </div>
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(TaskDetails.Description) Width="400"></GridColumn>
                    <GridColumn Field=@nameof(TaskDetails.OpenedDays) HeaderText="Created Date" Width="200" Format="d" TextAlign="TextAlign.Right"></GridColumn>
                    <GridColumn Field=@nameof(TaskDetails.BugSource) HeaderText="Bug Source" Width="300"></GridColumn>
                    <GridColumn Field=@nameof(TaskDetails.AssociatedFeature) HeaderText="Associated Feature" Width="200" TextAlign="TextAlign.Center">
                        <Template>
                            @{
                                var catagory = (context as TaskDetails);
                                {
                                    <div class="title-temp11">
                                        <span class="font">@catagory?.AssociatedFeature</span>
                                    </div>
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(TaskDetails.CreatedBy) HeaderText="Created By" Width="150" TextAlign="TextAlign.Left"></GridColumn>
                    <GridColumn Field=@nameof(TaskDetails.NotificationStatus) HeaderText="Notification Status" Width="200" TextAlign="TextAlign.Center">
                        <Template>
                            @{
                                var catagory = (context as TaskDetails);
                                @if (catagory?.NotificationStatus == "Already Notified")
                                {
                                    <div class="title-temp12">
                                        <span class="font">@catagory.NotificationStatus</span>
                                    </div>
                                }
                                @if (catagory?.NotificationStatus == "Need to Notify")
                                {
                                    <div class="title-temp13">
                                        <span class="font">@catagory.NotificationStatus</span>
                                    </div>
                                }
                            }
                        </Template>
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code{

    public List<TaskDetails>? GridData { get; set; }
    

    protected override void OnInitialized()
    {
        
        GridData = TaskDetails.GetAllTaskDetails();
    }
}
@*Hidden:Lines*@
<style type="text/css" class="cssStyles">
    .title-temp1, .title-temp2, .title-temp3,.title-temp4, .title-temp5, .title-temp6, .title-temp7, .title-temp8, .title-temp9,.title-temp10, .title-temp11, .title-temp12, .title-temp13  {
        border-radius: 34px;
        padding: 0px 11px;
        text-align: center;
        width: fit-content;
        margin: auto;
    }
    .title-temp1{
        background: #8B0000;
    }
    .title-temp2 {
        background: #FFA500; 
    }

    .title-temp3 {
        background: #0094ff;
    }

    .title-temp4 {
        background: #32CD32;
    }

    .title-temp5 {
        background: #8b008b;
    }

    .title-temp6 {
        background: #006400;
    }

    .title-temp7 {
        background: #b200ff;
    }

    .font {
        color: #FFFFFF;        
    }

    .title-temp8 {
        background: #FFA7B2;
    }

    .title-temp9 {
        background: #556B2F;
    }

    .title-temp10 {
        background: #00CED1;
    }


    .title-temp11 {
        background: #80888f;
    }

    .title-temp12 {
        background: #1E8449;
    }

    .title-temp13 {
        background: #33CCFF;
    }
</style>
@*End:Hidden*@

