@page "/datagrid/data-annotation"
@using Syncfusion.Blazor.Grids;
@using System.ComponentModel.DataAnnotations;
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p> This sample demonstrates the DataGrid component with data annotation feature.</p>
</SampleDescription>

<ActionDescription>
    <p>Blazor DataGrid is a generic component that can be strongly bound to any business object via data annotation. <a target='_blank' href='https://blazor.syncfusion.com/documentation/datagrid/data-annotation' aria-label="Navigate to the documentation for Data annotation in DataGrid component"> Data annotation</a> is used to change the display format, validate fields by checking end-user input, and display messages to them by defining rules in model classes.</p>
    <p>The user must import the namespace <b>System.ComponentModel.DataAnnotations</b> before using the data annotation. Users can change the Display Format, Header text, Tooltip content, and Filtering options of the Column, Editable, and set any one of the columns should be defined as a primary key using the <code>GridColumn</code> component's <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Grids.GridColumn.html#Syncfusion_Blazor_Grids_GridColumn_IsPrimaryKey' aria-label="Navigate to the IsPrimaryKey property reference for Grid column">IsPrimaryKey</a> property for a specific field using the data annotation attributes. Furthermore, users have the option to convert an empty string to null and display custom text for null values. Annotations also allow users to prevent the column from being automatically generated.</p>
    <p>
        The DataGrid in this demo had been modified as follows.
        <ul>
            <li>The Grid's columns are generated automatically by a property in the model class.</li>
            <li>The <a target='_blank' href='https://learn.microsoft.com/en-us/dotnet/api/system.componentmodel.dataannotations.displayattribute?view=net-8.0' aria-label="Navigate to the Microsoft documentation for DisplayAttribute">DisplayAttribute</a> was used to change the column header text.</li>
            <li>The <a target='_blank' href='https://learn.microsoft.com/en-us/dotnet/api/system.componentmodel.dataannotations.displayformatattribute?view=net-8.0' aria-label="Navigate to the Microsoft documentation for DisplayFormatAttribute">DisplayFormatAttribute</a> was used to change the display format of the Freight column.</li>
            <li>Disabled using the <a target='_blank' href='https://learn.microsoft.com/en-us/dotnet/api/system.componentmodel.dataannotations.editableattribute?view=net-8.0' aria-label="Navigate to the Microsoft documentation for EditableAttribute">EditableAttribute</a>, you can make changes to the property ShipCity.</li>
            <li>Using the <a target='_blank' href='https://learn.microsoft.com/en-us/dotnet/api/system.componentmodel.dataannotations.keyattribute?view=net-8.0' aria-label="Navigate to the Microsoft documentation for KeyAttribute">KeyAttribute</a>, the OrderID property's primary key has been set.</li>
            <li>The <a target='_blank' href='https://learn.microsoft.com/en-us/dotnet/api/system.componentmodel.dataannotations.requiredattribute?view=net-8.0' aria-label="Navigate to the Microsoft documentation for RequiredAttribute">RequiredAttribute</a> is used for validation of the property CustomerID.</li>
            <li>Validation <a target='_blank' href='https://learn.microsoft.com/en-us/dotnet/api/system.componentmodel.dataannotations.rangeattribute?view=net-8.0' aria-label="Navigate to the Microsoft documentation for RangeAttribute">RangeAttribute</a> is applied to the Freight property via the Range attribute.</li>
            <li>The <a target='_blank' href='https://learn.microsoft.com/en-us/dotnet/api/system.componentmodel.dataannotations.stringlengthattribute?view=net-8.0' aria-label="Navigate to the Microsoft documentation for StringLengthAttribute">StringLengthAttribute</a> is used for validation of the property CustomerID.</li>
          </ul>
    </p>
    <p> More information about the Data annotation feature can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/datagrid/data-annotation' aria-label="Navigate to the documentation for data annotation in DataGrid component">documentation</a> section.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid TValue="OrderDetails" DataSource="@Orders" AllowPaging="true" AllowFiltering="true" Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })">

                <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GridEditSettings>

            </SfGrid>
        </div>
    </div>
</div>

@code
{

    public List<OrderDetails>? Orders { get; set; }
    protected override void OnInitialized()
    {
        base.OnInitialized();

        Orders = GetAllRecords();
    }
    public List<OrderDetails> GetAllRecords()
    {
        List<OrderDetails> data = new List<OrderDetails>();
        int count = 10240;
        int id = 0;
        for (int i = 0; i < 20; i++)
        {
            data.Add(new OrderDetails() { OrderID = count + 1, CustomerName = "ALFKI", EmployeeID = id + 1, Freight = 32.28f, ShipCity = "Reims", ShipCountry = "France" });
            data.Add(new OrderDetails() { OrderID = count + 2, CustomerName = "ANANTR", EmployeeID = id + 2, Freight = 22.90f, ShipCity = "Munster", ShipCountry = "Germany" });
            data.Add(new OrderDetails() { OrderID = count + 3, CustomerName = "BLONP", EmployeeID = id + 3, Freight = 30.91f, ShipCity = "Rio de Janeir", ShipCountry = "Brazil" });
            data.Add(new OrderDetails() { OrderID = count + 4, CustomerName = "ANTON", EmployeeID = id + 4, Freight = 50.52f, ShipCity = null!, ShipCountry = "USA" });
            data.Add(new OrderDetails() { OrderID = count + 5, CustomerName = "BOLID", EmployeeID = id + 5, Freight = 59.72f, ShipCity = string.Empty, ShipCountry = "UK" });
            count += 5;
            id += 5;
        }
        return data;
    }
    public class OrderDetails
    {

        [Key]
        [Display(Name = "Order ID")]
        [Required(ErrorMessage = "Order ID is required")]
        public int? OrderID { get; set; }

        [Display(Name = "Customer Identification", Description = "List of Customers")]
        [Required(ErrorMessage = "Customer ID is required")]
        [StringLength(8, MinimumLength = 3, ErrorMessage = "Customer ID length should between 3 and 8")]
        public string? CustomerName { get; set; }

        [Display(Name = "Employee ID")]
        [Range(1, 100, ErrorMessage = "Employee ID should be between 1 and 100")]
        public int EmployeeID { get; set; }

        [DisplayFormat(DataFormatString = "c2")]
        [Range(2, float.MaxValue, ErrorMessage = "Freight value should be greater than 1")]
        public float Freight { get; set; }

        [Display(Name = "Ship City", AutoGenerateFilter = false)]
        [DisplayFormat(NullDisplayText = "Empty", ConvertEmptyStringToNull = true)]
        [Editable(false)]
        public string? ShipCity { get; set; }

        [Display(AutoGenerateField = false)]
        public string? ShipCountry { get; set; }

    }
}
