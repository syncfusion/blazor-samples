@page "/heatmap-chart/legend-placement"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.HeatMap
@using Syncfusion.Blazor.DropDowns
@using sf_blazor_heatmapdata
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@

<SampleDescription>
    <p>This sample visualizes the hourly weather forecast for some major European cities. The data label is disabled in this sample, and the tooltip displays the data point values.</p>
</SampleDescription>
<ActionDescription>
  <p>In this example, you can see how to change the display position of the Heatmap Legend. You can change the display position of Legend to <code>left</code>, <code>right</code>, <code>bottom</code>, and <code>top</code> by using the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapLegendSettings.html#Syncfusion_Blazor_HeatMap_HeatMapLegendSettings_Position' aria-label="Class reference of Position property in HeatMap Chart">Position</a> property in <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapLegendSettings.html' aria-label="Class reference of HeatMapLegendSettings">HeatMapLegendSettings</a>.</p>
  <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p> 
</ActionDescription>

<div class="col-lg-9 control-section">
    <div class="row">
        <SfHeatMap DataSource="@DataSource" Theme="@_theme">
            <HeatMapEvents TooltipRendering="@TooltipRendering"></HeatMapEvents>
            <HeatMapTitleSettings Text="Hourly Weather Forecast (in Celsius)">
                <HeatMapTitleTextStyle Size="15px" FontFamily="inherit" FontWeight="500" FontStyle="Normal" TextOverflow="TextOverflow.Trim"></HeatMapTitleTextStyle>
            </HeatMapTitleSettings>
            <HeatMapXAxis Labels="@XLabels" LabelIntersectAction="@LabelIntersectAction.None">
                <HeatMapXAxisTextStyle Color="@AxisLabelColor" FontFamily="inherit"></HeatMapXAxisTextStyle>
            </HeatMapXAxis>
            <HeatMapYAxis Labels="@YLabels">
                <HeatMapYAxisTextStyle Color="@AxisLabelColor" FontFamily="inherit"></HeatMapYAxisTextStyle>
            </HeatMapYAxis>
            <HeatMapPaletteSettings>
                <HeatMapPalettes>
                    <HeatMapPalette Value="0" Color="#6EB5D0"></HeatMapPalette>
                    <HeatMapPalette Value="10" Color="#7EDCA2"></HeatMapPalette>
                    <HeatMapPalette Value="19" Color="#DCD57E"></HeatMapPalette>
                    <HeatMapPalette Value="22" Color="#DCD57E"></HeatMapPalette>
                </HeatMapPalettes>
            </HeatMapPaletteSettings>
            <HeatMapCellSettings ShowLabel="false" Format="{value} C">
            </HeatMapCellSettings>
            <HeatMapLegendSettings Position="@CurrentLegentPosition" LabelFormat="{value}&deg; C">
                <HeatMapLegendTitle Text="Celsius">
                    <HeatMapLegendTitleTextStyle FontFamily="inherit" Size="14px" FontWeight="500" FontStyle="Normal">
                    </HeatMapLegendTitleTextStyle>
                </HeatMapLegendTitle>
                <HeatMapLegendTextStyle FontFamily="inherit"></HeatMapLegendTextStyle>
            </HeatMapLegendSettings>
            <HeatMapTooltipSettings>
                <HeatMapFont FontFamily="inherit"></HeatMapFont>
            </HeatMapTooltipSettings>
        </SfHeatMap>
    </div>
</div>
<div class="col-lg-3 property-section">
    <div class="property-panel-header">Properties</div><br/>
    <tr>
        <td>
            <div style="width:100px"> Legend Position </div>
        </td>
        <td>
            <div style="margin-left: 50px">
            <SfDropDownList TValue="string" TItem="DataModel" PopupHeight="230px" Width="120px" @bind-Index="@_index" Placeholder="Select the Legend Placement" DataSource="@LegendPlacements">
                <DropDownListEvents TValue="string" TItem="DataModel" ValueChange="@(e => { Enum.TryParse<LegendPosition>(e.ItemData.Text, out CurrentLegentPosition); })"></DropDownListEvents>
                <DropDownListFieldSettings Text="Text" Value="Id"></DropDownListFieldSettings>
            </SfDropDownList>
            </div>
        </td>
    </tr>
</div>

@code{
    private Theme _theme { get; set; }
    public string AxisLabelColor = "Black";
    private int? _index { get; set; } = 0;
    private LegendPosition CurrentLegentPosition = LegendPosition.Bottom;
    private string[] XLabels = new string[] { "London", "Berlin", "Madrid", "Paris", "Rome", "Lisbon", "Dublin" };
    private string[] YLabels = new string[] { "12AM", "2AM", "4AM", "6AM", "8AM", "10AM", "12PM", "2PM", "4PM", "6PM", "8PM", "10PM" };
    private int[,] DataSource = HeatMapData.GetLegendData();
    private List<DataModel> LegendPlacements = new List<DataModel>();
    protected override void OnInitialized()
    {
        base.OnInitialized();
        
        LegendPlacements.Add(new DataModel { Id = "0", Text = "Bottom" });
        LegendPlacements.Add(new DataModel { Id = "1", Text = "Right" });
        LegendPlacements.Add(new DataModel { Id = "2", Text = "Top" });
        LegendPlacements.Add(new DataModel { Id = "3", Text = "Left" });
        _theme = HeatmapThemeHelper.GetCurrentHeatmapTheme(NavigationManager.Uri);
        AxisLabelColor = (_theme.ToString().IndexOf("Dark") > -1 || _theme.ToString().IndexOf("HighContrast") > -1) ? "#FFFFFF" : "#000000";
    }
    public class DataModel
    {
        public string? Id { get; set; }
        public string? Text { get; set; }
    }

    public void TooltipRendering(TooltipEventArgs args)
    {
        args.Content = new string[] { args.XLabel + " | " + args.YLabel + " : " + args.Value + "\xB0 C" };
    }

}
<style>
    .col-lg-3.property-section {
        padding-top: 20px;
    }
</style>
