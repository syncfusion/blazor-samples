@page "/heatmap-chart/bubble-types"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.HeatMap
@using Syncfusion.Blazor.DropDowns
@using SFHeatMap = Syncfusion.Blazor.HeatMap
@using sf_blazor_heatmapdata
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@

<SampleDescription>
    <p>This sample visualizes the female participation rate of the total female population in the country’s workforce. In Bubble Heatmap, the data points can be visualized using <code>Bubble Size</code>, <code>Bubble Shade</code>, and <code>Sector view</code> types.</p>
</SampleDescription>
<ActionDescription>
   <p>In this example, you can see how to display data points in Bubble Heatmap using multiple views such as Bubble Size, Bubble Shade, and Sector. You can change the cell type to Bubble by using the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapCellSettings.html#Syncfusion_Blazor_HeatMap_HeatMapCellSettings_TileType" aria-label="Class reference of TileType property in HeatMap Chart">TileType</a> property in <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.SfHeatMap-1.html#Syncfusion_Blazor_HeatMap_SfHeatMap_1_CellSettings" aria-label="Class reference of CellSettings property in HeatMap Chart">CellSettings</a>, and you can change the view of the Bubble Heatmap by using the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.BubbleType.html" aria-label="Class reference of BubbleType property in HeatMap Chart">BubbleType</a> property in <code>CellSettings</code>.</p>
    <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>
</ActionDescription>

<div class="col-lg-8 control-section">
    <div>
        <SfHeatMap DataSource="@DataSource" Theme="@_theme">
            <HeatMapEvents TooltipRendering="@TooltipRendering"></HeatMapEvents>
            <HeatMapTitleSettings Text="Female Participation Rate in Labor Force for the Countries">
                <HeatMapTitleTextStyle Size="15px" FontWeight="500" FontFamily="inherit" FontStyle="Normal" TextOverflow="TextOverflow.Trim"></HeatMapTitleTextStyle>
            </HeatMapTitleSettings>
            <HeatMapXAxis Labels="@XLabels"
                          LabelRotation="45"
                          LabelIntersectAction="@SFHeatMap.LabelIntersectAction.None">
                <HeatMapXAxisTextStyle Color="@AxisLabelColor" FontFamily="inherit" FontStyle="Normal"></HeatMapXAxisTextStyle>
            </HeatMapXAxis>
            <HeatMapYAxis Labels="@YLabels">
                <HeatMapYAxisTextStyle Color="@AxisLabelColor" FontFamily="inherit"></HeatMapYAxisTextStyle>
            </HeatMapYAxis>
            <HeatMapPaletteSettings>
                <HeatMapPalettes>
                    <HeatMapPalette Value="35" Color="#50A3B1"></HeatMapPalette>
                    <HeatMapPalette Value="45" Color="#78D1BD"></HeatMapPalette>
                    <HeatMapPalette Value="55" Color="#CAE8B4"></HeatMapPalette>
                    <HeatMapPalette Value="65" Color="#EDF8B6"></HeatMapPalette>
                    <HeatMapPalette Value="78" Color="#FFFFDA"></HeatMapPalette>
                </HeatMapPalettes>
            </HeatMapPaletteSettings>
            <HeatMapCellSettings ShowLabel="false"
                                 TileType="@SFHeatMap.CellType.Bubble"
                                 BubbleType="@_bubbleType">
                <HeatMapCellBorder Width = "1" ></HeatMapCellBorder>
                <HeatMapCellTextStyle FontFamily="inherit"></HeatMapCellTextStyle>
            </HeatMapCellSettings>
            <HeatMapLegendSettings Visible="true">
                <HeatMapLegendTextStyle FontFamily="inherit"></HeatMapLegendTextStyle>
            </HeatMapLegendSettings>
            <HeatMapTooltipSettings>
                <HeatMapFont FontFamily="inherit"></HeatMapFont>
            </HeatMapTooltipSettings>
        </SfHeatMap>
        <div style="float: right; margin-right: 10px;">
            Source:
            <a href="https://data.worldbank.org" target='_blank'>https://data.worldbank.org/</a>
        </div>
    </div>
</div>
<div class="col-lg-4 property-section">
    <div class="property-panel-header">Properties</div>
    <br/>
     <tr>
         <td>
             <div style="width:100px"> Bubble Type </div>
         </td>
     <td>
         <div style="margin-left: 100px">
         <SfDropDownList TValue="string" TItem="DataModel" PopupHeight="230px" Width="100%" @bind-Index="@index" Placeholder="Select bubble type" DataSource="@Bubble">
             <DropDownListFieldSettings Value="Id" Text="Text"></DropDownListFieldSettings>
             <DropDownListEvents TItem="DataModel" TValue="string" ValueChange="@(e => { Enum.TryParse<SFHeatMap.BubbleType>(e.Value, out _bubbleType); })"></DropDownListEvents>
         </SfDropDownList>
         </div>
    </td>
</tr>
</div>

@code{
    private Theme _theme { get; set; }
    public string AxisLabelColor = "Black";
    private int? index { get; set; } = 0;
    private BubbleType _bubbleType;
    private string[] XLabels = new string[] { "Singapore", "Spain", "Australia", "Germany", "Belgium", "USA", "France", "UK" };
    private string[] YLabels = new string[] { "1995", "2000", "2005", "2010", "2015" };
    private double[,] DataSource = HeatMapData.TableBubbleData();
    private List<DataModel> Bubble = new List<DataModel>();
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Bubble.Add(new DataModel { Id = "0", Text = "Size" });
        Bubble.Add(new DataModel { Id = "1", Text = "Color" });
        Bubble.Add(new DataModel { Id = "2", Text = "Sector" });
        _theme = HeatmapThemeHelper.GetCurrentHeatmapTheme(NavigationManager.Uri);
        AxisLabelColor = (_theme.ToString().IndexOf("Dark") > -1 || _theme.ToString().IndexOf("HighContrast") > -1) ? "#FFFFFF" : "#000000";        
    }
    public class DataModel
    {
        public string? Id { get; set; }
        public string? Text { get; set; }
    }
    public void TooltipRendering(TooltipEventArgs args)
    {    
        args.Content = new string[] {args.YLabel + " | " + args.XLabel + " : " + args.Value + " % "};
    }
}
<style>
    .col-lg-4.property-section {
        padding-top: 10px;
    }    
</style>