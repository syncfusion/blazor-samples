@page "/heatmap-chart/empty-points"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.HeatMap
@using sf_blazor_heatmapdata
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@

<SampleDescription>
    <p>This sample visualizes the number of defective product count per 1000 units coming out from a manufacturing unit. Data points are enhanced with labels and tooltip. Some data points were not marked with any values which indicates there are no defective products and these data points are termed as empty points.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render <code>empty points</code> in the Heatmap. The empty points or the points with no data can be marked using <code>null</code> in the DataSource. You can also customize the background color of the empty points by using the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapPaletteSettings.html#Syncfusion_Blazor_HeatMap_HeatMapPaletteSettings_EmptyPointColor" aria-label="Class reference of EmptyPointColor property in HeatMap Chart">EmptyPointColor</a> property in <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapPaletteSettings.html" aria-label="Class reference of HeatMapPaletteSettings">HeatMapPaletteSettings</a>.</p>
    <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>
</ActionDescription>

<div class="control-section">
    <div class="row">
        <div class="col-md-12">
            <SfHeatMap DataSource="@DataSource" Theme="@_theme">
                  <HeatMapEvents TooltipRendering="@OnRendering"></HeatMapEvents>
                <HeatMapXAxis Labels="@XLabels" LabelIntersectAction="LabelIntersectAction.Trim">
                    <HeatMapXAxisTextStyle Color="@AxisLabelColor" FontFamily="inherit"></HeatMapXAxisTextStyle>
                </HeatMapXAxis>
                <HeatMapYAxis Labels="@YLabels">
                    <HeatMapYAxisTextStyle Color="@AxisLabelColor" FontFamily="inherit"></HeatMapYAxisTextStyle>
                </HeatMapYAxis>
                <HeatMapTitleSettings Text="Defective Count per 1000 Products from a Manufacturing Unit">
                    <HeatMapTitleTextStyle Size="15px" FontWeight="500" FontStyle="Normal" FontFamily="inherit" TextOverflow="TextOverflow.Trim"></HeatMapTitleTextStyle>
                </HeatMapTitleSettings>
                <HeatMapPaletteSettings Type="@PaletteType.Gradient">
                    <HeatMapPalettes>
                        <HeatMapPalette Color="rgb(172, 213, 242)"></HeatMapPalette>
                        <HeatMapPalette Color="rgb(127, 168, 201)"></HeatMapPalette>
                        <HeatMapPalette Color="rgb(82, 123, 160)"></HeatMapPalette>
                        <HeatMapPalette Color="rgb(37, 78, 119)"></HeatMapPalette>
                    </HeatMapPalettes>
                </HeatMapPaletteSettings>
                <HeatMapLegendSettings ShowLabel="true"
                                       Position="@LegendPosition.Bottom"
                                       Width="250px">
                   <HeatMapLegendTextStyle FontFamily="inherit"></HeatMapLegendTextStyle>
                </HeatMapLegendSettings>
                <HeatMapCellSettings>
                    <HeatMapCellBorder Width="0" Color="White"></HeatMapCellBorder>
                    <HeatMapCellTextStyle FontFamily="inherit"></HeatMapCellTextStyle>
                </HeatMapCellSettings>
                <HeatMapTooltipSettings>
                    <HeatMapFont FontFamily="inherit"></HeatMapFont>
                </HeatMapTooltipSettings>
            </SfHeatMap>
        </div>
    </div>
</div>

@code{
    private Theme _theme { get; set; }
    public string AxisLabelColor = "Black";
    public string[] XLabels = new string[] { "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017" };
    public string[] YLabels = new string[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "July", "Aug", "Sept", "Oct", "Nov", "Dec" };
    public int?[,] DataSource = HeatMapData.GetEmptyPointData();
    
    protected override void OnInitialized()
    {
        _theme = HeatmapThemeHelper.GetCurrentHeatmapTheme(NavigationManager.Uri);
        AxisLabelColor = (_theme.ToString().IndexOf("Dark") > -1 || _theme.ToString().IndexOf("HighContrast") > -1) ? "#FFFFFF" : "#000000";
    }
    public void OnRendering(TooltipEventArgs args)
    {
        args.Content = new string[] {args.YLabel + " | " + args.XLabel + " : " + args.Value + " defective units"};
    }
}
