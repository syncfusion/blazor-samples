@page "/heatmap-chart/color-and-size-attributes"
@inject NavigationManager NavigationManager
@using Syncfusion.Blazor
@using Syncfusion.Blazor.HeatMap
@using sf_blazor_heatmapdata

@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@

<SampleDescription>
    <p>This sample illustrates the number of commercial aircraft accidents and fatalities worldwide between 2012 and 2017. Each data point represents the accident count and the fatality associated with the accident; the size of the bubble represents the accident count, and the shade of the bubble represents the fatality count. </p>
</SampleDescription>
<ActionDescription>
    <p>
        In this example, you can see how to map more than one data for each data point or cell of the bubble heatmap. The size and shade parameters of the bubble is used to represent the data source values.
        The legend will be displayed only for the shade parameter of the bubble. For assigned data, you can specify which data source value should be mapped to either size or shade of the bubble parameters using the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapBubbleDataMapping.html" aria-label="Class reference of HeatMapBubbleDataMapping">HeatMapBubbleDataMapping</a> class.
        The data source field should mapped to the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapBubbleDataMapping.html#Syncfusion_Blazor_HeatMap_HeatMapBubbleDataMapping_Size" aria-label="Class reference of Size property in HeatMap Chart">Size</a> and <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapBubbleDataMapping.html#Syncfusion_Blazor_HeatMap_HeatMapBubbleDataMapping_Color" aria-label="Class reference of Color property in HeatMap Chart">Color</a> properties of the <code>HeatMapBubbleDataMapping</code> class.
    </p>
    <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>
    <p>More information on the bubble can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/heatmap-chart/bubble-heatmap#bubble-attributes" aria-label="Blazor HeatMap Bubble Attributes documentation" >documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <div class="row">
        <div class="col-md-12">
            <SfHeatMap DataSource="@HeatMapData" Theme="@Theme">
                <HeatMapEvents TooltipRendering="@TooltipRendering"></HeatMapEvents>
                <HeatMapTitleSettings Text="Commercial Aviation Accidents and Fatalities by Year 2012 - 2017">
                    <HeatMapTitleTextStyle Size="15px" FontWeight="500" FontStyle="Normal" FontFamily="inherit" TextOverflow="TextOverflow.Trim"></HeatMapTitleTextStyle>
                </HeatMapTitleSettings>
                <HeatMapXAxis Labels="@XLabels">
                     <HeatMapXAxisTextStyle Color="@AxisLabelColor" FontFamily="inherit"></HeatMapXAxisTextStyle>
                </HeatMapXAxis>
                <HeatMapYAxis Labels="@YLabels">
                     <HeatMapYAxisTextStyle Color="@AxisLabelColor" FontFamily="inherit"></HeatMapYAxisTextStyle>
                </HeatMapYAxis>
                <HeatMapDataSourceSettings IsJsonData="true" AdaptorType="AdaptorType.Cell" XDataMapping="Year" YDataMapping="Months">
                    <HeatMapBubbleDataMapping Size="Accidents" Color="Fatalities"></HeatMapBubbleDataMapping>
                </HeatMapDataSourceSettings>
                <HeatMapCellSettings ShowLabel="false" TileType="CellType.Bubble" BubbleType="BubbleType.SizeAndColor">
                    <HeatMapCellBorder Width="0"></HeatMapCellBorder>
                     <HeatMapCellTextStyle FontFamily="inherit"></HeatMapCellTextStyle>
                </HeatMapCellSettings>
                <HeatMapPaletteSettings Type="PaletteType.Gradient">
                    <HeatMapPalettes>
                        <HeatMapPalette Color="#C06C84"></HeatMapPalette>
                        <HeatMapPalette Color="#355C7D"></HeatMapPalette>
                    </HeatMapPalettes>
                </HeatMapPaletteSettings>
                <HeatMapLegendSettings Visible="true">
                    <HeatMapLegendTextStyle FontFamily="inherit"></HeatMapLegendTextStyle>
                </HeatMapLegendSettings>
                <HeatMapTooltipSettings Enable="true">
                    <HeatMapFont Size="12px" FontWeight="500" FontFamily="inherit"></HeatMapFont>
                </HeatMapTooltipSettings>
            </SfHeatMap>
            <div style="float: right; margin-right: 10px;">
                Source:
                <a href="https://en.wikipedia.org" target='_blank'>https://en.wikipedia.org/</a>
            </div>
        </div>
    </div>
</div>



@code {
    public Theme Theme { get; set; }
    public string AxisLabelColor = "Black";
    public string[] XLabels = new string[] { "2017", "2016", "2015", "2014", "2013", "2012" };
    public string[] YLabels = new string[] { "Jan-Feb", "Mar-Apr", "May-Jun", "Jul-Aug", "Sep-Oct", "Nov-Dec" };

    public void TooltipRendering(TooltipEventArgs args)
    {
        int dataIndex = 0;
        for (int i = 0; i < HeatMapData?.Count; i++)
        {
            if (HeatMapData[i].Year == args.XLabel && HeatMapData[i].Months == args.YLabel)
            {
                dataIndex = i;
                break;
            }
        }

        args.Content = new string[]
        {
            "Year " + " : " + args.XLabel + "<br/>" + "Months " + " : " + args.YLabel + "<br/>" + "Accidents " + " : " + HeatMapData?[dataIndex].Accidents +
            "<br/>" + "Fatalities " + " : " + HeatMapData?[dataIndex].Fatalities
        };
    }

    public List<BubbleDataSource>? HeatMapData { get; set; }
    public class BubbleDataSource
    {
        public string? Year { get; set; }
        public string? Months { get; set; }
        public Nullable<int> Accidents { get; set; }
        public Nullable<int> Fatalities { get; set; }
        public static List<BubbleDataSource> GetData()
        {
            List<BubbleDataSource> HeatMapData = new List<BubbleDataSource>()
            {
                new BubbleDataSource { Year = "2017", Months = "Jan-Feb", Accidents=4, Fatalities=39 },
                new BubbleDataSource { Year = "2017", Months = "Mar-Apr", Accidents=3, Fatalities=8 },
                new BubbleDataSource { Year = "2017", Months = "May-Jun", Accidents=1, Fatalities=3 },
                new BubbleDataSource { Year = "2017", Months = "Jul-Aug", Accidents=1, Fatalities=0 },
                new BubbleDataSource { Year = "2017", Months = "Sep-Oct", Accidents=4, Fatalities=4 },
                new BubbleDataSource { Year = "2017", Months = "Nov-Dec", Accidents=2, Fatalities=15 },
                new BubbleDataSource { Year = "2016", Months = "Jan-Feb", Accidents=4, Fatalities=28 },
                new BubbleDataSource { Year = "2016", Months = "Mar-Apr", Accidents=5, Fatalities=92 },
                new BubbleDataSource { Year = "2016", Months = "May-Jun", Accidents=5, Fatalities=73 },
                new BubbleDataSource { Year = "2016", Months = "Jul-Aug", Accidents=3, Fatalities=1 },
                new BubbleDataSource { Year = "2016", Months = "Sep-Oct", Accidents=3, Fatalities=4 },
                new BubbleDataSource { Year = "2016", Months = "Nov-Dec", Accidents=4, Fatalities=126 },
                new BubbleDataSource { Year = "2015", Months = "Jan-Feb", Accidents=1, Fatalities=45 },
                new BubbleDataSource { Year = "2015", Months = "Mar-Apr", Accidents=5, Fatalities=152 },
                new BubbleDataSource { Year = "2015", Months = "May-Jun", Accidents=0, Fatalities=0 },
                new BubbleDataSource { Year = "2015", Months = "Jul-Aug", Accidents=4, Fatalities=54 },
                new BubbleDataSource { Year = "2015", Months = "Sep-Oct", Accidents=5, Fatalities=243 },
                new BubbleDataSource { Year = "2015", Months = "Nov-Dec", Accidents=2, Fatalities=45 },
                new BubbleDataSource { Year = "2014", Months = "Jan-Feb", Accidents=2, Fatalities=18 },
                new BubbleDataSource { Year = "2014", Months = "Mar-Apr", Accidents=3, Fatalities=239 },
                new BubbleDataSource { Year = "2014", Months = "May-Jun", Accidents=0, Fatalities=0 },
                new BubbleDataSource { Year = "2014", Months = "Jul-Aug", Accidents=4, Fatalities=501 },
                new BubbleDataSource { Year = "2014", Months = "Sep-Oct", Accidents=1, Fatalities=2 },
                new BubbleDataSource { Year = "2014", Months = "Nov-Dec", Accidents=4, Fatalities=162 },
                new BubbleDataSource { Year = "2013", Months = "Jan-Feb", Accidents=2, Fatalities=68 },
                new BubbleDataSource { Year = "2013", Months = "Mar-Apr", Accidents=3, Fatalities=7 },
                new BubbleDataSource { Year = "2013", Months = "May-Jun", Accidents=2, Fatalities=12 },
                new BubbleDataSource { Year = "2013", Months = "Jul-Aug", Accidents=4, Fatalities=15 },
                new BubbleDataSource { Year = "2013", Months = "Sep-Oct", Accidents=2, Fatalities=64 },
                new BubbleDataSource { Year = "2013", Months = "Nov-Dec", Accidents=3, Fatalities=83 },
                new BubbleDataSource { Year = "2012", Months = "Jan-Feb", Accidents=0, Fatalities=0 },
                new BubbleDataSource { Year = "2012", Months = "Mar-Apr", Accidents=2, Fatalities=158 },
                new BubbleDataSource { Year = "2012", Months = "May-Jun", Accidents=5, Fatalities=90 },
                new BubbleDataSource { Year = "2012", Months = "Jul-Aug", Accidents=0, Fatalities=0 },
                new BubbleDataSource { Year = "2012", Months = "Sep-Oct", Accidents=3, Fatalities=33 },
                new BubbleDataSource { Year = "2012", Months = "Nov-Dec", Accidents=4, Fatalities=42 }
            };
            return HeatMapData;
        }
    }
    
    protected override void OnInitialized()
    {
        this.HeatMapData = BubbleDataSource.GetData();
        
        Theme = HeatmapThemeHelper.GetCurrentHeatmapTheme(NavigationManager.Uri);
        AxisLabelColor = (Theme.ToString().IndexOf("Dark") > -1 || Theme.ToString().IndexOf("HighContrast") > -1) ? "#FFFFFF" : "#000000";
    }
}