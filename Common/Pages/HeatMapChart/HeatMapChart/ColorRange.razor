@page "/heatmap-chart/color-range"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.HeatMap
@using Syncfusion.Blazor.Buttons;
@using sf_blazor_heatmapdata
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@

<SampleDescription>
    <p>This sample visualizes the energy consumption in trillion British Thermal Units (BTU) by the various public sectors of the US government over the years. In the property panel, the options are available to change the palette type in the Heatmap using the radio button.</p>
</SampleDescription>
<ActionDescription>
    <p>This example explains how to provide a specific range of color in the Heatmap component. In this example, the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapPalette.html#Syncfusion_Blazor_HeatMap_HeatMapPalette_StartValue' aria-label="Class reference of StartValue property in HeatMap Chart">StartValue</a> and <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapPalette.html#Syncfusion_Blazor_HeatMap_HeatMapPalette_EndValue' aria-label="Class reference of EndValue property in HeatMap Chart">EndValue</a> properties are used to define the range of start and end values in the data source, and the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapPalette.html#Syncfusion_Blazor_HeatMap_HeatMapPalette_MinColor' aria-label="Class reference of MinColor property in HeatMap Chart">MinColor</a> and <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapPalette.html#Syncfusion_Blazor_HeatMap_HeatMapPalette_MaxColor' aria-label="Class reference of MaxColor property in HeatMap Chart">MaxColor</a> properties represent the colors of a given range. Legend is enabled in this example. When the palette mode is changed, the Legend Type will be automatically switched between Gradient and List type Legend.</p>
</ActionDescription>

<div class="col-lg-9 control-section">
    <div class="row">
        <SfHeatMap DataSource="@DataSource" Theme="@_theme">
            <HeatMapTitleSettings Text="U.S. Government Energy Consumption by Agency (Trillion Btu)">
                <HeatMapTitleTextStyle Size="15px" FontWeight="500" FontFamily="inherit" FontStyle="Normal" TextOverflow="TextOverflow.Trim"></HeatMapTitleTextStyle>
            </HeatMapTitleSettings>
            <HeatMapXAxis Labels="@XLabels"
                          LabelRotation="45"
                          LabelIntersectAction="@LabelIntersectAction.None">
                <HeatMapXAxisTextStyle Color="@AxisLabelColor" FontFamily="inherit"></HeatMapXAxisTextStyle>
            </HeatMapXAxis>
            <HeatMapYAxis Labels="@YLabels">
                 <HeatMapYAxisTextStyle Color="@AxisLabelColor" FontFamily="inherit"></HeatMapYAxisTextStyle>
            </HeatMapYAxis>
            <HeatMapPaletteSettings Type="@PalatteType">
                <HeatMapPalettes>
                    <HeatMapPalette StartValue="5" EndValue="10" MinColor="#F0C27B" MaxColor="#BE8D6C"></HeatMapPalette>
                    <HeatMapPalette StartValue="10" EndValue="15" MinColor="#A26E63" MaxColor="#4B1248"></HeatMapPalette>
                    <HeatMapPalette StartValue="15" EndValue="20" MinColor="#694b77" MaxColor="#d27d85"></HeatMapPalette>
                    <HeatMapPalette StartValue="20" EndValue="31.7" MinColor="#ed9485" MaxColor="#e44841"></HeatMapPalette>
                </HeatMapPalettes>
            </HeatMapPaletteSettings>
            <HeatMapCellSettings ShowLabel="false">
                <HeatMapCellBorder Width="0"></HeatMapCellBorder>
            </HeatMapCellSettings>
            <HeatMapLegendSettings Visible="true" Position="LegendPosition.Right">
                <HeatMapLegendTextStyle FontFamily="inherit"></HeatMapLegendTextStyle>
             </HeatMapLegendSettings>
             <HeatMapTooltipSettings>
                 <HeatMapFont FontFamily="inherit"></HeatMapFont>
             </HeatMapTooltipSettings>
        </SfHeatMap>
    </div>
</div>
<div class="col-lg-3 property-section">
    <div class="property-panel-header">Properties</div>
    <table id="property" title="Properties" style="width: 100%">
        <tbody>
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div div style="font-size: 14px;">Palette Type </div>
                </td>
                <td style="width: 40%;">
                    <div class="row" style="padding-top: 10px;">
                        <SfRadioButton Label="Fixed" Name="PaletteType" Value="Fixed" @bind-Checked="@Type" ValueChange="@ValueChange" TChecked="string">
                        </SfRadioButton>
                    </div>
                    <div class="row" style="padding-top: 10px;">
                        <SfRadioButton Label="Gradient" Name="PaletteType" Value="Gradient" @bind-Checked="@Type" ValueChange="@ValueChange" TChecked="string"></SfRadioButton>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

@code{
    private Theme _theme { get; set; }
    public string AxisLabelColor = "Black";
    public PaletteType PalatteType = PaletteType.Gradient;
    public string Type = "Gradient";
    public string[] XLabels = new string[] { "2005", "2006", "2007", "2008", "2009", "2010","2011", "2012", "2013", "2014", "2015" };
    public string[] YLabels = new string[] { "Agriculture", "Energy", "Administration", "Health", "Interior", "Justice", "NASA", "Transportation" };
    public double[,] DataSource = HeatMapData.GetPaletteData();
    
    protected override void OnInitialized()
    {
        _theme = HeatmapThemeHelper.GetCurrentHeatmapTheme(NavigationManager.Uri);
        AxisLabelColor = (_theme.ToString().IndexOf("Dark") > -1 || _theme.ToString().IndexOf("HighContrast") > -1) ? "#FFFFFF" : "#000000";
    }
    public void ValueChange(Syncfusion.Blazor.Buttons.ChangeArgs<string> args)
    {
        if ((string)args.Value == "Fixed")
        {
            PalatteType = PaletteType.Fixed;
            Type = "Fixed";
        }
        else
        {
            PalatteType = PaletteType.Gradient;
            Type = "Gradient";
        }
    }
}
<style>
    .col-lg-3.property-section {
        padding-top: 60px;
    }
</style>