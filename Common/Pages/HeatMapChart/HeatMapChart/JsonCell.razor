@page "/heatmap-chart/json-cell"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.HeatMap
@using sf_blazor_heatmapdata
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@

<SampleDescription>
    <p> This sample visualizes the number of international tourist arrivals in millions of the most visited destinations in the world.</p>
</SampleDescription>
<ActionDescription>
   <p>In this example, you can see how to bind <code>JSON</code> data and configure the Heatmap using the data adaptor support. You can bind the JSON data with information for each cell to the Heatmap using <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapDataSourceSettings.html#Syncfusion_Blazor_HeatMap_HeatMapDataSourceSettings_IsJsonData" aria-label="Class reference of IsJsonData property in HeatMap Chart">IsJsonData</a> and by defining the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapDataSourceSettings.html#Syncfusion_Blazor_HeatMap_HeatMapDataSourceSettings_AdaptorType" aria-label="Class reference of AdaptorType property in HeatMap Chart">AdaptorType</a> properties. In cell JSON data, the value for each cell is mapped using the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapDataSourceSettings.html#Syncfusion_Blazor_HeatMap_HeatMapDataSourceSettings_XDataMapping" aria-label="Class reference of XDataMapping property in HeatMap Chart">XDataMapping</a>, <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapDataSourceSettings.html#Syncfusion_Blazor_HeatMap_HeatMapDataSourceSettings_YDataMapping" aria-label="Class reference of YDataMapping property in HeatMap Chart">YDataMapping</a>, and <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.HeatMap.HeatMapDataSourceSettings.html#Syncfusion_Blazor_HeatMap_HeatMapDataSourceSettings_ValueMapping" aria-label="Class reference of ValueMapping property in HeatMap Chart">ValueMapping</a> properties.</p>
   <p>The tooltip is enabled in this example. To see the tooltip in action, hover the mouse over an item or tap an item on touch-enabled devices.</p>
</ActionDescription>

<div class="control-section">
    <div class="row">
        <div class="col-md-12">
            <SfHeatMap DataSource="@Data" Theme="@_theme">
                <HeatMapTitleSettings Text="Most Visited Destinations by International Tourist Arrivals">
                    <HeatMapTitleTextStyle Size="15px" FontWeight="500" FontStyle="Normal" FontFamily="inherit" TextOverflow="TextOverflow.Trim"></HeatMapTitleTextStyle>
                </HeatMapTitleSettings>
                <HeatMapEvents Resized="@Resized" TooltipRendering="@TooltipRendering"></HeatMapEvents>
                <HeatMapDataSourceSettings IsJsonData="true" AdaptorType="AdaptorType.Cell" XDataMapping="RowId" YDataMapping="ColumnId" ValueMapping="Value"></HeatMapDataSourceSettings>
                <HeatMapXAxis Labels="@XLabels">
                    <HeatMapXAxisTextStyle Color="@AxisLabelColor" FontFamily="inherit"></HeatMapXAxisTextStyle>
                </HeatMapXAxis>
                <HeatMapYAxis Labels="@YLabels">
                    <HeatMapYAxisTextStyle Color="@AxisLabelColor" FontFamily="inherit"></HeatMapYAxisTextStyle>
                </HeatMapYAxis>
                <HeatMapPaletteSettings>
                    <HeatMapPalettes>
                        <HeatMapPalette Color="#DCD57E"></HeatMapPalette>
                        <HeatMapPalette Color="#A6DC7E"></HeatMapPalette>
                        <HeatMapPalette Color="#7EDCA2"></HeatMapPalette>
                        <HeatMapPalette Color="#6EB5D0"></HeatMapPalette>
                    </HeatMapPalettes>
                </HeatMapPaletteSettings>
                <HeatMapCellSettings ShowLabel="true" Format="@LabelFormat">
                    <HeatMapCellBorder Width = "1"  Radius = "4" Color = "White"></HeatMapCellBorder>
                     <HeatMapCellTextStyle FontFamily="inherit"></HeatMapCellTextStyle>
                </HeatMapCellSettings>
                <HeatMapLegendSettings>
                    <HeatMapLegendTextStyle FontFamily="inherit"></HeatMapLegendTextStyle>
                </HeatMapLegendSettings>
                <HeatMapTooltipSettings>
                    <HeatMapFont FontFamily="inherit"></HeatMapFont>
                </HeatMapTooltipSettings>
            </SfHeatMap>
        </div>
    </div>
    <div style="float: right; margin-right: 10px;">
        Source:
        <a href="https://en.wikipedia.org/wiki/World_Tourism_rankings" target="_blank">https://en.wikipedia.org/</a>
    </div>
</div>

@code{
    private Theme _theme { get; set; }
    public string AxisLabelColor = "Black";
    public string[] XLabels = new string[] { "Austria", "China", "France", "Germany", "Italy", "Mexico", "Spain", "Thailand", "UK", "USA" };
    public string[] YLabels = new string[] { "2010", "2011", "2012", "2013", "2014", "2015", "2016" };
    public string LabelFormat = "{value} M";
    
    public class HeatmapData
    {
        public string? RowId { get; set; }
        public string? ColumnId { get; set; }
        public string? Value { get; set; }
    }

    private HeatmapData[] Data = new HeatmapData[]
    {
        new HeatmapData { RowId = "France", ColumnId = "2010", Value = "77.6" },
        new HeatmapData { RowId = "France", ColumnId = "2011", Value = "79.4" },
        new HeatmapData { RowId = "France", ColumnId = "2012", Value = "80.8" },
        new HeatmapData { RowId = "France", ColumnId = "2013", Value = "86.6" },
        new HeatmapData { RowId = "France", ColumnId = "2014", Value = "83.7" },
        new HeatmapData { RowId = "France", ColumnId = "2015", Value = "84.5" },
        new HeatmapData { RowId = "France", ColumnId = "2016", Value = "82.6" },
        new HeatmapData { RowId = "USA", ColumnId = "2010", Value = "60.6" },
        new HeatmapData { RowId = "USA", ColumnId = "2014", Value = "75.3" },
        new HeatmapData { RowId = "USA", ColumnId = "2011", Value = "65.4" },
        new HeatmapData { RowId = "USA", ColumnId = "2012", Value = "70.8" },
        new HeatmapData { RowId = "USA", ColumnId = "2012", Value = "70.8" },
        new HeatmapData { RowId = "USA", ColumnId = "2013", Value = "73.8" },
        new HeatmapData { RowId = "USA", ColumnId = "2014", Value = "75.3" },
        new HeatmapData { RowId = "USA", ColumnId = "2015", Value = "77.5" },
        new HeatmapData { RowId = "USA", ColumnId = "2016", Value = "77.6" },
        new HeatmapData { RowId = "Spain", ColumnId = "2010", Value = "64.9" },
        new HeatmapData { RowId = "Spain", ColumnId = "2011", Value = "52.6" },
        new HeatmapData { RowId = "Spain", ColumnId = "2012", Value = "60.8" },
        new HeatmapData { RowId = "Spain", ColumnId = "2013", Value = "65.6" },
        new HeatmapData { RowId = "Spain", ColumnId = "2014", Value = "52.6" },
        new HeatmapData { RowId = "Spain", ColumnId = "2015", Value = "68.5" },
        new HeatmapData { RowId = "Spain", ColumnId = "2016", Value = "75.6" },
        new HeatmapData { RowId = "China", ColumnId = "2010", Value = "55.6" },
        new HeatmapData { RowId = "China", ColumnId = "2011", Value = "52.3" },
        new HeatmapData { RowId = "China", ColumnId = "2012", Value = "54.8" },
        new HeatmapData { RowId = "China", ColumnId = "2013", Value = "51.1" },
        new HeatmapData { RowId = "China", ColumnId = "2014", Value = "55.6" },
        new HeatmapData { RowId = "China", ColumnId = "2015", Value = "56.9" },
        new HeatmapData { RowId = "China", ColumnId = "2016", Value = "59.3" },
        new HeatmapData { RowId = "Italy", ColumnId = "2010", Value = "43.6" },
        new HeatmapData { RowId = "Italy", ColumnId = "2011", Value = "43.2" },
        new HeatmapData { RowId = "Italy", ColumnId = "2012", Value = "55.8" },
        new HeatmapData { RowId = "Italy", ColumnId = "2013", Value = "50.1" },
        new HeatmapData { RowId = "Italy", ColumnId = "2014", Value = "48.5" },
        new HeatmapData { RowId = "Italy", ColumnId = "2015", Value = "50.7" },
        new HeatmapData { RowId = "Italy", ColumnId = "2016", Value = "52.4" },
        new HeatmapData { RowId = "UK", ColumnId = "2010", Value = "28.2" },
        new HeatmapData { RowId = "UK", ColumnId = "2011", Value = "31.6" },
        new HeatmapData { RowId = "UK", ColumnId = "2012", Value = "29.8" },
        new HeatmapData { RowId = "UK", ColumnId = "2013", Value = "33.1" },
        new HeatmapData { RowId = "UK", ColumnId = "2014", Value = "32.6" },
        new HeatmapData { RowId = "UK", ColumnId = "2015", Value = "34.4" },
        new HeatmapData { RowId = "UK", ColumnId = "2016", Value = "35.8" },
        new HeatmapData { RowId = "Germany", ColumnId = "2010", Value = "26.8" },
        new HeatmapData { RowId = "Germany", ColumnId = "2011", Value = "29" },
        new HeatmapData { RowId = "Germany", ColumnId = "2012", Value = "26.8" },
        new HeatmapData { RowId = "Germany", ColumnId = "2013", Value = "27.6" },
        new HeatmapData { RowId = "Germany", ColumnId = "2014", Value = "33" },
        new HeatmapData { RowId = "Germany", ColumnId = "2015", Value = "35" },
        new HeatmapData { RowId = "Germany", ColumnId = "2016", Value = "35.6" },
        new HeatmapData { RowId = "Mexico", ColumnId = "2010", Value = "23.2" },
        new HeatmapData { RowId = "Mexico", ColumnId = "2011", Value = "24.9" },
        new HeatmapData { RowId = "Mexico", ColumnId = "2012", Value = "30.1" },
        new HeatmapData { RowId = "Mexico", ColumnId = "2013", Value = "22.2" },
        new HeatmapData { RowId = "Mexico", ColumnId = "2014", Value = "29.3" },
        new HeatmapData { RowId = "Mexico", ColumnId = "2015", Value = "32.1" },
        new HeatmapData { RowId = "Mexico", ColumnId = "2016", Value = "35" },
        new HeatmapData { RowId = "Thailand", ColumnId = "2010", Value = "15.9" },
        new HeatmapData { RowId = "Thailand", ColumnId = "2011", Value = "19.8" },
        new HeatmapData { RowId = "Thailand", ColumnId = "2012", Value = "21.8" },
        new HeatmapData { RowId = "Thailand", ColumnId = "2013", Value = "23.5" },
        new HeatmapData { RowId = "Thailand", ColumnId = "2014", Value = "24.8" },
        new HeatmapData { RowId = "Thailand", ColumnId = "2015", Value = "29.9" },
        new HeatmapData { RowId = "Thailand", ColumnId = "2016", Value = "32.6" },
        new HeatmapData { RowId = "Austria", ColumnId = "2010", Value = "22" },
        new HeatmapData { RowId = "Austria", ColumnId = "2011", Value = "21.3" },
        new HeatmapData { RowId = "Austria", ColumnId = "2012", Value = "24.2" },
        new HeatmapData { RowId = "Austria", ColumnId = "2013", Value = "23.2" },
        new HeatmapData { RowId = "Austria", ColumnId = "2014", Value = "25" },
        new HeatmapData { RowId = "Austria", ColumnId = "2015", Value = "26.7" },
        new HeatmapData { RowId = "Austria", ColumnId = "2016", Value = "28.1" }
    };
    public void TooltipRendering(TooltipEventArgs args)
    {
        if (SampleService != null && SampleService.IsDevice)
        {
            args.Content = new string[] { args.XLabel + " | " + args.YLabel + " : " + args.Value + " M " };
        }
    }
    private void Resized(ResizeEventArgs args)
    {
        if (args.CurrentSize.Width <= 500)
        {
            LabelFormat = string.Empty;
        }
        else
        {
            LabelFormat = "{value} M";
        }
    }
    protected override void OnInitialized()
    {
        _theme = HeatmapThemeHelper.GetCurrentHeatmapTheme(NavigationManager.Uri);
        AxisLabelColor = (_theme.ToString().IndexOf("Dark") > -1 || _theme.ToString().IndexOf("HighContrast") > -1) ? "#FFFFFF" : "#000000";
        if (SampleService != null && SampleService.IsDevice)
        {
            LabelFormat = string.Empty;
        } 
        else
        {
            LabelFormat = "{value} M";
        }
    }
}