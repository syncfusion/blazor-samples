@page "/DropDown-Tree/Default-Functionalities"

@using Syncfusion.Blazor.Navigations
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>
        This sample explains the default functionalities of the Blazor <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Navigations.SfDropDownTree-2.html">Dropdown Tree</a>
        component with different local data binding. Click the Dropdown Tree component and then select an item from the hierarchical structure <code>options</code>
        list.
    </p>
</SampleDescription>
<ActionDescription>
    <p>The <code>Dropdown Tree</code> component loads the data through the <code>DataSource</code> property  that is a member of the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Navigations.DropDownTreeField-1.html#constructors" target="_blank">Fields</a> property, where the data can be either local or remote. With local data, the data structure can be hierarchical data or list data (with self-referential format, i.e., mapped with the <b>Id</b> and <b>ParentID</b> fields).</p>
    <p>In this demo, the first Dropdown Tree component  is bound with hierarchical data that contains an array of nested objects. The second Dropdown Tree component is bound with list type data, where the parent-child relation is referenced by the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Navigations.DropDownTreeField-1.html#Syncfusion_Blazor_Navigations_DropDownTreeField_1_ID">ID</a> and <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Navigations.DropDownTreeField-1.html#Syncfusion_Blazor_Navigations_DropDownTreeField_1_ParentID">ParentID</a>  mapping fields.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="row">
        <div class="col-lg-6">
            <div class="control-wrapper">
                <label for="hierarchical" class="default-label" aria-label="Select a country from hierarchical data">Hierarchical Data</label>
                <SfDropDownTree TItem="TreeData" TValue="string" ID="hierarchical" Placeholder="Select a country" PopupHeight="200px">
                    <DropDownTreeField TItem="TreeData" DataSource="@TreeDataSource" ID="Code" Text="Name" Expanded="Expanded" Child="@("Child")"></DropDownTreeField>
                </SfDropDownTree>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="control-wrapper">
                <label for="list" class="default-label" aria-label="Select a category from hierarchical data">List Data</label>
                <SfDropDownTree TItem="ProductCategory" TValue="int?" ID="list" Placeholder="Select a Category" PopupHeight="200px">
                    <DropDownTreeField TItem="ProductCategory" DataSource="@Categories" ID="Id" ParentID="ParentId" Text="Name" HasChildren="HasChild" Expanded="Expanded"></DropDownTreeField>
                </SfDropDownTree>
            </div>
        </div>
    </div>
</div>

@code {
    
    private List<TreeData> TreeDataSource = new List<TreeData>
    {
        new TreeData
        {
            Code = "NA",
            Name = "North America",
            Expanded = true,
            Child = new List<TreeData>
            {
                new TreeData { Code = "USA", Name = "United States of America" },
                new TreeData { Code = "CUB", Name = "Cuba" },
                new TreeData { Code = "MEX", Name = "Mexico" }
            }
        },
        new TreeData
        {
            Code = "AF",
            Name = "Africa",
            Child = new List<TreeData>
            {
                new TreeData { Code = "NGA", Name = "Nigeria" },
                new TreeData { Code = "EGY", Name = "Egypt" },
                new TreeData { Code = "ZAF", Name = "South Africa" }
            }
        },
        new TreeData
        {
            Code = "AS",
            Name = "Asia",
            Child = new List<TreeData>
            {
                new TreeData { Code = "CHN", Name = "China" },
                new TreeData { Code = "IND", Name = "India" },
                new TreeData { Code = "JPN", Name = "Japan" }
            }
        },
        new TreeData
        {
            Code = "EU",
            Name = "Europe",
            Child = new List<TreeData>
            {
                new TreeData { Code = "DNK", Name = "Denmark" },
                new TreeData { Code = "AUT", Name = "Austria" },
                new TreeData { Code = "FIN", Name = "Finland" }
            }
        },
        new TreeData
        {
            Code = "SA",
            Name = "South America",
            Child = new List<TreeData>
            {
                new TreeData { Code = "BRA", Name = "Brazil" },
                new TreeData { Code = "COL", Name = "Colombia" },
                new TreeData { Code = "ARG", Name = "Argentina" }
            }
        },
        new TreeData
        {
            Code = "OC",
            Name = "Oceania",
            Child = new List<TreeData>
            {
                new TreeData { Code = "AUS", Name = "Australia" },
                new TreeData { Code = "NZL", Name = "New Zealand" },
                new TreeData { Code = "WSM", Name = "Samoa" }
            }
        },
        new TreeData
        {
            Code = "AN",
            Name = "Antarctica",
            Child = new List<TreeData>
            {
                new TreeData { Code = "BVT", Name = "Bouvet Island" },
                new TreeData { Code = "ATF", Name = "French Southern Lands" }
            }
        }
    };

    private List<ProductCategory> Categories = new List<ProductCategory>
    {
        new ProductCategory { Id = 1, Name = "Electronics", HasChild=true, Expanded = true },
        new ProductCategory { Id = 2, Name = "Smartphones", ParentId = 1 },
        new ProductCategory { Id = 3, Name = "Laptops", ParentId = 1 },
        new ProductCategory { Id = 4, Name = "Tablets", ParentId = 1 },
        new ProductCategory { Id = 5, Name = "Accessories", ParentId = 1 },
        new ProductCategory { Id = 6, Name = "Clothing", HasChild=true  },
        new ProductCategory { Id = 7, Name = "Men's Clothing", ParentId = 6 },
        new ProductCategory { Id = 8, Name = "Women's Clothing", ParentId = 6 },
        new ProductCategory { Id = 9, Name = "Kids' Clothing", ParentId = 6 },
        new ProductCategory { Id = 10, Name = "Shoes", ParentId = 6 },
        new ProductCategory { Id = 11, Name = "Home & Furniture", HasChild=true },
        new ProductCategory { Id = 12, Name = "Living Room", ParentId = 11 },
        new ProductCategory { Id = 13, Name = "Bedroom", ParentId = 11 },
        new ProductCategory { Id = 14, Name = "Kitchen", ParentId = 11 },
        new ProductCategory { Id = 15, Name = "Outdoor", ParentId = 11 },
        new ProductCategory { Id = 16, Name = "Sports & Fitness", HasChild=true, Expanded=true },
        new ProductCategory { Id = 17, Name = "Exercise Equipment", ParentId = 16 },
        new ProductCategory { Id = 18, Name = "Outdoor Activities", ParentId = 16 },
        new ProductCategory { Id = 19, Name = "Team Sports", ParentId = 16 },
        new ProductCategory { Id = 20, Name = "Books & Media", HasChild=true },
        new ProductCategory { Id = 21, Name = "Books", ParentId = 20 },
        new ProductCategory { Id = 22, Name = "Movies", ParentId = 20 },
        new ProductCategory { Id = 23, Name = "Music", ParentId = 20 },
        new ProductCategory { Id = 24, Name = "Toys & Games", HasChild = true },
        new ProductCategory { Id = 25, Name = "Board Games", ParentId = 24 },
        new ProductCategory { Id = 26, Name = "Outdoor Games", ParentId = 24 }
    };

    public class ProductCategory
    {
        public int? Id { get; set; }
        public string Name { get; set; }
        public int? ParentId { get; set; }
        public bool HasChild { get; set; }
        public bool Expanded { get; set; }
    }

    public class TreeData
    {
        public string Code { get; set; }
        public string Name { get; set; }
        public bool Expanded { get; set; }
        public List<TreeData> Child;
    }
}

<style>
    .control-wrapper {
        max-width: 300px;
        padding: 20px 0px 0px;
        margin: 0 auto;
    }

    .default-label {
        font-size: 14px;
        margin-bottom: 6px;
    }

    @@media (max-width: 900px) {
        .control-wrapper {
            padding: 30px 0px 0px;
        }
    }
</style>
