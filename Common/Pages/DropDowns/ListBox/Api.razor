@page "/listbox/api"

@using Syncfusion.Blazor.DropDowns

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the API functionalities of the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.DropDowns.SfListBox-2.html" target="_blank" aria-label="ListBox">ListBox</a> component by using its properties from the property pane. Select any combination of properties from the property pane to achieve desired functionalities in the ListBox component.</p>
</SampleDescription>
<ActionDescription>
    <p>In this demo, <code>ListBox</code> is rendered with the grouping feature by setting the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor~Syncfusion.Blazor.DropDowns.ListBoxFieldSettings~GroupBy.html" aria-label="GroupBy">GroupBy</a> property in the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.DropDowns.ListBoxFieldSettings.html" aria-label="ListBoxFieldSettings">ListBoxFieldSettings</a> property. This sample has been showcased with the following set of properties:</p>
    <ul>
        <li>You can switch to <b>Single</b> or <b>Multiple</b> selection <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.DropDowns.SelectionMode.html" target="_blank" aria-label="mode">mode</a> by selecting the mode from the selection mode dropdown list.</li>
        <li>You can switch to <b>None</b>, <b>Ascending</b>, or <b>Descending</b> sort orders by selecting the sort order from the sort order dropdown list.</li>
    </ul>
    <p>In this sample, grouping is enabled by default, and vegetableData is grouped based on its category. The user can change the sort order and selection type using the dropdown list.</p>
    <p>More information about the Blazor ListBox API can be found in the <a href="https://help.syncfusion.com/cr/blazor/syncfusion.blazor.dropdowns.sflistbox-2.html" target="_blank" aria-label="documentation section">documentation section</a>.</p>
</ActionDescription>

<div class="col-lg-8 control-section">
    <div id="listbox-control1">
        @{
        sortOrder = orderValue switch
        {
        "Descending" => SortOrder.Descending,
        "Ascending" => SortOrder.Ascending,
        _ => SortOrder.None
        };
        }
        <SfListBox DataSource="@VegetableList" TValue="string[]" TItem="VegetableItem" SortOrder="@sortOrder">
            <ListBoxFieldSettings Text="VegetableName" Value="Id" GroupBy="Category"></ListBoxFieldSettings>
            <ListBoxSelectionSettings Mode="@selectionMode"></ListBoxSelectionSettings>
        </SfListBox>
    </div>
</div>
<div class="col-lg-4 property-section">
    <table id="property" title="Properties" style="width: 100%">
        <tbody>
        <tr>
            <td style="width: 50%;padding-top:10px">
                <div>Sort Order</div>
            </td>
            <td style="width: 50%;padding-top:10px">
                <div style="max-width: 200px">
                    <SfDropDownList PopupHeight="200px" DataSource="@SortOptions" @bind-Value="@orderValue" TValue="string" TItem="SortOption">
                        <DropDownListEvents TItem="SortOption" ValueChange="OnOrderChange" TValue="string"></DropDownListEvents>
                        <DropDownListFieldSettings Text="Text"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>
            </td>
        </tr>
        <tr>
            <td style="width: 50%;padding-top:10px">
                <div>Selection Mode</div>
            </td>
            <td style="width: 50%;padding-top:10px">
                <div style="max-width: 200px">
                    <SfDropDownList PopupHeight="200px" DataSource="@SelectionModes" @bind-Value="@selectionValue" TValue="string" TItem="SortOption">
                        <DropDownListEvents ValueChange="OnSelectionModeChange" TItem="SortOption" TValue="string"></DropDownListEvents>
                        <DropDownListFieldSettings Text="Text"></DropDownListFieldSettings>
                    </SfDropDownList>
                </div>
            </td>
        </tr>
        </tbody>
    </table>
</div>

@code {
    private SelectionMode selectionMode = SelectionMode.Single;
    private string? orderValue = "None";
    private SortOrder sortOrder = SortOrder.None;
    private string selectionValue = "Single";

    private List<SortOption> SortOptions = new List<SortOption>()
    {
        new SortOption { Text = "None" },
        new SortOption { Text = "Ascending" },
        new SortOption { Text = "Descending" }
    };

    private List<SortOption> SelectionModes = new List<SortOption>()
    {
        new SortOption { Text = "Single" },
        new SortOption { Text = "Multiple" }
    };

    private List<VegetableItem> VegetableList = new List<VegetableItem>()
    {
        new VegetableItem { VegetableName = "Cabbage", Category = "Leafy and Salad", Id = "item1" },
        new VegetableItem { VegetableName = "Chickpea", Category = "Beans", Id = "item2" },
        new VegetableItem { VegetableName = "Garlic", Category = "Bulb and Stem", Id = "item3" },
        new VegetableItem { VegetableName = "Green bean", Category = "Beans", Id = "item4" },
        new VegetableItem { VegetableName = "Horse gram", Category = "Beans", Id = "item5" },
        new VegetableItem { VegetableName = "Nopal", Category = "Bulb and Stem", Id = "item6" },
        new VegetableItem { VegetableName = "Onion", Category = "Bulb and Stem", Id = "item7" },
        new VegetableItem { VegetableName = "Pumpkins", Category = "Leafy and Salad", Id = "item8" },
        new VegetableItem { VegetableName = "Spinach", Category = "Leafy and Salad", Id = "item9" },
        new VegetableItem { VegetableName = "Wheat grass", Category = "Leafy and Salad", Id = "item10" },
        new VegetableItem { VegetableName = "Yarrow", Category = "Leafy and Salad", Id = "item11" }
    };

    public class VegetableItem
    {
        public string? VegetableName { get; set; }
        public string? Category { get; set; }
        public string? Id { get; set; }
    }

    public class SortOption
    {
        public string? Text { get; set; }
    }

    private void OnOrderChange(ChangeEventArgs<string, SortOption> args)
    {
        orderValue = args.Value;
    }

    private void OnSelectionModeChange(ChangeEventArgs<string, SortOption> args)
    {
        selectionMode = args.Value == "Single" ? SelectionMode.Single : SelectionMode.Multiple;
    }

}

<style>
    #listbox-control {
        width: 350px;
        margin: auto;
        margin-bottom: 15px;
    }
    @@media screen and (max-width: 590px) {
        #listbox-control {
            width: 100%;
        }
    }
</style>