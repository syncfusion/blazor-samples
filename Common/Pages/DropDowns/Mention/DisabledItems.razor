
@page "/Mention/DisabledItems"

@using Syncfusion.Blazor.DropDowns

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample showcases the disabled items of the Mention component. Type the <code>@@</code> character in the editable element and you will notice that the disabled items are greyed out and cannot be selected.</p>
</SampleDescription>
<ActionDescription>
    <p>The Mention provides options for individual items to be in either an enabled or disabled state for specific scenarios. Once an item is disabled, it cannot be select a particular item. To configure the disabled item columns, use the <b>MentionFieldSettings.Disabled</b> property.</p>
</ActionDescription>

<div id="mention-controls">
    <table>
        <tr>
            <td>
                <label class="default-size">Comments</label>
                <SfMention TItem="Person" DataSource="@People" PopupHeight="200px" PopupWidth="250px">
                    <TargetComponent>
                        <div id="mentionInput" aria-label="Type to tag user" placeholder="Type @@ and tag user"></div>
                    </TargetComponent>
                    <ItemTemplate>
                        <div class="list-item">
                            <img class="mention-image" src="@(SampleService.WebAssetsPath)images/dropdown-list/employees/@((context as Person).EmployeeImage).png" alt="employee"/>
                            <span class="person">@((context as Person).Name) @(context.State ? " (inactive)" : "")</span>
                            <span class="email">@((context as Person).Email)</span>
                        </div>
                    </ItemTemplate>
                    <DisplayTemplate>
                        @((context as Person).Name)
                    </DisplayTemplate>
                    <NoRecordsTemplate>
                        There are no results for the search
                    </NoRecordsTemplate>
                    <ChildContent>
                        <MentionFieldSettings Text="Name" Disabled="State"></MentionFieldSettings>
                    </ChildContent>
                </SfMention>
            </td>
        </tr>
    </table>
</div>

<style>
    #mentionInput {
        min-height: 100px;
        border: 1px solid #D7D7D7;
        width: 600px;
        padding: 8px;
        font-size: 14px;
        border-radius: 4px;
    }
    #mention-controls {
        margin: 0 auto;
        width: 600px;
    }
    .list-item {
        padding-left: 12px;
        vertical-align: middle;
        width: 80%;
    }
    .e-mention .e-dropdownbase .e-list-item {
        line-height: 25px;
        text-indent: 8px;
    }
    .mention-image {
        width: 44px;
        float: left;
    }
    .person {
        font-size: 16px;
        margin-top: 8px;
    }
    .e-dropdownbase .e-list-item * {
        display: block;
    }
    div#mentionInput[placeholder]:empty:before {
        content: attr(placeholder);
        color: #555;
    }
    .default-size {
        font-size: 15px;
        font-weight: 600;
    }
    @@media screen and (max-width: 1010px) {
        #mentionInput,
        #mention-controls,
        #mention-controls table {
            width: 100%;
        }
    }
</style>

@code {
    public class Person
    {  
        public string? Name { get; set; }
        public string? Email { get; set; }
        public string? EmployeeImage { get; set; }
        public bool State { get; set; }
    }

    private List<Person> People = new List<Person>
    {
        new Person() { Name = "Selma Rose", EmployeeImage = "3", Email = "selma@gmail.com", State = true },
        new Person() { Name = "Russo Kay", EmployeeImage = "8", Email = "russo@gmail.com", State = false },
        new Person() { Name = "Camden Kate", EmployeeImage = "9", Email = "camden@gmail.com", State = false },
        new Person() { Name = "Mary Kate", EmployeeImage = "4", Email = "mary@gmail.com", State = true },
        new Person() { Name = "Ursula Ann", EmployeeImage = "2", Email = "ursula@gmail.com", State = false },
        new Person() { Name = "Margaret", EmployeeImage = "5", Email = "margaret@gmail.com", State = false },
        new Person() { Name = "Laura Grace", EmployeeImage = "6", Email = "laura@gmail.com", State = false },
        new Person() { Name = "Robert", EmployeeImage = "8", Email = "robert@gmail.com", State = true },
        new Person() { Name = "Albert", EmployeeImage = "9", Email = "albert@gmail.com", State = false },
        new Person() { Name = "Michale", EmployeeImage = "10", Email = "michale@gmail.com", State = false },
        new Person() { Name = "Andrew James", EmployeeImage = "7", Email = "james@gmail.com", State = false },
        new Person() { Name = "Rosalie", EmployeeImage = "4", Email = "rosalie@gmail.com", State = false },
        new Person() { Name = "Stella Ruth", EmployeeImage = "2", Email = "rosalie@gmail.com", State = true },
        new Person() { Name = "Richard Rose", EmployeeImage = "10", Email = "richard@gmail.com", State = false },
        new Person() { Name = "Gabrielle", EmployeeImage = "3", Email = "gabrielle@gmail.com", State = false },
        new Person() { Name = "Thomas", EmployeeImage = "7", Email = "thomas@gmail.com", State = false },
        new Person() { Name = "Charles Danny", EmployeeImage = "8", Email = "charles@gmail.com", State = false },
        new Person() { Name = "Daniel", EmployeeImage = "10", Email = "daniel@gmail.com", State = true },
        new Person() { Name = "Matthew", EmployeeImage = "7", Email = "matthew@gmail.com", State = false },
        new Person() { Name = "Donald Krish", EmployeeImage = "9", Email = "donald@gmail.com", State = false },
        new Person() { Name = "Yohana", EmployeeImage = "1", Email = "yohana@gmail.com", State = true },
        new Person() { Name = "Kevin Paul", EmployeeImage = "10", Email = "kevin@gmail.com", State = false }
    };

}
