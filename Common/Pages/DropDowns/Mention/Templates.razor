
@page "/Mention/Template"

@using Syncfusion.Blazor.DropDowns

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the template functionalities of the Mention component. Type the <code>@@</code> character in the editable element and select or tag the user from the customized suggestion list.</p>
</SampleDescription>
<ActionDescription>
    <p>In the above sample, for the template rendering the following are used</p>
    <ul>
        <li><code>TargetComponent</code> - It is used to set the target element, where the Mention component needs to be displayed.</li>
        <li><code>ItemTemplate</code> - It is used for displaying customized lists.</li>
        <li><code>DisplayTemplate</code> - It is used to display, how the the value selected is previewed in the element.</li>
        <li><code>NoRecordsTemplate</code> - It is used to display a message if a user searches for irrelevant data in the data source bound.</li>
    </ul>
</ActionDescription>

<div id="mention-controls">
    <table>
        <tr>
            <td>
                <label class="default-size">Comments</label>
                <SfMention TItem="PersonData" DataSource="@EmailData" PopupHeight="200px" PopupWidth="250px">
                    <TargetComponent>
                        <div id="templateMention" aria-label="Type tag user" placeHolder="Type @@ and tag user"></div>
                    </TargetComponent>
                    <ItemTemplate>
                        <div class="listItems"><img class="mentionEmpImage" src="@(SampleService.WebAssetsPath)images/dropdown-list/employees/@((context as PersonData).EmployeeImage).png" alt="employee"/>
                            <span class="person">@((context as PersonData).Name)</span>
                            <span class="email">@((context as PersonData).EmailId)</span>
                        </div>
                    </ItemTemplate>
                    <DisplayTemplate>
                        @((context as PersonData).Name)
                    </DisplayTemplate>
                    <NoRecordsTemplate>
                        There are no results for the search
                    </NoRecordsTemplate>
                    <ChildContent>
                        <MentionFieldSettings Text="Name"></MentionFieldSettings>
                    </ChildContent>
                </SfMention>
            </td>
        </tr>
    </table>
</div>

<style>
    #templateMention {
        min-height: 100px;
        border: 1px solid #D7D7D7;
        width: 600px;
        padding: 8px;
        font-size: 14px;
        border-radius: 4px;
    }
    #mention-controls {
        margin: 0 auto;
        width: 600px;
    }
    .listItems {
	padding-left: 12px;
	vertical-align: middle;
	width: 80%;
    }
    .e-mention .e-dropdownbase .e-list-item {
	line-height: 25px;
	text-indent: 8px;
    }
    .mentionEmpImage {
	width: 44px;
	float: left;
    }
    .person {
	font-size: 16px;
	margin-top: 8px;
    }
    .e-dropdownbase .e-list-item * {
        display: block;
    }
    div#templateMention[placeholder]:empty:before {
        content: attr(placeholder);
        color: #555;
    }
    .template-size {
        font-size: 15px;
        font-weight: 600;
    }
    @@media screen and (max-width: 1010px) {
        #templateMention,
        #mention-controls,#mention-controls table{
            width: 100%;
        }
    }
</style>

@code {
    
  public class PersonData
  {  
    public string? Name { get; set; }
    public string? EmailId { get; set; }
    public string? EmployeeImage { get; set;}
  }

  private List<PersonData> EmailData = new List<PersonData>
  {
      new PersonData() { Name = "Selma Rose", EmployeeImage = "3", EmailId = "selma@gmail.com" },
      new PersonData() { Name = "Russo Kay", EmployeeImage = "8", EmailId = "russo@gmail.com" },
      new PersonData() { Name = "Camden Kate", EmployeeImage = "9", EmailId = "camden@gmail.com" },
      new PersonData() { Name = "Mary Kate", EmployeeImage = "4", EmailId = "mary@gmail.com" },
      new PersonData() { Name = "Ursula Ann", EmployeeImage = "2", EmailId = "ursula@gmail.com" },
      new PersonData() { Name = "Margaret", EmployeeImage = "5", EmailId = "margaret@gmail.com" },
      new PersonData() { Name = "Laura Grace", EmployeeImage = "6", EmailId = "laura@gmail.com" },
      new PersonData() { Name = "Robert", EmployeeImage = "8", EmailId = "robert@gmail.com" },
      new PersonData() { Name = "Albert", EmployeeImage = "9", EmailId = "albert@gmail.com" },
      new PersonData() { Name = "Michale", EmployeeImage = "10", EmailId = "michale@gmail.com" },
      new PersonData() { Name = "Andrew James", EmployeeImage = "7", EmailId = "james@gmail.com" },
      new PersonData() { Name = "Rosalie", EmployeeImage = "4", EmailId = "rosalie@gmail.com" },
      new PersonData() { Name = "Stella Ruth", EmployeeImage = "2", EmailId = "rosalie@gmail.com" },
      new PersonData() { Name = "Richard Rose", EmployeeImage = "10", EmailId = "richard@gmail.com" },
      new PersonData() { Name = "Gabrielle", EmployeeImage = "3", EmailId = "gabrielle@gmail.com" },
      new PersonData() { Name = "Thomas", EmployeeImage = "7", EmailId = "thomas@gmail.com" },
      new PersonData() { Name = "Charles Danny", EmployeeImage = "8", EmailId = "charles@gmail.com" },
      new PersonData() { Name = "Daniel", EmployeeImage = "10", EmailId = "daniel@gmail.com" },
      new PersonData() { Name = "Matthew", EmployeeImage = "7", EmailId = "matthew@gmail.com" },
      new PersonData() { Name = "Donald Krish", EmployeeImage = "9", EmailId = "donald@gmail.com" },
      new PersonData() { Name = "Yohana", EmployeeImage = "1", EmailId = "yohana@gmail.com" },
      new PersonData() { Name = "Kevin Paul", EmployeeImage = "10", EmailId = "kevin@gmail.com" }
  };
}
