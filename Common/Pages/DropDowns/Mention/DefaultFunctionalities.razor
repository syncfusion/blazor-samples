
@page "/Mention/Default-Functionalities"

@using Syncfusion.Blazor.DropDowns

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the default functionalities of the Mention component. Type the <code>@@</code> character in the editable element and select or tag the user from the suggestion list.</p>
</SampleDescription>
<ActionDescription>
    <p>The <code>Mention</code> is a component used to display a list of items that the users can select or tag from the list suggested. You can use the <code>@@</code> mention support with the <code>input</code>, <code>textarea</code>, and <code>contenteditable</code> div elements.</p>
    <p>In the above sample, the div elements are configured with <code>@@</code> mentions listing the <code>comments</code> contents.</p>
</ActionDescription>

<div id="mention-controls">
    <table>
        <tr>
            <td>
                <label class="default-size">Comments</label>
                <SfMention TItem="PersonData" DataSource="@EmailData" PopupHeight="250px">
                    <TargetComponent>
                        <div id="commentsMention" aria-label="Mention Target" role="textbox" placeHolder="Type @@ and tag user" ></div>
                    </TargetComponent>
                    <ChildContent>
                        <MentionFieldSettings Text="Name"></MentionFieldSettings>
                    </ChildContent>
                </SfMention>
            </td>
        </tr>
    </table>
</div>

<style>
    #commentsMention {
        min-height: 100px;
        border: 1px solid #D7D7D7;
        border-radius: 4px;
        padding: 8px;
        font-size: 14px;
        width: 600px;
    }
    #mention-controls {
        margin: 0 auto;
        width: 600px;
    }
    div#commentsMention[placeholder]:empty:before {
        content: attr(placeholder);
        color: #555;
    }
    @@media screen and (max-width: 1010px) {
        #commentsMention, #mention-controls, #mention-controls table{
            width: 100%;
        }
    }
</style>

@code {
    
  public class PersonData
  {  
    public string? Name { get; set; }
    public string? EmailId { get; set; }
    public string? EmployeeImage { get; set;}
  }

  private List<PersonData> EmailData = new List<PersonData>
  {
      new PersonData() { Name = "Selma Rose", EmployeeImage = "7", EmailId = "selma@gmail.com" },
      new PersonData() { Name = "Russo Kay", EmployeeImage = "8", EmailId = "russo@gmail.com" },
      new PersonData() { Name = "Camden Kate", EmployeeImage = "9", EmailId = "camden@gmail.com" },
      new PersonData() { Name = "Garth", EmployeeImage = "3", EmailId = "garth@gmail.com" },
      new PersonData() { Name = "Ursula Ann", EmployeeImage = "10", EmailId = "ursula@gmail.com" },
      new PersonData() { Name = "Margaret", EmployeeImage = "5", EmailId = "margaret@gmail.com" },
      new PersonData() { Name = "Laura Grace", EmployeeImage = "7", EmailId = "laura@gmail.com" },
      new PersonData() { Name = "Robert", EmployeeImage = "8", EmailId = "robert@gmail.com" },
      new PersonData() { Name = "Albert", EmployeeImage = "9", EmailId = "albert@gmail.com" },
      new PersonData() { Name = "Michale", EmployeeImage = "10", EmailId = "michale@gmail.com" },
      new PersonData() { Name = "Andrew James", EmployeeImage = "3", EmailId = "james@gmail.com" },
      new PersonData() { Name = "William", EmployeeImage = "4", EmailId = "william@gmail.com" },
      new PersonData() { Name = "David", EmployeeImage = "5", EmailId = "david@gmail.com" },
      new PersonData() { Name = "Richard Rose", EmployeeImage = "7", EmailId = "richard@gmail.com" },
      new PersonData() { Name = "Joseph", EmployeeImage = "8", EmailId = "joseph@gmail.com" },
      new PersonData() { Name = "Thomas", EmployeeImage = "9", EmailId = "thomas@gmail.com" },
      new PersonData() { Name = "Charles Danny", EmployeeImage = "10", EmailId = "charles@gmail.com" },
      new PersonData() { Name = "Daniel", EmployeeImage = "3", EmailId = "daniel@gmail.com" },
      new PersonData() { Name = "Matthew", EmployeeImage = "2", EmailId = "matthew@gmail.com" },
      new PersonData() { Name = "Donald Krish", EmployeeImage = "1", EmailId = "donald@gmail.com" },
      new PersonData() { Name = "Paul", EmployeeImage = "4", EmailId = "paul@gmail.com" },
      new PersonData() { Name = "Kevin Paul", EmployeeImage = "5", EmailId = "kevin@gmail.com" }
  };
}