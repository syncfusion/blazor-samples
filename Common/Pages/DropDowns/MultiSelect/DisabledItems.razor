@page "/MultiSelect-Dropdown/DisabledItems"

@using Syncfusion.Blazor.DropDowns
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This example showcases the disabled items of MultiSelect. When you click on the MultiSelect dropdown, the popup will open, and you will notice that the disabled items are greyed out and cannot be selected.</p>
</SampleDescription>
<ActionDescription>
   <p>The MultiSelect Dropdown provides options for individual items to be in either an enabled or disabled state for specific scenarios. Once an item is disabled, it cannot be selected as a value for the component. To configure the disabled item columns, use the <b>MultiSelectFieldSettings.Disabled</b> property.</p>
</ActionDescription>

 <div class="col-lg-12 control-section">
    <div class="row">
        <div class="col-lg-6">
            <div class="control-wrapper">
                <label class="example-label">Tags</label>
                <SfMultiSelect TItem="Status" TValue="string[]" Placeholder="Select Tags" DataSource="@Data" AllowFiltering="true" ShowDropDownIcon=true>
                    <MultiSelectFieldSettings Text="Text" Value="Id" Disabled="State" />
                </SfMultiSelect>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="control-wrapper">
                <label class="example-label">Vegetables</label>
                <SfMultiSelect TValue="string[]" TItem="Vegetables" Placeholder="Select Vegetables" Mode="@VisualMode.CheckBox" DataSource="@GroupData" ShowDropDownIcon=true>
                    <MultiSelectFieldSettings GroupBy="Category" Text="Vegetable" Value="Id" Disabled="State" />
                </SfMultiSelect>
            </div>
        </div>
    </div>
</div>

<style>
    .control-wrapper {
        max-width: 250px;
        padding: 30px 0px 0px;
        margin: 0 auto;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }
</style>

@code {

    public class Status
    {
        public string? Id { get; set; }
        public string? Text { get; set; }
        public bool State { get; set; }
    }

    private List<Status> Data = new List<Status>()
    {
        new Status(){ Id = "State1", Text = "Add to KB", State = false },
        new Status(){ Id = "State2", Text = "Crisis", State = false },
        new Status(){ Id = "State3", Text = "Enhancement", State = true },
        new Status(){ Id = "State4", Text = "Pre-Sale", State = false },
        new Status(){ Id = "State5", Text = "Needs Approval", State = false },
        new Status(){ Id = "State6", Text = "Approved", State = true },
        new Status(){ Id = "State7", Text = "Internal Issue", State = true },
        new Status(){ Id = "State8", Text = "Breaking Issue", State = false },
        new Status(){ Id = "State9", Text = "New Feature", State = true },
        new Status(){ Id = "State10", Text = "New Component", State = false },
        new Status(){ Id = "State11", Text = "Mobile Issue", State = false }
    };

    public class Vegetables
    {
        public string? Vegetable { get; set; }
        public string? Category { get; set; }
        public string? Id { get; set; }
        public bool State { get; set; }
    }

    private List<Vegetables> GroupData = new List<Vegetables>()
    {
        new Vegetables() { Vegetable = "Cabbage", Category = "Leafy and Salad", Id = "item1", State = true },
        new Vegetables() { Vegetable = "Pumpkins", Category = "Leafy and Salad", Id = "item2", State = false },
        new Vegetables() { Vegetable = "Chickpea", Category = "Beans", Id = "item3", State = true },
        new Vegetables() { Vegetable = "Garlic", Category = "Bulb and Stem", Id = "item4", State = false },
        new Vegetables() { Vegetable = "Green bean", Category = "Beans", Id = "item5", State = false },
        new Vegetables() { Vegetable = "Horse gram", Category = "Beans", Id = "item6", State = true },
        new Vegetables() { Vegetable = "Nopal", Category = "Bulb and Stem", Id = "item7", State = true },
        new Vegetables() { Vegetable = "Onion", Category = "Bulb and Stem", Id = "item8", State = false },     
        new Vegetables() { Vegetable = "Spinach", Category = "Leafy and Salad", Id = "item9", State = true },
        new Vegetables() { Vegetable = "Wheat grass", Category = "Leafy and Salad", Id = "item10", State = false },
        new Vegetables() { Vegetable = "Yarrow", Category = "Leafy and Salad", Id = "item11", State = false }
    };
}

