@page "/MultiSelect-Dropdown/Default-Functionalities"

@using Syncfusion.Blazor.DropDowns

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This example demonstrates the default functionalities of the <a href="https://www.syncfusion.com/blazor-components/blazor-multiselect-dropdown" aria-label="Feature Tour of Blazor MultiSelect">Blazor MultiSelect</a>. Type a character in the MultiSelect element or click on this element to choose one or more items from the suggestion list.</p>
</SampleDescription>
<ActionDescription>
   <p>The MultiSelect component contains a list of predefined values, from that you can choose a multiple values. Also, various render <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.DropDowns.SfMultiSelect-2.html#Syncfusion_Blazor_DropDowns_SfMultiSelect_2_Mode" target="_blank" aria-label="Class reference of Mode property in MultiSelect Dropdown">modes</a> are available to visualize selected items in the MultiSelect.</p>
   <p>Render modes are listed here below,</p>
    <ul>
        <li><b>Default</b> - By default, the selected items are displayed as chip type when the component is in focus. Otherwise, selected items are displayed with a delimiter character.</li>
        <li><b>Box</b> - The selected items are displayed as a chip (box) type in the MultiSelect input box.</li>
        <li><b>Delimiter</b> - The selected items are displayed with a delimiter character in the MultiSelect input box.</li>
    </ul>
    <p><b>See also</b></p>
    <ul>
        <li><a href="https://blazor.syncfusion.com/documentation/multiselect-dropdown/getting-started/" target="_blank" aria-label="Blazor MultiSelect DropDown Getting Started documentation">Getting started with Blazor MultiSelect</a></li>
    </ul>
</ActionDescription>

<div class="control-section">
    <div class="control-wrapper">
        <div class="control-modes">
            <label class="example-label">Default Mode</label>
            <SfMultiSelect TValue="string[]" TItem="GameFields" Mode="@VisualMode.Default" Placeholder="Favorite sports" DataSource="@Games">
                <MultiSelectFieldSettings Text="Text" Value="Id"></MultiSelectFieldSettings>
            </SfMultiSelect>
        </div>
        <div class="control-modes">
            <label class="example-label">Box Mode</label>
            <SfMultiSelect TValue="string[]" TItem="GameFields" Mode="@VisualMode.Box" Placeholder="Favorite sports" DataSource="@Games">
                <MultiSelectFieldSettings Text="Text" Value="Id"></MultiSelectFieldSettings>
            </SfMultiSelect>
        </div>
        <div class="control-modes">
            <label class="example-label">Delimiter Mode</label>
            <SfMultiSelect TValue="string[]" TItem="GameFields" Mode="@VisualMode.Delimiter" Placeholder="Favorite sports" DataSource="@Games">
                <MultiSelectFieldSettings Text="Text" Value="Id"></MultiSelectFieldSettings>
            </SfMultiSelect>
        </div>
    </div>
</div>

@code{
    
    public class GameFields
    {
        public string? Id { get; set; }
        public string? Text { get; set; }
    }

    private List<GameFields> Games = new List<GameFields>()
    {
        new GameFields() { Id = "Game1", Text = "American Football" },
        new GameFields() { Id = "Game2", Text = "Badminton" },
        new GameFields() { Id = "Game3", Text = "Basketball" },
        new GameFields() { Id = "Game4", Text = "Cricket" },
        new GameFields() { Id = "Game5", Text = "Football" },
        new GameFields() { Id = "Game6", Text = "Golf" },
        new GameFields() { Id = "Game7", Text = "Hockey" },
        new GameFields() { Id = "Game8", Text = "Rugby" },
        new GameFields() { Id = "Game9", Text = "Snooker" },
        new GameFields() { Id = "Game10", Text = "Tennis" }
    };
}

<style>
    .control-wrapper {
        max-width: 300px;
        margin: 0 auto;
        padding: 25px 0px 0px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }

    .control-modes {
        padding: 12px 0px;
    }
</style>