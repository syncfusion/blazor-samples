@page "/MultiSelect-Dropdown/Chip-Customization"

@using Syncfusion.Blazor.DropDowns;


@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This example demonstrates the customization of selected chip element in the MultiSelect. Type a character in the MultiSelect element or click on the element to choose one or more items from the list.</p>
</SampleDescription>
<ActionDescription>
    <p>The MultiSelect allows the user to customize the selected chip element through the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.DropDowns.MultiSelectEvents-2.html#Syncfusion_Blazor_DropDowns_MultiSelectEvents_2_OnChipTag" aria-label="Class reference of OnChipTag event in MultiSelect Dropdown">OnChipTag</a> event. In that event, you can set the custom classes to chip element via the event argument of the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.DropDowns.TaggingEventArgs-1.html#Syncfusion_Blazor_DropDowns_TaggingEventArgs_1_SetClass">SetClass</a> method.</p>
    <p><b>See also</b></p>
    <ul>
       <li><a href="https://blazor.syncfusion.com/documentation/multiselect-dropdown/style/" target="_blank" aria-label="Blazor MultiSelect DropDown Customization documentation">Blazor MultiSelect - Customization</a></li>
    </ul>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="control-wrapper">
        <label class="example-label">Select favorite colors</label>
        <SfMultiSelect TValue="string[]" TItem="GameFields" @bind-Value="@ChipValue" ID="default" Placeholder="e.g. Dark Orange" Mode="@Syncfusion.Blazor.DropDowns.VisualMode.Box" DataSource="@ColorsData">
            <MultiSelectFieldSettings Text="Color" Value="Code"></MultiSelectFieldSettings>
            <MultiSelectEvents TValue="string[]" TItem="GameFields" OnChipTag="@OnTagging"></MultiSelectEvents>
        </SfMultiSelect>
    </div>
</div>

<style>
    .control-wrapper {
        max-width: 300px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }

    .e-bigger .control-section .control-wrapper {
        width: 100%;
    }

    .e-multi-select-wrapper .e-chips {
        opacity: 0.9;
    }

    .e-multi-select-wrapper .e-chips:hover {
        opacity: 1;
    }

    .e-multi-select-wrapper .e-chips .e-chips-close.e-icon::before,
    .e-multi-select-wrapper .e-chips .e-chipcontent,
    .e-multi-select-wrapper .e-chips .e-chipcontent:hover {
        color: #ffffff;
        -webkit-text-fill-color: #ffffff;
    }

    .e-chips.chocolate,
    .e-multiselect .e-multi-select-wrapper .e-chips.chocolate:hover {
        background-color: #75523C;
    }

    .e-chips.dark.orange,
    .e-multiselect .e-multi-select-wrapper .e-chips.dark.orange:hover {
        background-color: #FF843D;
    }

    .e-chips.dark.red,
    .e-multiselect .e-multi-select-wrapper .e-chips.dark.red:hover {
        background-color: #CA3832;
    }

    .e-chips.fuchsia,
    .e-multiselect .e-multi-select-wrapper .e-chips.fuchsia:hover {
        background-color: #D44FA3;
    }

    .e-chips.cadet.blue,
    .e-multiselect .e-multi-select-wrapper .e-chips.cadet.blue:hover {
        background-color: #3B8289;
    }

    .e-chips.hot.pink,
    .e-multiselect .e-multi-select-wrapper .e-chips.hot.pink:hover {
        background-color: #F23F82;
    }

    .e-chips.indigo,
    .e-multiselect .e-multi-select-wrapper .e-chips.indigo:hover {
        background-color: #2F5D81;
    }

    .e-chips.lime.green,
    .e-multiselect .e-multi-select-wrapper .e-chips.lime.green:hover {
        background-color: #4CD242;
    }

    .e-chips.orange.red,
    .e-multiselect .e-multi-select-wrapper .e-chips.orange.red:hover {
        background-color: #FE2A00;
    }

    .e-chips.tomato,
    .e-multiselect .e-multi-select-wrapper .e-chips.tomato:hover {
        background-color: #FF745C;
    }
</style>

@code{
    private string[] ChipValue { get; set; } = { "#2F5D81", "#D44FA3", "#4CD242", "#FE2A00", "#75523C" };
    
    public class GameFields
    {
        public string? Color { get; set; }
        public string? Code { get; set; }
    }
    private List<GameFields> ColorsData = new List<GameFields>()
    {
        new GameFields(){ Color= "Chocolate", Code= "#75523C" },
        new GameFields(){ Color= "Cadet Blue", Code= "#3B8289" },
        new GameFields(){ Color= "Dark Orange", Code= "#FF843D" },
        new GameFields(){ Color= "Dark Red", Code= "#CA3832"},
        new GameFields(){ Color= "Fuchsia", Code= "#D44FA3" },
        new GameFields(){ Color= "Hot Pink", Code= "#F23F82" },
        new GameFields(){ Color= "Indigo", Code= "#2F5D81" },
        new GameFields(){ Color= "Lime Green", Code= "#4CD242"},
        new GameFields(){ Color= "Orange Red", Code= "#FE2A00"},
        new GameFields(){ Color= "Tomato", Code= "#FF745C"}
    };
    private void OnTagging(Syncfusion.Blazor.DropDowns.TaggingEventArgs<GameFields> args)
    {
        args.SetClass = args.ItemData?.Color?.ToLower();
    }
}