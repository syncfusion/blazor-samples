@page "/AutoComplete/Highlight"

@using Syncfusion.Blazor.DropDowns

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This example demonstrates the highlight functionalities of the AutoComplete. Type a character(s) in the AutoComplete element and the typed matched characters will be highlighted in the suggestion list. By default, <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.DropDowns.AutoCompleteModel.html#Syncfusion_Blazor_DropDowns_AutoCompleteModel_FilterType" target="_blank" aria-label="Class reference of FilterType property in AutoComplete"> Contains</a> filter type is set in this sample and provided with the options to choose different filter types in the property panel.</p>
</SampleDescription>
<ActionDescription>
    <p>The AutoComplete has built-in support to highlight the searched characters on the suggested list items when <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.DropDowns.AutoCompleteModel.html#Syncfusion_Blazor_DropDowns_AutoCompleteModel_Highlight" target="_blank" aria-label="Class reference of Highlight property in AutoComplete"> Highlight</a> is enabled.</p>
    <p>This sample illustrates that the searched characters on the country suggestion list items are highlighted.</p>
</ActionDescription>

<div class="col-lg-12">
    <div class="col-lg-8 control-section sb-property-border">
        <div class="control-wrapper">
            <label class="example-label">Select a country</label>
            <SfAutoComplete TValue="string" TItem="Countries" FilterType="@FilterType" Placeholder="e.g. Australia" DataSource="@Country" Highlight="true" PopupHeight="350px">
                <AutoCompleteFieldSettings Value="Name"/>
            </SfAutoComplete>
        </div>
    </div>
    <div class="col-lg-4">
        <div class='property-panel-section'>
            <div class="property-panel-header">Properties</div>
            <div class="property-panel-content">
                <label class="example-label">Choose a filter type</label>
                <SfDropDownList TValue="string" TItem="FilterTypes" DataSource="@Data" @bind-Index="@Index">
                    <DropDownListEvents TItem="FilterTypes" TValue="string" ValueChange="OnChangeFilterType"></DropDownListEvents>
                    <DropDownListFieldSettings Text="Text" Value="Id"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>
        </div>
    </div>
</div>

@code{
    private int? Index { get; set; } = 0;
    private FilterType FilterType { get; set; } = (FilterType)Enum.Parse(typeof(FilterType), ("Contains"));

    public void OnChangeFilterType(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, FilterTypes> args)
    {
        if (args.Value != null)
        {
            this.FilterType = (FilterType)Enum.Parse(typeof(FilterType), (args.Value));            
        }
    }

    public class FilterTypes
    {
        public string? Id { get; set; }
        public string? Text { get; set; }
    }

    private List<FilterTypes> Data = new List<FilterTypes>()
    {
        new FilterTypes() { Id = "Contains", Text = "Contains" },
        new FilterTypes() { Id = "StartsWith", Text = "StartsWith" },
        new FilterTypes() { Id = "EndsWith", Text = "EndsWith" },
    };

    public class Countries
    {
        public string? Name { get; set; }
        public string? Code { get; set; }
    }

    private List<Countries> Country = new List<Countries>
    {
        new Countries() { Name = "Australia", Code = "AU" },
        new Countries() { Name = "Bermuda", Code = "BM" },
        new Countries() { Name = "Canada", Code = "CA" },
        new Countries() { Name = "Cameroon", Code = "CM" },
        new Countries() { Name = "Denmark", Code = "DK" },
        new Countries() { Name = "France", Code = "FR" },
        new Countries() { Name = "Finland", Code = "FI" },
        new Countries() { Name = "Germany", Code = "DE" },
        new Countries() { Name = "Greenland", Code = "GL" },
        new Countries() { Name = "Hong Kong", Code = "HK" },
        new Countries() { Name = "India", Code = "IN" },
        new Countries() { Name = "Italy", Code = "IT" },
        new Countries() { Name = "Japan", Code = "JP" },
        new Countries() { Name = "Mexico", Code = "MX" },
        new Countries() { Name = "Norway", Code = "NO" },
        new Countries() { Name = "Poland", Code = "PL" },
        new Countries() { Name = "Switzerland", Code = "CH" },
        new Countries() { Name = "United Kingdom", Code = "GB" },
        new Countries() { Name = "United States", Code = "US" }
    };
}

<style>
    .control-section {
        min-height: 370px;
    }
    .control-wrapper {
        max-width: 250px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }
    
    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }

    .property-panel-content {
        padding: 0px 0px 15px 0px;
    }

    .property-panel-content:last-child {
        padding: 0px 0px 40px 0px;
    }
</style>