@page "/AutoComplete/Custom-Filtering"

@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.Inputs

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This example demonstrates the custom filtering functionalities of the AutoComplete. You can choose an item from the suggestion list that filters items based on the approximate string matching technique.</p>
</SampleDescription>
<ActionDescription>
    <p>The AutoComplete can be customized to showcase the suggestion list by using the Filtering event and Filter method. You can also use your own filter libraries to filter data. The debounce delay, in milliseconds, for filtering the items in the AutoComplete component can be set by enabling the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.DropDowns.SfDropDownList-2.html#Syncfusion_Blazor_DropDowns_SfDropDownList_2_DebounceDelay" aria-label="Class reference of DebounceDelay property in AutoComplete">DebounceDelay</a> property.</p>.
    <p><b>See also</b></p>
    <ul>
        <li><a href="https://blazor.syncfusion.com/documentation/autocomplete/filtering#custom-filtering" target="_blank" aria-label="Blazor AutoComplete Filtering documentation">Blazor AutoComplete - Filtering</a></li>
    </ul>
</ActionDescription>

<div class="col-lg-12">
    <div class="col-lg-8 control-section sb-property-border">
        <div class="control-wrapper">
            <label class="example-label">Select a country</label>
            <SfAutoComplete TValue="string" @ref="AutocompleteObj" DebounceDelay="@NumericValue" TItem="Countries" Placeholder="e.g. Australia" DataSource="@Country">
                <AutoCompleteFieldSettings Value="Name" />
                <AutoCompleteEvents TValue="string" TItem="Countries" Filtering="OnFilter" />
            </SfAutoComplete>
        </div>
    </div>
    <div class="col-lg-4">
        <div class='property-panel-section'>
            <div class="property-panel-header">Properties : </div>
            <div class="property-panel-content">
                <label class="example-label">Debounce Delay</label>
                <SfNumericTextBox TValue="int" Width="50%" Format="n0" @bind-Value="@NumericValue" Min=1></SfNumericTextBox>
            </div>
        </div>
    </div>
</div>

@code{
    private SfAutoComplete<string, Countries>? AutocompleteObj { get; set; }
    private int NumericValue = 300;
    
    public class Countries
    {
        public string? Name { get; set; }
        public string? Code { get; set; }
    }

    private List<Countries> Country = new List<Countries>
    {
        new Countries() { Name = "Australia", Code = "AU" },
        new Countries() { Name = "Bermuda", Code = "BM" },
        new Countries() { Name = "Canada", Code = "CA" },
        new Countries() { Name = "Cameroon", Code = "CM" },
        new Countries() { Name = "Denmark", Code = "DK" }
    };

    private async Task OnFilter(FilteringEventArgs args)
    {
        args.PreventDefaultAction = true;
        var query = new Query().Where(new WhereFilter() { Field = "Name", Operator = "contains", value = args.Text, IgnoreCase = true });
        query = !string.IsNullOrEmpty(args.Text) ? query : new Query();
        if (AutocompleteObj != null)
        {
            await AutocompleteObj.FilterAsync(Country, query);
        }
    }
}

<style>
    .control-wrapper {
        max-width: 250px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }

    .property-panel-content {
        padding: 0px 0px 15px 0px;
    }

    .property-panel-content:last-child {
        padding: 0px 0px 40px 0px;
    }
</style>
