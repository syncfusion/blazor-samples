@page "/MultiColumn-ComboBox/Filtering"

@using Syncfusion.Blazor.MultiColumnComboBox
@using Syncfusion.Blazor.DropDowns

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This example demonstrates the filtering capabilities of the <a href="https://www.syncfusion.com/blazor-components/blazor-multicolumn-combobox" aria-label="Feature Tour of Blazor MultiColumn ComboBox">Blazor MultiColumn ComboBox</a>. Users can type in the ComboBox to filter and narrow down the list of items across multiple columns, making it easier to find specific entries.</p>
</SampleDescription>
<ActionDescription>
    <p>The MultiColumn ComboBox supports filtering, which allows users to search for and select items by typing keywords. The available items are dynamically filtered based on the input, ensuring quick access to the desired data.</p>
    <p><b>See also</b></p>
    <ul>
        <li><a href="https://blazor.syncfusion.com/documentation/multicolumn-combobox/getting-started/" target="_blank" aria-label="Blazor MultiColumn ComboBox Getting Started documentation">Getting Started with Blazor MultiColumn ComboBox</a></li>
    </ul>
</ActionDescription>

<div class="col-lg-12">
    <div class="col-lg-8 control-section sb-property-border">
        <div class="control-wrapper">
            <label class="example-label">Select an employee</label>
            <SfMultiColumnComboBox TItem="Employee" TValue="string" AllowFiltering="true" PopupWidth="600px"
                                   @bind-Value="@Value" DataSource="@Employees" ValueField="Name"
                                   TextField="Name" Placeholder="e.g. Alice Johnson">
            </SfMultiColumnComboBox>
        </div>
    </div>
    <div class="col-lg-4">
        <div class='property-panel-section'>
            <div class="property-panel-header">Properties</div>
            <div class="property-panel-content">
                <label class="example-label">Choose filter type</label>
                <SfDropDownList TValue="Syncfusion.Blazor.MultiColumnComboBox.FilterType" 
                                TItem="string" Placeholder="Select a filter type"
                                DataSource="@EnumValues" @bind-Value="@SelectedFilterType" Id="ddlFilterType">
                </SfDropDownList>
            </div>
        </div>
    </div>
</div>

@code {
    public class Employee
    {
        public string? Name { get; set; }
        public string? Department { get; set; }
        public string? Role { get; set; }
        public string? Location { get; set; }
        public int Experience { get; set; }
    }

    private string Value { get; set; } = "Alice Johnson";

    private List<Employee> Employees = new List<Employee>();

    protected override Task OnInitializedAsync()
    {
        Employees = new List<Employee>
        {
            new Employee
            {
                Name = "Alice Johnson",
                Department = "Engineering",
                Role = "Software Engineer",
                Location = "New York",
                Experience = 5
            },
            new Employee
            {
                Name = "Bob Smith",
                Department = "Marketing",
                Role = "Marketing Manager",
                Location = "San Francisco",
                Experience = 7
            },
            new Employee
            {
                Name = "Catherine Lee",
                Department = "Finance",
                Role = "Financial Analyst",
                Location = "Chicago",
                Experience = 4
            },
            new Employee
            {
                Name = "David Kim",
                Department = "Engineering",
                Role = "DevOps Engineer",
                Location = "Austin",
                Experience = 6
            },
            new Employee
            {
                Name = "Eva Brown",
                Department = "Sales",
                Role = "Sales Executive",
                Location = "Boston",
                Experience = 3
            },
            new Employee
            {
                Name = "Frank White",
                Department = "Human Resources",
                Role = "HR Manager",
                Location = "Seattle",
                Experience = 8
            },
            new Employee
            {
                Name = "Grace Green",
                Department = "Design",
                Role = "UX Designer",
                Location = "Los Angeles",
                Experience = 5
            },
            new Employee
            {
                Name = "Hank Wilson",
                Department = "Engineering",
                Role = "Front-end Developer",
                Location = "Denver",
                Experience = 4
            }
        };

        return base.OnInitializedAsync();
    }

    public string[] EnumValues = Enum.GetNames(typeof(Syncfusion.Blazor.MultiColumnComboBox.FilterType));

    public Syncfusion.Blazor.MultiColumnComboBox.FilterType SelectedFilterType { get; set; } = Syncfusion.Blazor.MultiColumnComboBox.FilterType.Contains;
}

<style>
    .control-section {
        min-height: 370px;
    }

    .control-wrapper {
        max-width: 250px;
        margin: 0 auto;
        padding: 40px 0px 0px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }

    .property-panel-content {
        padding: 0px 0px 20px 0px;
    }

        .property-panel-content:last-child {
            padding: 0px 0px 40px 0px;
        }
</style>

