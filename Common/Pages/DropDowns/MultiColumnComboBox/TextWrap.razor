@page "/MultiColumn-ComboBox/TextWrap"

@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.MultiColumnComboBox

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This example demonstrates the TextWrap feature of the Blazor MultiColumn ComboBox, which specifies how words should break when reaching the end of a line, ensuring that content and headers wrap appropriately based on the specified wrapping options.</p>
</SampleDescription>
<ActionDescription>
    <p>The TextWrap feature of the Blazor MultiColumn ComboBox can be achieved by setting EnableTextWrap to true and configuring the TextWrapElement and TextOverflowMode enums to control how the content is displayed based on your preferences.</p>
    <ul>
        <p><b>TextWrapElement</b> is an enum Defines the element where text wrapping is applied.</p>
            <ul>
            <li><code>Both</code> - Wraps both the header and content.</li>
            <li><code>Header</code> - Wraps only the header.</li>
            <li><code>Content</code> - Wraps only the content.</li>
            </ul>
    </ul>
    <ul>
        <p><b>TextOverflowMode</b> is an enum Defines truncates the cell content when it overflows its area.</p>
        <ul>
            <li><code>Ellipsis</code> - Displays an ellipsis (...) when the content overflows its area.</li>
            <li><code>EllipsisWithTooltip</code> - Displays an ellipsis (...) when the content overflows its area, and it also shows a tooltip on hover.</li>
        </ul>
    </ul>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="control-wrapper">
        <label class="example-label">Select an employee</label>
        <SfMultiColumnComboBox @bind-Value="@Value" DataSource="@Employees" Width="300px" PopupWidth="600px" ValueField="Name" TextField="Name" Placeholder="Select an employee" EnableTextWrap="true" TextWrapElement="TextWrapElement.Header" TextOverflowMode="TextOverflowMode.EllipsisWithTooltip">
            <MultiColumnComboboxColumns>
            <MultiColumnComboboxColumn Field="Name" Header="Name of the employee" Width="150"></MultiColumnComboboxColumn>
                <MultiColumnComboboxColumn Field="Position" Header="Position" Width="100" Format="C2"></MultiColumnComboboxColumn>
                <MultiColumnComboboxColumn Field="Department" Header="Department" Width="100"></MultiColumnComboboxColumn>
                <MultiColumnComboboxColumn Field="Salary" Format="c2" Header="Salary" Width="100"></MultiColumnComboboxColumn>
                <MultiColumnComboboxColumn Field="Rating" Header="Rating" Width="100"></MultiColumnComboboxColumn>
            </MultiColumnComboboxColumns>
        </SfMultiColumnComboBox>
    </div>
</div>

@code {
    public class Employee
    {
        public string? Name { get; set; }
        public string? Position { get; set; }
        public string? Department { get; set; }
        public decimal Salary { get; set; }
        public double Rating { get; set; }
    }
    private List<Employee> Employees = new List<Employee>();
    private string Value { get; set; } = "Jonathan Alexander Smith";
    protected override Task OnInitializedAsync()
    {
    Employees = new List<Employee>
    {
        new Employee { Name = "Jonathan Alexander Smith", Position = "Senior Software Engineer", Department = "Engineering Department", Salary = 105000m, Rating = 4.8 },
        new Employee { Name = "Sophia Elizabeth Johnson", Position = "Lead Product Designer", Department = "Design & UX Team", Salary = 95000m, Rating = 4.7 },
        new Employee { Name = "Alexander James Thompson", Position = "Chief Marketing Officer", Department = "Marketing Division", Salary = 125000m, Rating = 4.9 },
        new Employee { Name = "Madeline Grace Harris", Position = "Project Manager for Enterprise Solutions", Department = "Project Management Office", Salary = 85000m, Rating = 4.5 },
        new Employee { Name = "Christopher Daniel Roberts", Position = "Data Scientist with AI Expertise", Department = "Data Analytics & AI", Salary = 115000m, Rating = 4.6 },
        new Employee { Name = "Rebecca Olivia Martinez", Position = "Human Resources Manager", Department = "Human Resources & Recruiting", Salary = 77000m, Rating = 4.3 },
        new Employee { Name = "James Benjamin Lee", Position = "Senior Web Developer and Full Stack Specialist", Department = "Engineering & Development", Salary = 98000m, Rating = 4.7 },
        new Employee { Name = "Chloe Isabelle Cooper", Position = "Product Marketing Manager", Department = "Product Strategy & Marketing", Salary = 87000m, Rating = 4.4 },
        new Employee { Name = "William Joseph Anderson", Position = "Senior IT Infrastructure Architect", Department = "IT Infrastructure & Operations", Salary = 102000m, Rating = 4.6 },
        new Employee { Name = "Charlotte Emily Carter", Position = "Customer Success Lead for Global Clients", Department = "Customer Success Team", Salary = 92000m, Rating = 4.8 },
    };
        return base.OnInitializedAsync();
    }
}


<style>
    .control-wrapper {
        max-width: 250px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }
</style>
