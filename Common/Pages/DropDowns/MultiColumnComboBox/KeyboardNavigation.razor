@page "/MultiColumn-ComboBox/Keyboard-Navigation"

@using Syncfusion.Blazor.MultiColumnComboBox

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This example demonstrates the keyboard navigation capabilities of the <a href="https://www.syncfusion.com/blazor-components/blazor-multicolumn-combobox" aria-label="Feature Tour of Blazor MultiColumn ComboBox">Blazor MultiColumn ComboBox</a>. Users can interact with the ComboBox using only the keyboard, providing an accessible and efficient way to navigate through the list and select items.</p>
</SampleDescription>
<ActionDescription>
    <p>The MultiColumn ComboBox supports comprehensive keyboard navigation, allowing users to perform all interactions without a mouse. You can open the dropdown, navigate through items, select an option, and close the dropdown using standard keyboard keys. This feature enhances accessibility and improves the user experience for keyboard-centric users.</p>
    <p>MultiColumn ComboBox supports the below keyboard actions</p>
    <b>Focus</b>
    <ul>
        <li>
            <span class="key-class"><kbd>Alt</kbd> + <kbd>J</kbd></span>
            <span> - Focuses on the first component of the sample.</span>
        </li>
    </ul>

    <b>Input Navigation</b>
    <ul>
        <li>
            <span class="key-class"><kbd>Alt</kbd> + <kbd>Down arrow</kbd></span>
            <span> - Opens the popup list.</span>
        </li>
        <li>
            <span class="key-class"><kbd>Alt</kbd> + <kbd>Up arrow</kbd></span>
            <span> - Closes the popup list.</span>
        </li>
        <li>
            <span class="key-class"><kbd>Home</kbd></span>
            <span> - Cursor moves before the first character in the input.</span>
        </li>
        <li>
            <span class="key-class"><kbd>End</kbd></span>
            <span> - Cursor moves next to the last character in the input.</span>
        </li>
        <li>
            <span class="key-class"><kbd>Tab</kbd></span>
            <span>
                - Focuses on the next Tab Index element on the page.
            </span>
        </li>
        <li>
            <span class="key-class"><kbd>Shift</kbd> + <kbd>Tab</kbd></span>
            <span>
                - Focuses on the previous Tab Index element on the page.
            </span>
        </li>
    </ul>

    <b>Selection</b>
    <ul>
        <li>
            <span class="key-class"><kbd>Enter</kbd></span>
            <span> - Selects the focused item, and when it is in an open state the popup list closes.</span>
        </li>
    </ul>

    <b>Popup Navigation</b>
    <ul>
        <li>
            <span class="key-class"><kbd>Down arrow</kbd></span>
            <span>
                - Selects the first item in the ComboBox when no item is
                selected. Otherwise, selects the item next to the currently selected item.
            </span>
        </li>
        <li>
            <span class="key-class"><kbd>Up arrow</kbd></span>
            <span> - Selects the item previous to the currently selected one.</span>
        </li>
        <li>
            <span class="key-class"><kbd>Esc</kbd></span>
            <span>
                - Closes the popup list when it is in an open state and the
                currently selected item remains the same.
            </span>
        </li>
    </ul>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="control-wrapper">
        <label class="example-label">Select a product</label>
        <SfMultiColumnComboBox TItem="Product" TValue="string" DataSource="@Products" ValueField="ProductID" TextField="ProductName" Placeholder="Select any product" PopupWidth="600px"></SfMultiColumnComboBox>
    </div>
</div>

@code {
    public class Product
    {
        public int ProductID { get; set; }
        public string? ProductName { get; set; }
        public decimal UnitPrice { get; set; }
        public int UnitsInStock { get; set; }
    }

    private List<Product> Products = new List<Product>();
    
    protected override Task OnInitializedAsync()
    {
        Products = new List<Product>
        {
            new Product
            {
                ProductID = 1,
                ProductName = "Chai",
                UnitPrice = 18m,
                UnitsInStock = 39
            },
            new Product
            {
                ProductID = 2,
                ProductName = "Chang",
                UnitPrice = 19m,
                UnitsInStock = 45
            },
            new Product
            {
                ProductID = 3,
                ProductName = "Aniseed Syrup",
                UnitPrice = 23m,
                UnitsInStock = 79
            },
            new Product
            {
                ProductID = 4,
                ProductName = "Chef Anton Cajun Seasoning",
                UnitPrice = 28m,
                UnitsInStock = 28
            },
            new Product
            {
                ProductID = 5,
                ProductName = "Gumbo Mix",
                UnitPrice = 11m,
                UnitsInStock = 50
            },
            new Product
            {
                ProductID = 6,
                ProductName = "Grandma Boysenberry",
                UnitPrice = 37m,
                UnitsInStock = 49
            },
            new Product
            {
                ProductID = 7,
                ProductName = "Northwoods Cranberry Sauce",
                UnitPrice = 23m,
                UnitsInStock = 91
            },
            new Product
            {
                ProductID = 8,
                ProductName = "Mishi Kobe Niku",
                UnitPrice = 32m,
                UnitsInStock = 16
            },
            new Product
            {
                ProductID = 9,
                ProductName = "Ikura",
                UnitPrice = 80m,
                UnitsInStock = 29
            },
            new Product
            {
                ProductID = 10,
                ProductName = "Uncle Bob Organic Dried Pears",
                UnitPrice = 26m,
                UnitsInStock = 32
            },
            new Product
            {
                ProductID = 11,
                ProductName = "Organic Dried Pears",
                UnitPrice = 29m,
                UnitsInStock = 19
            }
        };
        return base.OnInitializedAsync();
    }
}

<style>
    .control-wrapper {
        max-width: 250px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }
</style>
