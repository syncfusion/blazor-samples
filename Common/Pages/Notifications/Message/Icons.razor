@page "/message/icons"

@using Syncfusion.Blazor.Notifications
@using Syncfusion.Blazor.Buttons

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the visibility customization of severity and close icons of the Blazor Message component. Click the close icon to hide the message. Click the button to restore the hidden message. Check or uncheck the check box to show or hide the visibility of the severity icon. Check or uncheck the check box to show or hide the visibility of the close icon.</p>
</SampleDescription>
<ActionDescription>
    <p>The Message component can be rendered with and without the severity and close icons. The close icon is used to hide the message.</p>
    <p>In this sample, the Message component is rendered with a severity icon and a close icon. The visibility of the severity icon is handled by the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Notifications.SfMessage.html#Syncfusion_Blazor_Notifications_SfMessage_ShowIcon" aria-label="ShowIcon">ShowIcon</a> property. The visibility of the close icon is handled by the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Notifications.SfMessage.html#Syncfusion_Blazor_Notifications_SfMessage_ShowCloseIcon" aria-label="ShowCloseIcon">ShowCloseIcon</a> property.</p>
    <p>More information about Message icons can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/message/icons" aria-label="documentation section">documentation</a> section.</p>
</ActionDescription>

<div class="col-lg-8 control-section msg-icon-section sb-property-border">
    <div class="content-section">
        <SfButton Content="Show Default Message" CssClass="@DefaultButtonCssClass" OnClick="@ShowDefaultMessage"></SfButton>
        <SfMessage ShowIcon="@ShowDefaultMessageIcon" Closed="@OnDefaultMessageClosed" ShowCloseIcon="@ShowDefaultCloseIcon" @bind-Visible="@IsDefaultMessageVisible">Editing is restricted</SfMessage>

        <SfButton Content="Show Info Message" CssClass="@InfoButtonCssClass" OnClick="@ShowInfoMessage"></SfButton>
        <SfMessage Severity="MessageSeverity.Info" ShowIcon="@ShowInfoMessageIcon" ShowCloseIcon="@ShowInfoCloseIcon" Closed="@OnInfoMessageClosed" @bind-Visible="@IsInfoMessageVisible">Please read the comments carefully</SfMessage>

        <SfButton Content="Show Success Message" CssClass="@SuccessButtonCssClass" OnClick="@ShowSuccessMessage"></SfButton>
        <SfMessage Severity="MessageSeverity.Success" ShowIcon="@ShowSuccessMessageIcon" ShowCloseIcon="@ShowSuccessCloseIcon" Closed="@OnSuccessMessageClosed" @bind-Visible="@IsSuccessMessageVisible">Your message has been sent successfully</SfMessage>

        <SfButton Content="Show Warning Message" CssClass="@WarningButtonCssClass" OnClick="@ShowWarningMessage"></SfButton>
        <SfMessage Severity="MessageSeverity.Warning" ShowIcon="@ShowWarningMessageIcon" ShowCloseIcon="@ShowWarningCloseIcon" Closed="@OnWarningMessageClosed" @bind-Visible="@IsWarningMessageVisible">There was a problem with your network connection</SfMessage>

        <SfButton Content="Show Error Message" CssClass="@ErrorButtonCssClass" OnClick="@ShowErrorMessage"></SfButton>
        <SfMessage Severity="MessageSeverity.Error" ShowIcon="@ShowErrorMessageIcon" ShowCloseIcon="@ShowErrorCloseIcon" Closed="@OnErrorMessageClosed" @bind-Visible="@IsErrorMessageVisible">A problem occurred while submitting your data</SfMessage>
    </div>
</div>

<div class="col-lg-4 property-section">
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table id="property" title="Properties" class="property-panel-table">
                <tbody>
                <tr>
                    <td>
                        <SfCheckBox Label="Severity Icon" Name="severity-icons" Value="severityicon" @bind-Checked="@IsSeverityIconChecked" ValueChange="@OnSeverityIconChange" TChecked="bool"></SfCheckBox>
                    </td>
                </tr>
                <tr>
                    <td>
                        <SfCheckBox Label="Close Icon" Name="close-icons" Value="close-icon" @bind-Checked="@IsCloseIconChecked" ValueChange="@OnCloseIconChange" TChecked="bool"></SfCheckBox>
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    
    private bool ShowDefaultMessageIcon { get; set; } = true;
    private bool ShowInfoMessageIcon { get; set; } = true;
    private bool ShowSuccessMessageIcon { get; set; } = true;
    private bool ShowWarningMessageIcon { get; set; } = true;
    private bool ShowErrorMessageIcon { get; set; } = true;
    private bool IsDefaultMessageVisible { get; set; } = true;
    private bool IsInfoMessageVisible { get; set; } = true;
    private bool IsSuccessMessageVisible { get; set; } = true;
    private bool IsWarningMessageVisible { get; set; } = true;
    private bool IsErrorMessageVisible { get; set; } = true;
    private bool ShowDefaultCloseIcon { get; set; } = true;
    private bool ShowInfoCloseIcon { get; set; } = true;
    private bool ShowSuccessCloseIcon { get; set; } = true;
    private bool ShowWarningCloseIcon { get; set; } = true;
    private bool ShowErrorCloseIcon { get; set; } = true;
    private bool IsSeverityIconChecked { get; set; } = true;
    private bool IsCloseIconChecked { get; set; } = true;
    private string DefaultButtonCssClass { get; set; } = "e-outline e-primary msg-hidden";
    private string InfoButtonCssClass { get; set; } = "e-outline e-primary e-info msg-hidden";
    private string SuccessButtonCssClass { get; set; } = "e-outline e-primary e-success msg-hidden";
    private string WarningButtonCssClass { get; set; } = "e-outline e-primary e-warning msg-hidden";
    private string ErrorButtonCssClass { get; set; } = "e-outline e-primary e-error msg-hidden";
    private void OnDefaultMessageClosed() => DefaultButtonCssClass = "e-outline e-primary";
    private void OnInfoMessageClosed() => InfoButtonCssClass = "e-outline e-primary e-info";
    private void OnSuccessMessageClosed() => SuccessButtonCssClass = "e-outline e-primary e-success";
    private void OnWarningMessageClosed() => WarningButtonCssClass = "e-outline e-primary e-warning";
    private void OnErrorMessageClosed() => ErrorButtonCssClass = "e-outline e-primary e-error";
    private void ShowDefaultMessage()
    {
        IsDefaultMessageVisible = true;
        DefaultButtonCssClass = "e-outline e-primary msg-hidden";
    }
    private void ShowInfoMessage()
    {
        IsInfoMessageVisible = true;
        InfoButtonCssClass = "e-outline e-primary e-info msg-hidden";
    }
    private void ShowSuccessMessage()
    {
        IsSuccessMessageVisible = true;
        SuccessButtonCssClass = "e-outline e-primary e-success msg-hidden";
    }
    private void ShowWarningMessage()
    {
        IsWarningMessageVisible = true;
        WarningButtonCssClass = "e-outline e-primary e-warning msg-hidden";
    }
    private void ShowErrorMessage()
    {
        IsErrorMessageVisible = true;
        ErrorButtonCssClass = "e-outline e-primary e-error msg-hidden";
    }

// Checkbox change handlers
    private void OnSeverityIconChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        bool isChecked = args.Checked;
        ShowDefaultMessageIcon = isChecked;
        ShowInfoMessageIcon = isChecked;
        ShowSuccessMessageIcon = isChecked;
        ShowWarningMessageIcon = isChecked;
        ShowErrorMessageIcon = isChecked;
    }

    private void OnCloseIconChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        bool isChecked = args.Checked;
        ShowDefaultCloseIcon = isChecked;
        ShowInfoCloseIcon = isChecked;
        ShowSuccessCloseIcon = isChecked;
        ShowWarningCloseIcon = isChecked;
        ShowErrorCloseIcon = isChecked;
    }

}

<style>
    .msg-icon-section .content-section {
        margin: 0 auto;
        max-width: 520px;
        padding-top: 10px;
    }

    .msg-icon-section .e-message {
        margin: 10px 0;
    }

    .msg-icon-section .e-btn {
        display: block;
        margin: 10px 0;
    }

    .msg-icon-section .e-btn.msg-hidden {
        display: none;
    }
</style>
