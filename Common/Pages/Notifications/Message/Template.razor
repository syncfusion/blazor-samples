@page "/message/template"

@using Syncfusion.Blazor.Notifications
@using Syncfusion.Blazor.Buttons

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the template functionality of the Blazor Message component. Click the <b>dismiss</b> button to hide the message. Click the <b>Show pull request</b> button to restore the hidden message.</p>
</SampleDescription>
<ActionDescription>
    <p>The Message component has an option to customize the content with a custom structure. The content can be a string, paragraph, or any other HTML element.</p>
    <p>In this sample, the Message component content is customized with HTML elements and Blazor Button components.</p>
    <p>More information about Message template can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/message/template" aria-label="documentation section">documentation</a> section.</p>
</ActionDescription>

<div class="col-lg-12 control-section msg-template-section">
    <div class="content-section">
        <SfButton Content='Show Pull Request' CssClass="@ShowButtonCssClass" OnClick="@ShowMessage"></SfButton>
        <SfMessage Severity="MessageSeverity.Success" Visible="@IsMessageVisible">
            <h1>Merged Pull Request</h1>
            <p>Pull request #41 merged after a successful build</p>
            <SfButton CssClass='e-link' Content='View Commit'></SfButton>
            <SfButton CssClass='e-link' Content='Dismiss' OnClick="@DismissMessage"></SfButton>
        </SfMessage>
    </div>
</div>

@code {

// Button CSS class for visibility toggling
    public string ShowButtonCssClass { get; set; } = "e-outline e-primary e-success msg-hidden";

// Message visibility state
    public bool IsMessageVisible { get; set; } = true;

// Show the message and reset button class
    public void ShowMessage()
    {
        IsMessageVisible = true;
        ShowButtonCssClass = "e-outline e-primary e-success msg-hidden";
    }

// Dismiss the message and update button class
    public void DismissMessage()
    {
        IsMessageVisible = false;
        ShowButtonCssClass = "e-outline e-primary e-success";
    }

}

<style>
    .msg-template-section .content-section {
        margin: 0 auto;
        max-width: 450px;
        padding-top: 20px;
    }

    .msg-template-section .e-btn.msg-hidden {
        display: none;
    }

    .msg-template-section .e-message h1 {
        margin: 0;
        font-size: 16px;
        font-weight: 600;
        line-height: 1.25;
    }

    .msg-template-section .e-message .e-msg-icon {
        padding: 0 4px;
        margin-top: 3px;
    }

    .msg-template-section .e-message p {
        margin: 8px 0 4px;
    }

    .msg-template-section .e-message .e-btn {
        padding: 0;
    }

    .e-bigger .msg-template-section .e-message h1 {
        font-size: 20px;
    }

    .e-bigger .msg-template-section .e-message .e-msg-icon {
        padding: 2px 4px;
        font-size: 20px;
    }

    .bootstrap4.e-bigger .msg-template-section .e-message .e-msg-icon,
    .tailwind.e-bigger .msg-template-section .e-message .e-msg-icon,
    .tailwind-dark.e-bigger .msg-template-section .e-message .e-msg-icon {
        padding: 1px 4px;
    }
</style>