@page "/in-place-editor/date-pickers"

@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.InPlaceEditor

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the usage of picker components such as <a href="https://www.syncfusion.com/blazor-components/blazor-datepicker" aria-label="Feature Tour of Blazor DatePicker">DatePicker</a>, <a href="https://www.syncfusion.com/blazor-components/blazor-timepicker" aria-label="Feature Tour of Blazor TimePicker">TimePicker</a>, <a href="https://www.syncfusion.com/blazor-components/blazor-datetime-picker" aria-label="Feature Tour of Blazor DateTimePicker">DateTimePicker</a>, and <a href="https://www.syncfusion.com/blazor-components/blazor-daterangepicker" aria-label="Feature Tour of Blazor DateRangePicker">DateRangePicker</a>. Click on the dotted input element to switch to the editable state of the corresponding integrated component.</p>
</SampleDescription>
<ActionDescription>
    <p>This sample explains the way to integrate picker components with the In-place Editor component. The applicable types of components are:</p>
    <p>
        <ul>
            <li>DatePicker</li>
            <li>TimePicker</li>
            <li>DateTimePicker</li>
            <li>DateRangePicker</li>
        </ul>
    </p>
    <p>The above components and their features can be achieved to work in In-place Editor and customized with the model properties of the specific component.</p>
</ActionDescription>


<div class="row">
    <div class="col-lg-8 control-section inplace-control-section pickers-layout">
        <div class="control_wrapper">
            <table>
                <tr>
                    <td>
                        <label class="control-label">
                            DatePicker
                        </label>
                    </td>
                    <td>
                        <SfInPlaceEditor Type="InputType.Date" TValue="DateTime?" @bind-Value="@DateValue" Mode="@Mode">
                            <EditorComponent>
                                <SfDatePicker TValue="DateTime?" @bind-Value="@DateValue" Placeholder="Select a date"></SfDatePicker>
                            </EditorComponent>
                        </SfInPlaceEditor>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label">
                            TimePicker
                        </label>
                    </td>
                    <td>
                        <SfInPlaceEditor Mode="@Mode" Type="InputType.Time" TValue="DateTime?" @bind-Value="@TimeValue">
                            <EditorComponent>
                                <SfTimePicker TValue="DateTime?" @bind-Value="@TimeValue" Placeholder="Select a time"></SfTimePicker>
                            </EditorComponent>
                        </SfInPlaceEditor>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label">
                            DateTimePicker
                        </label>
                    </td>
                    <td>
                        <SfInPlaceEditor Type="InputType.DateTime" Mode="@Mode" TValue="DateTime?" @bind-Value="@DateTimeValue">
                            <EditorComponent>
                                <SfDateTimePicker Placeholder="Select a date and time" TValue="DateTime?" @bind-Value="@DateTimeValue"></SfDateTimePicker>
                            </EditorComponent>
                        </SfInPlaceEditor>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label">
                            DateRangePicker
                        </label>
                    </td>
                    <td>
                        <SfInPlaceEditor Type="InputType.DateRange" Mode="@Mode" TValue="DateTime[]" @bind-Value="@DateRangeValue">
                            <EditorComponent>
                                <SfDateRangePicker  @bind-StartDate="@StartDateValue" @bind-EndDate="@EndDateValue"></SfDateRangePicker>
                            </EditorComponent>
                        </SfInPlaceEditor>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="col-lg-4 property-section" id="pickerProperty">
        <div class="property-panel-section">
            <div class="property-panel-header">Properties</div>
            <div class="property-panel-content">
                <table class="property-panel-table">
                    <tbody>
                        <tr>
                            <td>
                                <div> Mode</div>
                            </td>
                            <td>
                                <div>
                                     <SfDropDownList Width="90%" TItem="InplaceModes" TValue="string" DataSource="@ModeData" @bind-Value="@DropMode">
                                        <DropDownListEvents TValue="string" TItem="InplaceModes" ValueChange="@ChangeEditMode"></DropDownListEvents>
                                        <DropDownListFieldSettings Text="Text" Value="Value"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@code {
    private Syncfusion.Blazor.InPlaceEditor.RenderMode Mode = Syncfusion.Blazor.InPlaceEditor.RenderMode.Inline;
    private DateTime? DateValue = new DateTime(2017, 05, 23);
    private DateTime? TimeValue = new DateTime(2017, 05, 23);
    private DateTime? DateTimeValue = new DateTime(2017, 05, 23);
    private DateTime? StartDateValue = new DateTime(2017, 05, 23);
    private DateTime? EndDateValue = new DateTime(2017, 05, 23);
    private DateTime[] DateRangeValue = new DateTime[2] { new DateTime(2017, 05, 23), new DateTime(2017, 07, 05) };
    private object DateData = new { placeholder = "Select a date" };
    private object TimeData = new { placeholder = "Select a time" };
    private object DateTimeData = new { placeholder = "Select a date and time" };
    private object DateRangeData = new { placeholder = "Select a date range" };
    public string DropMode { get; set; } = "Inline";
    
    public class InplaceModes
    {
        public string? Value { get; set; }
        public string? Text { get; set; }
    }

    private List<InplaceModes> ModeData = new List<InplaceModes>()
    {
        new InplaceModes() { Value = "Inline", Text = "Inline" },
        new InplaceModes() { Value = "Popup", Text = "Popup" }
    };
    private void ChangeEditMode(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, InplaceModes> args)
    {
        this.Mode = (args.Value != null && args.Value.ToString() == "Popup" ? Syncfusion.Blazor.InPlaceEditor.RenderMode.Popup : Syncfusion.Blazor.InPlaceEditor.RenderMode.Inline);
        this.StateHasChanged();
    }
}
<style>
    /* custom code start */
    .inplace-control-section.pickers-layout .control_wrapper {
        margin: auto;
        max-width: 400px;
    }

        .inplace-control-section.pickers-layout .control_wrapper table {
            margin: auto;
        }

            .inplace-control-section.pickers-layout .control_wrapper table td {
                width: 200px;
                height: 100px;
            }

                .inplace-control-section.pickers-layout .control_wrapper table td .control-label {
                    margin-bottom: 0px;
                    text-align: left;
                    font-size: 14px;
                    font-weight: 400
                }
    /* custom code end */
    #pickerProperty table td {
        width: 50%;
    }

    #pickerProperty table div {
        padding-left: 10px;
        padding-top: 10px;
    }

    .e-inplaceeditor-tip .e-editable-component .e-input-group .e-clear-icon.e-clear-icon-hide,
    .inplace-control-section.pickers-layout .e-inplaceeditor .e-editable-component .e-clear-icon-hide {
        display: block;
        visibility: hidden;
    }

    @@media (max-width: 768px) {
        .inplace-control-section.pickers-layout {
            padding-left: 0;
            padding-right: 0;
        }

        .inplace-control-section .control_wrapper table tr td:nth-child(1) {
            width: 130px;
        }

        .inplace-control-section .control_wrapper table tr td:nth-child(2) {
            width: 200px;
        }
    }
</style>
