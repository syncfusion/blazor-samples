@page "/dialog/positioning"

@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This example demonstrates how to position the Blazor Dialog component. Select the appropriate radio button to the position where the Dialog is displayed. The current position of the Dialog is at the center. Enable the 'Open' button to reopen the Dialog if it is closed.</p>
</SampleDescription>
<ActionDescription>
   <p>By default, the Blazor Dialog is displayed in the center of the target container. Use the <code>Position</code> property to set location where the Dialog displays relative to the target. The property point-out the horizontal and vertical coordinates. You can set positions with specific X and Y coordinates in pixel values.</p>
   <p>More information on the positioning of Dialog can be found in the<a target="_blank" href="https://blazor.syncfusion.com/documentation/dialog/positioning/" aria-label="Blazor Dialog Position documentation"> documentation section </a>.</p>
</ActionDescription>

<div class="col-lg-12 control-section" id="target">
    <div>
        @if (this.ShowButton)
        {
            <SfButton Content="Open" @onclick="@OnClicked" aria-label="Open Dialog"></SfButton>
        }
    </div>
    <SfDialog ID="defaultDialog" Width="440px" Target="#target" ShowCloseIcon="true" @bind-Visible="Visibility">
        <DialogEvents OnOpen="@DialogOpen" Closed="@DialogClose"></DialogEvents>
        <DialogTemplates>
            <Header>Choose a Dialog Position</Header>
            <Content>
                <SfComboBox TValue="string" TItem="PositionFields" PopupHeight="230px" Placeholder="Select a Dialog Position" @bind-Value="@ComboBoxValue" DataSource="@Positions">
                    <ComboBoxEvents TValue="string" TItem="PositionFields" ValueChange="OnChange" />
                    <ComboBoxFieldSettings Text="Text" Value="Id" />
                </SfComboBox>
            </Content>
            <FooterTemplate>
                <span style="float:left;margin-left:8px;padding:10px;"> Position: { X: '@Xvalue', Y: '@Yvalue' }</span>
            </FooterTemplate>
        </DialogTemplates>
        <DialogPositionData X="@Xvalue" Y="@Yvalue"></DialogPositionData>
    </SfDialog>
</div>

<style>
    html,
    body,
    #container {
        height: 100%;
        overflow: hidden;
        width: 100%;
    }

    #defaultDialog table,
    #defaultDialog th,
    #defaultDialog td {
        border: 1px solid #D8D8D8;
        border-collapse: collapse;
    }

    #container {
        height: 365px;
    }

    #defaultDialog .e-dialog .e-footer-content {
        padding: 0px 10px 10px;
    }

    .control-section {
        width: 98%;
    }

    .bootstrap4 #defaultDialog.e-dialog {
        height: 235px !important;
    }

    .e-dialog .e-dlgcontent {
        padding: 10px 16px 10px;
    }

    .e-radio + label .e-label {
        line-height: 18px;
    }

    td {
        padding: 4px;
    }

    .bootstrap .e-dialog .e-footer-content {
        padding: 5px;
    }

    .fabric .e-dialog .e-footer-content, .highcontrast .e-dialog .e-footer-content {
        padding-left: 11px;
    }

    .fabric .control-section, .highcontrast .control-section {
        min-height: 370px;
        margin-bottom: 37px;
        margin-top: 10px;
    }

    .control-section {
        min-height: 370px;
        margin-bottom: 14px;
        margin-top: 10px;
    }

    .highcontrast .e-dialog .e-dlg-content, .fabric .e-dialog .e-dlg-content {
        padding: 28px 19px 20px;
    }

    .fabric #target .e-dialog {
        height: 292px;
    }

    .material #target .e-dialog {
        height: 220px;
    }

    #target .e-dialog {
        height: 230px;
    }
    
    #target .e-dlg-content {
        display: flex;
        align-items: center;
    }
    
    .fluent #target .e-dialog,
    .fluent-dark #target .e-dialog {
        height: 186px;
    }

    .fluent.e-bigger #target .e-dialog,
    .fluent-dark.e-bigger #target .e-dialog {
        height: 206px;
    }

    .highcontrast #target .e-dialog {
        height: 295px;
    }

    #target {
        min-height: 300px;
    }

    @@media (min-width: 320px) and (max-width: 480px) {
        #defaultDialog .e-dlg-content {
            overflow-x: auto;
        }
    }
</style>

@code {
    private string? Xvalue = "center";
    private string? Yvalue = "center";
    public string ComboBoxValue { get; set; } = "center center";
    private bool Visibility { get; set; } = true;
    private bool ShowButton { get; set; } = false;
    
    private void DialogOpen(Object args)
    {
        this.ShowButton = false;
    }

    private void DialogClose(Object args)
    {
        this.ShowButton = true;
    }

    private void OnClicked()
    {
        this.Visibility = true;
    }
    public class PositionFields
    {
        public string? Id { get; set; }
        public string? Text { get; set; }
    }

    private List<PositionFields> Positions = new List<PositionFields>()
    {
        new PositionFields() { Id = "left top", Text = "Left Top" },
        new PositionFields() { Id = "center top", Text = "Center Top" },
        new PositionFields() { Id = "right top", Text = "Right Top" },
        new PositionFields() { Id = "left center", Text = "Left Center" },
        new PositionFields() { Id = "center center", Text = "Center Center" },
        new PositionFields() { Id = "right center", Text = "Right Center" },
        new PositionFields() { Id = "left bottom", Text = "Left Bottom" },
        new PositionFields() { Id = "center bottom", Text = "Center Bottom" },
        new PositionFields() { Id = "right bottom", Text = "Right Bottom" },
    };
    public void OnChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, PositionFields> args)
    {
        this.Xvalue = args.ItemData?.Id?.ToString().Split(' ')[0];
        this.Yvalue = args.ItemData?.Id?.ToString().Split(' ')[1];
        this.StateHasChanged();
    }
}
