@page "/dialog/animation"

@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.Buttons

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>
        This example demonstrates how to open or close the Blazor Dialog with animation effects by clicking the appropriate button.
    </p>
</SampleDescription>
<ActionDescription>
   <p>
      The Blazor Dialog can be opened or closed with an animation effect using the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Popups.DialogAnimationSettings.html" aria-label="Class reference of DialogAnimationSettings">DialogAnimationSettings</a> tag. You can also customize the duration of the animation and the delay before the animation begins. Disable the Dialog's animation by setting the animation effect to none.  
    </p>
    <p>
        More information on the animation effect of Dialog can be found in the <a target="_blank" 
        href="https://blazor.syncfusion.com/documentation/dialog/animation/" aria-label="Blazor Dialog Animation documentation">
        documentation section</a>.
    </p>
</ActionDescription>
<div class="col-lg-12 control-section" id="target">
    <div id="customization">
        <div class="animate">
            <SfButton IsPrimary="true" CssClass="e-outline" Content="Zoom" OnClick="@(e => OnZoomButtonClick(DialogEffect.Zoom))"></SfButton>
        </div>
        <div class="animate">
            <SfButton IsPrimary="true" CssClass="e-outline" Content="FlipX Down" OnClick="@(e => OnZoomButtonClick(DialogEffect.FlipXDown))"></SfButton>
        </div>
        <div class="animate">
            <SfButton IsPrimary="true" CssClass="e-outline" Content="FlipX Up" OnClick="@(e => OnZoomButtonClick(DialogEffect.FlipXUp))"></SfButton>
        </div>
        <div class="animate">
            <SfButton IsPrimary="true" CssClass="e-outline" Content="FlipY Left" OnClick="@(e => OnZoomButtonClick(DialogEffect.FlipYLeft))"></SfButton>
        </div>
        <div class="animate">
            <SfButton IsPrimary="true" CssClass="e-outline" Content="FlipY Right" OnClick="@(e => OnZoomButtonClick(DialogEffect.FlipYRight))"></SfButton>
        </div>
    </div>

    <SfDialog AllowDragging="true" @bind-Visible="@_dialogVisible" IsModal="true" Width="285px" ShowCloseIcon="true" Target="#target">
        <DialogTemplates>
            <Header>
                Animation Dialog
            </Header>
            <Content>
               @_content
            </Content>
        </DialogTemplates>
        <DialogButtons>
            <DialogButton Content="Hide" IsPrimary="true" OnClick="OnButtonClick"></DialogButton>
        </DialogButtons>
        <DialogAnimationSettings Effect="@_animationEffect"></DialogAnimationSettings>
    </SfDialog>
</div>

@code {

    private string _content { get; set; } = "The dialog is configured with an animation effect. It is opened or closed with a 'Zoom In or Out' animation.";
    private bool _dialogVisible { get; set; } = true;
    private DialogEffect _animationEffect { get; set; } = DialogEffect.Zoom;
    
    private void OnButtonClick()
    {
        this._dialogVisible = false;
    }


    private void OnZoomButtonClick(DialogEffect type)
    {
        string text;
        switch(type)
        {
            case DialogEffect.Zoom:
                text = "Zoom";
                break;
            case DialogEffect.FlipXDown:
                text = "FlipX Down";
                break;
            case DialogEffect.FlipXUp:
                text = "FlipX Up";
                break;
            case DialogEffect.FlipYLeft:
                text = "FlipX Left";
                break;
            default:
                text = "FlipX Right";
                break;
        }

        this._content = "The dialog is configured with an animation effect. It is opened or closed with a '" + text +"' animation.";
        this._animationEffect = type;
        this._dialogVisible = true;
    }

}

<style>
    html,
    body,
    #container {
        height: 100%;
        overflow: hidden;
        width: 100%;
        position: relative;
        min-height: 400px;
    }

    .text {
        text-transform: capitalize;
    }

#customization {
display: table;
margin: 0 auto;
    }

    .animate {
    display: table-cell;
        padding-left: 20px;
    }
    @@media only screen and (max-width: 360px) {
            #customization {
		        display: inline-block;
		        margin: 0 auto;
		        text-align: center;
        	}

	        .animate {
	            display: inline-block;
	            padding: 10px;
	        }
	    }
</style>
