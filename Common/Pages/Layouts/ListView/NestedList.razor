@page "/listview/nested-list"
@using Syncfusion.Blazor.Lists
@inject NavigationManager UriHelper
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the nested list functionalities, which allows you to navigate to the sub-list items by clicking any item and navigating back to the list item using the back icon at the top left.</p>
</SampleDescription>
<ActionDescription>
    <p>The ListView component supports nested lists. To achieve list navigation, the <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Lists.ListViewFieldSettings-1.html#Syncfusion_Blazor_Lists_ListViewFieldSettings_1_Child" aria-label="Class reference of Child property in ListView">Child</a> property should be defined for the nested list in the array of <code>JSON</code>.</p>
    <p>This sample has a nested folder with subfolders or files.</p>
    <p>More information about the nested list feature can be found in this <a target="_blank" class="code" href="https://blazor.syncfusion.com/documentation/listview/nested-list"  aria-label="Blazor ListView Nestedlist documentation">documentation</a> section.</p>
</ActionDescription>

<div class="control-section">
    @* Initialization of nested ListView component *@
    <SfListView CssClass="nestedlist" DataSource="@ListData" ShowHeader="true" HeaderTitle="Folder" ShowIcon="true">
        <ListViewFieldSettings TValue="DataModel" Id="Id" Text="Text" Child="Child" IconCss="Icon" Tooltip="Text"></ListViewFieldSettings>
    </SfListView>
</div>

@code{

    // Specifies the ListView datasource.
    public List<DataModel> ListData = new List<DataModel>();

    // Specifies the model class for ListView datasource.
    public class DataModel
    {
        public string Id { get; set; }
        public string Text { get; set; }
        public string Icon { get; set; }
        public List<DataModel> Child { get; set; }
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        // Updating the ListView datasource.
        ListData.Add(new DataModel
        {
            Id = "01",
            Text = "Music",
            Icon = "folder",
            Child = new List<DataModel>() { new DataModel { Id = "01-01", Text = "Gouttes.mp3", Icon = "file" } }

        });
        ListData.Add(new DataModel
        {

            Id = "02",
            Text = "Videos",
            Icon = "folder",
            Child = new List<DataModel>()
            {
                new DataModel { Id = "02-01", Text = "Naturals.mp4", Icon = "file" },
                new DataModel { Id = "02-02", Text = "Wild.mpeg", Icon = "file" },
            }
        });
        ListData.Add(new DataModel
        {

            Id = "03",
            Text = "Documents",
            Icon = "folder",
            Child = new List<DataModel>()
            {
                new DataModel { Id = "03-01", Text = "Environment Pollution.docx", Icon = "file" },
                new DataModel { Id = "03-02", Text = "Global Water, Sanitation, & Hygiene.docx", Icon = "file" },
                new DataModel { Id = "03-03", Text = "Global Warming.ppt", Icon = "file" },
                new DataModel { Id = "03-04", Text = "Social Network.pdf", Icon = "file" },
                new DataModel { Id = "03-05", Text = "Youth Empowerment.pdf", Icon = "file" }
            }
        });

        ListData.Add(
            new DataModel
            {
                Id = "04",
                Text = "Pictures",
                Icon = "folder",
                Child = new List<DataModel>()
                {
                    new DataModel
                    {
                        Id = "04-01", Text = "Camera Roll", Icon = "folder", Child = new List<DataModel>()
                        {
                            new DataModel { Id = "04-01-01", Text = "WIN_20160726_094117.JPG", Icon = "file" },
                            new DataModel { Id = "04-01-02", Text = "WIN_20160726_094118.JPG", Icon = "file" },
                            new DataModel { Id = "04-01-03", Text = "WIN_20160726_094119.JPG", Icon = "file" }
                        }
                    },
                    new DataModel { Id = "04-02", Text = "Wind.jpg", Icon = "file" },
                    new DataModel { Id = "04-02", Text = "Stone.jpg", Icon = "file" },
                    new DataModel { Id = "04-02", Text = "Home.jpg", Icon = "file" },
                    new DataModel { Id = "04-02", Text = "Bridge.png", Icon = "file" }
                }
            });
        ListData.Add(
            new DataModel
            {
                Id = "05",
                Text = "Downloads",
                Icon = "folder",
                Child = new List<DataModel>()
                {
                    new DataModel { Id = "05-01", Text = "UI-Guide.pdf", Icon = "file" },
                    new DataModel { Id = "05-02", Text = "Tutorials.zip", Icon = "file" },
                    new DataModel { Id = "05-03", Text = "Game.exe", Icon = "file" },
                    new DataModel { Id = "05-04", Text = "TypeScript.7z", Icon = "file" },
                }
            });
    }

}


<style>
    /*ListView component icons styles*/
    .nestedlist.e-listview .e-list-icon {
        height: 24px;
        width: 30px;
        margin-right: 0;
    }

    .folder {
        background-repeat: no-repeat;
        background-image: url('@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/listview/file-icons.png")');
        background-position: -5px -466px;
        background-size: 302%;
    }

    .file {
        background-repeat: no-repeat;
        background-image: url('@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/listview/file-icons.png")');
        background-position: -5px -151px;
        background-size: 302%;
    }

    .nestedlist {
        max-width: 500px;
        margin: auto;
        border: 1px solid #dddddd;
        border-radius: 3px;
    }

    body.bootstrap5 .nestedlist,
    body.bootstrap5-dark .nestedlist {
        border-bottom: 0px;
    }
</style>