@page "/scheduler/working-days"

@using Syncfusion.Blazor.Schedule
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>  This demo showcases how to set customized working days as well as first day of a week and the way to show or hide the weekend days of a week on Scheduler.</p>
</SampleDescription>
<ActionDescription>
    <p>
        In this demo, the working days of a week can be set on Scheduler using the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Schedule.SfSchedule-1.html#Syncfusion_Blazor_Schedule_SfSchedule_1_WorkDays">WorkDays</a> property which accepts the collection of day indexes (from 0 to 6) of a week. By default, it is set to <code>[1, 2, 3, 4, 5]</code> and in this demo, it has been set to <code>[1, 3, 5]</code> which means that
        <code>Monday, Wednesday, and Friday</code> are set as working days of the week and are visually differentiated from non-working days. The working hours usually apply only on these given working days.
    </p>
    <p> The <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Schedule.SfSchedule-1.html#Syncfusion_Blazor_Schedule_SfSchedule_1_ShowWeekend">ShowWeekend</a> property is used either to show or hide the weekend days of a week and it is not applicable on <code>WorkWeek</code> view. By default, it is set to
        <code>true</code>. The days which are not a part of the working days collection of a Scheduler are usually considered as weekend days here.
    </p>
    <p> The first day of the week can also be set on the Scheduler by using the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Schedule.SfSchedule-1.html#Syncfusion_Blazor_Schedule_SfSchedule_1_FirstDayOfWeek">FirstDayOfWeek</a> property, which will make the Scheduler to start with that day. </p>
    <p><strong>Note: </strong> Here, Sunday is always denoted as 0, Monday as 1 and so on.</p>
</ActionDescription>

<div class="col-lg-12" style="padding-top:15px">
    <div class="col-md-3"  style="padding-bottom:15px">
        <SfDropDownList TValue="string" TItem="DropDownData" @bind-Index="@WorkIndex" DataSource="@WorkDaysData" PopupWidth="auto" Placeholder="Work days" FloatLabelType="FloatLabelType.Always">
            <DropDownListEvents TValue="string" TItem="DropDownData" ValueChange="OnChange"></DropDownListEvents>
            <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
        </SfDropDownList>
    </div>
    <div class="col-md-3">
        <SfDropDownList TValue="string" TItem="DropDownData" @bind-Index="@DayIndex" DataSource="@FirstDayOfWeek" PopupWidth="auto" Placeholder="First day of week" FloatLabelType="FloatLabelType.Always">
            <DropDownListEvents TValue="string" TItem="DropDownData" ValueChange="OnDayChange"></DropDownListEvents>
            <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
        </SfDropDownList>
    </div>
    <div class="col-md-3" style="padding-top:25px">
        <SfCheckBox @bind-Checked="@IsShowWeekend" Label="Show non-working days"></SfCheckBox>
    </div>
</div>

<div class="col-lg-12 control-section">
    <SfSchedule TValue="ScheduleData.AppointmentData" Width="100%" Height="650px" @bind-CurrentView="@CurrentView" @bind-SelectedDate="@CurrentDate" WorkDays="@_workingDays" FirstDayOfWeek="@_firstDay" ShowWeekend="@IsShowWeekend">
        <ScheduleEvents TValue="ScheduleData.AppointmentData" EventRendered="OnEventRendered"></ScheduleEvents>
        <ScheduleViews>
            <ScheduleView Option="View.Day"></ScheduleView>
            <ScheduleView Option="View.Week"></ScheduleView>
            <ScheduleView Option="View.WorkWeek"></ScheduleView>
            <ScheduleView Option="View.Month"></ScheduleView>
        </ScheduleViews>
        <ScheduleEventSettings DataSource="@EventDataSource"></ScheduleEventSettings>
    </SfSchedule>
</div>

@code{
    private int? WorkIndex { get; set; } = 0;
    private int? DayIndex { get; set; } = 1;
    private bool IsShowWeekend { get; set; } = false;
    private List<ScheduleData.AppointmentData> EventDataSource = new ScheduleData().GetEmployeeEventData();
    public View CurrentView { get; set; } = View.Week;
    private DateTime CurrentDate { get; set; } = new DateTime(DateTime.Today.Year, 1, 16);
    private int[] _workingDays = new int[] { 1, 3, 5 };
    private int _firstDay = 1;
    
    public void OnChange(ChangeEventArgs<string, DropDownData> args)
    {
        var numbers = (args.Value).Split(',').Select(Int32.Parse).ToArray();
        _workingDays = numbers;
    }
    public void OnDayChange(ChangeEventArgs<string, DropDownData> args)
    {
        _firstDay = Convert.ToInt32(args.Value);
    }
    public void OnEventRendered(EventRenderedArgs<ScheduleData.AppointmentData> args)
    {
        args.Attributes = ScheduleData.ApplyCategoryColor(args.Data.CategoryColor, args.Attributes, CurrentView);
    }

    private List<DropDownData> WorkDaysData { get; set; } = new List<DropDownData>()
    {
        new DropDownData { Name = "Mon, Wed, Fri", Value = "1,3,5" },
        new DropDownData { Name = "Mon, Tue, Wed, Thu, Fri", Value = "1,2,3,4,5" },
        new DropDownData { Name = "Tue, Wed, Thu, Fri", Value = "2,3,4,5" },
        new DropDownData { Name = "Thu, Fri, Sat, Mon, Tue", Value = "4,5,6,1,2" }
    };

    private List<DropDownData> FirstDayOfWeek { get; set; } = new List<DropDownData>()
    {
        new DropDownData { Name = "Sunday", Value = "0" },
        new DropDownData { Name = "Monday", Value = "1" },
        new DropDownData { Name = "Tuesday", Value = "2" },
        new DropDownData { Name = "Wednesday", Value = "3" },
        new DropDownData { Name = "Thursday", Value = "4" },
        new DropDownData { Name = "Friday", Value = "5" },
        new DropDownData { Name = "Saturday", Value = "6" }
    };
    public class DropDownData
    {
        public string Name { get; set; }
        public string Value { get; set; }
    }
}
