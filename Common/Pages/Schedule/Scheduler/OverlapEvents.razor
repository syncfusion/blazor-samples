@page "/scheduler/overlap-events"

@using Syncfusion.Blazor.Schedule
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This example shows how to restrict the overlapping appointment that within same time range.</p>
</SampleDescription>
<ActionDescription>
    <p>
        In this example, the Scheduler's <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Schedule.SfSchedule-1.html#Syncfusion_Blazor_Schedule_SfSchedule_1_AllowOverlap">AllowOverlap</a> API is used to restrict overlapping events, preventing one events from being scheduled within the time range of another event.
        By default, the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Schedule.SfSchedule-1.html#Syncfusion_Blazor_Schedule_SfSchedule_1_AllowOverlap">AllowOverlap</a> value is set to true. When <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Schedule.SfSchedule-1.html#Syncfusion_Blazor_Schedule_SfSchedule_1_AllowOverlap">AllowOverlap</a> is set to false, unable to add or edit events dynamically within the time range of other events,
        and cannot drag or resize events to overlap with other event time ranges.
    </p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <SfSchedule TValue="ScheduleData.AppointmentData" AllowOverlap="false" Width="100%" Height="550px" @bind-SelectedDate="@CurrentDate" @bind-CurrentView="@CurrentView">
        <ScheduleEventSettings DataSource="@dataSource"></ScheduleEventSettings>
    </SfSchedule>
</div>

@code {
    private View CurrentView { get; set; } = View.Week;
    private DateTime CurrentDate { get; set; } = new DateTime(2024, 12, 1);
    private List<ScheduleData.AppointmentData> dataSource = new ScheduleData().GetOverlappingData();
}
