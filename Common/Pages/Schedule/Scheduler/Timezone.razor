@page "/scheduler/timezone"

@using Syncfusion.Blazor.Schedule
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This demo visualizes the 2022 FIFA football match scheduler which is depicted as events here. The timings of each event are associated with the timezone of the match location where it will be held. When the Scheduler time zone changes, the events in it displays according to the selected timezone's offset time difference.</p>
</SampleDescription>
<ActionDescription>
    <p>In this demo, the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Schedule.SfSchedule-1.html#Syncfusion_Blazor_Schedule_SfSchedule_1_Timezone">Timezone</a> of Scheduler is set to UTC and each events on it holds different <code>StartTimezone</code> and <code>EndTimezone</code> values, therefore the event timings will be converted based on timezone assigned to Scheduler and will be displayed appropriately in UTC timings.</p>
    <p>When the user selects different timezone value listed out in a dropdown on properties panel, Scheduler will display the events accordingly to the selected timezone value as the selected timezone will be assigned to Scheduler <code>Timezone</code> property.</p>
</ActionDescription>

<div class="col-lg-12" style="padding-top:15px">
    <div class="col-md-3">
        <SfDropDownList TValue="string" PopupWidth="310px" Width="250px" Placeholder="Time zone" FloatLabelType="FloatLabelType.Always"  TItem="DropDownData" @bind-Value="@TimezoneValue" DataSource="@TimezoneData">
            <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
        </SfDropDownList>
    </div>
</div>
<div class="col-lg-12 control-section">
    <SfSchedule TValue="ScheduleData.FifaEventsData" Width="100%" Height="550px" @bind-SelectedDate="@CurrentDate" @bind-CurrentView="@CurrentView" Timezone="@TimezoneValue">
        <ScheduleEvents TValue="ScheduleData.FifaEventsData" EventRendered="OnEventRendered"></ScheduleEvents>
        <ScheduleEventSettings DataSource="@_dataSource"></ScheduleEventSettings>
        <ScheduleViews>
            <ScheduleView Option="View.Day"></ScheduleView>
            <ScheduleView Option="View.Week"></ScheduleView>
            <ScheduleView Option="View.WorkWeek"></ScheduleView>
            <ScheduleView Option="View.Month"></ScheduleView>
            <ScheduleView Option="View.Agenda"></ScheduleView>
        </ScheduleViews>
    </SfSchedule>
</div>

@code{
    private DateTime CurrentDate { get; set; } = new DateTime(DateTime.Today.Year, 1, 22);
    private View CurrentView { get; set; } = View.Week;
    private List<ScheduleData.FifaEventsData> _dataSource = new ScheduleData().GetFifaEventsData();
    private string TimezoneValue { get; set; } = "UTC";

    private List<DropDownData> TimezoneData { get; set; } = new List<DropDownData>()
    {
        new DropDownData { Name = "(UTC-05:00) Eastern Time", Value = "America/New_York" },
        new DropDownData { Name = "Coordinated Universal Time", Value = "UTC" },
        new DropDownData { Name = "(UTC+03:00) Moscow+00 - Moscow", Value = "Europe/Moscow" },
        new DropDownData { Name = "(UTC+05:30) India Standard Time", Value = "Asia/Kolkata" },
        new DropDownData { Name = "(UTC+08:00) Western Time - Pert", Value = "Australia/Perth" },
    };
    public class DropDownData
    {
        public string Name { get; set; }
        public string Value { get; set; }
    }
    public void OnEventRendered(EventRenderedArgs<ScheduleData.FifaEventsData> args)
    {
        args.Attributes = ScheduleData.ApplyCategoryColor(args.Data.CategoryColor, args.Attributes, CurrentView);
    }
}