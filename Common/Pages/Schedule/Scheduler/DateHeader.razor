@page "/scheduler/date-header"

@using Syncfusion.Blazor.Schedule
@using System.Globalization
@inject NavigationManager UriHelper
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This demo depicts the way to add images and custom text to the date header bar by using the date header template option.</p>
</SampleDescription>
<ActionDescription>
    <p>In this demo, the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Schedule.ScheduleTemplates.html#Syncfusion_Blazor_Schedule_ScheduleTemplates_DateHeaderTemplate">DateHeaderTemplate</a> option is used to customize the date header cells of day, week and workweek views. In month view, the date header is not applicable.   </p>
</ActionDescription>

<div class="control-section">
    <SfSchedule TValue="ScheduleData.AppointmentData" Width="100%" CssClass="schedule-date-header-template" Height="650px" @bind-SelectedDate="@CurrentDate" @bind-CurrentView="@CurrentView">
        <ScheduleEvents TValue="ScheduleData.AppointmentData" EventRendered="OnEventRendered"></ScheduleEvents>
        <ScheduleTemplates>
            <DateHeaderTemplate>
                <div class="date-text">@((context as TemplateContext).Date.ToString("dd ddd", CultureInfo.InvariantCulture))</div>
                @{
                    @switch ((int)(context as TemplateContext).Date.DayOfWeek)
                    {
                        case 0:
                            <img class="weather-image" src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}/images/scheduler/weather-clear.svg")" alt="Clear Weather" /><div class="weather-text">25&deg;C</div>
                            break;
                        case 1:
                            <img class="weather-image" src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/scheduler/weather-clouds.svg")" alt="Cloudly Weather" /><div class="weather-text">18&deg;C</div>
                            break;
                        case 2:
                            <img class="weather-image" src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/scheduler/weather-rain.svg")" alt="Rainly Weather" /><div class="weather-text">10&deg;C</div>
                            break;
                        case 3:
                            <img class="weather-image" src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/scheduler/weather-clouds.svg")" alt="Cloudly Weather" /><div class="weather-text">16&deg;C</div>
                            break;
                        case 4:
                            <img class="weather-image" src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/scheduler/weather-rain.svg")" alt="Rainly Weather" /><div class="weather-text">8&deg;C</div>
                            break;
                        case 5:
                            <img class="weather-image" src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/scheduler/weather-clear.svg")" alt="Clear Weather" /><div class="weather-text">27&deg;C</div>
                            break;
                        case 6:
                            <img class="weather-image" src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/scheduler/weather-clouds.svg")" alt="Cloudly Weather" /><div class="weather-text">17&deg;C</div>
                            break;
                    }
                }
            </DateHeaderTemplate>
        </ScheduleTemplates>
        <ScheduleEventSettings DataSource="@EventDataSource"></ScheduleEventSettings>
        <ScheduleViews>
            <ScheduleView Option="View.Day"></ScheduleView>
            <ScheduleView Option="View.Week"></ScheduleView>
            <ScheduleView Option="View.WorkWeek"></ScheduleView>
        </ScheduleViews>
    </SfSchedule>
</div>

@code {
    public View CurrentView { get; set; } = View.Week;
    private DateTime CurrentDate { get; set; } = new DateTime(DateTime.Today.Year, 1, 9);
    private List<ScheduleData.AppointmentData> EventDataSource = new ScheduleData().GetScheduleData();
    
    public void OnEventRendered(EventRenderedArgs<ScheduleData.AppointmentData> args)
    {
        args.Attributes = ScheduleData.ApplyCategoryColor(args.Data.CategoryColor, args.Attributes, CurrentView);
    }
}
<style>
    .schedule-date-header-template.e-schedule .e-vertical-view .e-header-cells {
        padding: 0;
        text-align: center !important;
    }

    .schedule-date-header-template.e-schedule .date-text {
        font-size: 14px;
    }

    .schedule-date-header-template.e-schedule.e-device .date-text {
        font-size: 12px;
    }

    .schedule-date-header-template.e-schedule .weather-image {
        width: 20px;
        height: 20px;
        background-position: center center;
        background-repeat: no-repeat;
        background-size: cover;
    }

    .schedule-date-header-template.e-schedule .weather-text {
        font-size: 11px;
    }
</style>