@page "/file-manager/api"

@using Syncfusion.Blazor.FileManager;
@using Syncfusion.Blazor.Buttons;
@using Syncfusion.Blazor.DropDowns;

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>The property pane in this sample displays the features available in the File Manager component. The visibility of the toolbar, file extensions, Range Selection, and image thumbnails can be easily controlled by checking or unchecking the respective checkboxes. Additionally, specific toolbar items can be enabled or disabled by selecting values in the Dropdown List.</p>
</SampleDescription>
<ActionDescription>
    <p>In this demo, the above mentioned requirements are achieved by using the following API properties and method of the File Manager component. </p>
    <ul>
        <li><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.FileManager.FileManagerToolbarSettings.html#properties" aria-label="Class reference of ToolbarSettings property in File Manager">ToolbarSettings</a> defines the group of items in the toolbar that are aligned horizontally.</li>

        <li><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.FileManager.SfFileManager-1.html#Syncfusion_Blazor_FileManager_SfFileManager_1_ShowThumbnail" aria-label="Class reference of ShowThumbnail property in File Manager">ShowThumbnail</a> property shows or hides thumbnail images in the large icons view.</li>

        <li><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.FileManager.SfFileManager-1.html#Syncfusion_Blazor_FileManager_SfFileManager_1_ShowFileExtension" aria-label="Class reference of ShowFileExtension property in File Manager">ShowFileExtension</a> property shows or hides the file extension in the File Manager.</li>

        <li><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.FileManager.SfFileManager-1.html#Syncfusion_Blazor_FileManager_SfFileManager_1_EnableRangeSelection" aria-label="Class reference of EnableRangeSelection property in File Manager">EnableRangeSelection</a> property allows multiple items selection with mouse dragging.</li>
    </ul>
</ActionDescription>

<div class="col-lg-8 control-section sb-property-border">
    <div class="control_wrapper">
        @* Initialization of File Manager component with toolbar and navigation pane customization *@
        <SfFileManager @ref="File" TValue="FileManagerDirectoryContent" AllowMultiSelection="@_allowMultiSelection" ShowFileExtension="@_showFileExtension" ShowThumbnail="@_showThumbnail" EnableRangeSelection="@_enableRangeSelection">
            <FileManagerAjaxSettings Url="https://amazons3.azurewebsites.net/api/AmazonS3Provider/AmazonS3Fileoperations"
                                     UploadUrl="https://amazons3.azurewebsites.net/api/AmazonS3Provider/AmazonS3Upload"
                                     DownloadUrl="https://amazons3.azurewebsites.net/api/AmazonS3Provider/AmazonS3Download"
                                     GetImageUrl="https://amazons3.azurewebsites.net/api/AmazonS3Provider/AmazonS3GetImage">
            </FileManagerAjaxSettings>
            <FileManagerToolbarSettings ToolbarItems="@Items" Visible="@_visible" />
            <FileManagerNavigationPaneSettings Visible=false />
            <FileManagerContextMenuSettings File="@FileItems" Layout="@LayoutItems" Visible="true"></FileManagerContextMenuSettings>
        </SfFileManager>
    </div>
</div>
<div class="col-lg-4 property-section">
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table id="property" class="e-width-100">
                <tbody>
                    <tr id="rangeSelectionRow" class="e-height-50">
                        <td class="property-text e-width-55">Enable Range Selection</td>
                        <td class="e-width-45">
                            @* Initialization of Checkbox component *@
                            <SfCheckBox @bind-Checked="@_enableRangeSelection" Name="multiselection" TChecked="bool"></SfCheckBox>
                        </td>
                    </tr>
                    <tr class="e-height-50">
                        <td class="property-text e-width-55">Toolbar</td>
                        <td class="e-width-45">
                            @* Initialization of Checkbox component *@
                            <SfCheckBox @bind-Checked="@_check" Name="toolbar" ValueChange="OnToolbarChange" TChecked="bool"></SfCheckBox>
                        </td>
                    </tr>
                    <tr class="e-height-50">
                        <td class="property-text e-width-55">Show Thumbnail</td>
                        <td class="e-width-45">
                            @* Initialization of Checkbox component *@
                            <SfCheckBox @bind-Checked="@_showThumbnailCheck" Name="multiselection" ValueChange="ShowThumbnailChange" TChecked="bool"></SfCheckBox>
                        </td>
                    </tr>
                    <tr class="e-height-50">
                        <td class="property-text e-width-55">Show File Extension</td>
                        <td class="e-width-45">
                            @* Initialization of Checkbox component *@
                            <SfCheckBox @bind-Checked="@_fileExtensionCheck" Name="multiselection" ValueChange="FileExtensionChange" TChecked="bool"></SfCheckBox>
                        </td>
                    </tr>
                    <tr class="e-height-50">
                        <td class="property-text e-width-55">Disable Toolbar Item</td>
                        <td class="e-width-45"> 
                            <SfDropDownList TItem="Fields" TValue="string" PopupHeight="100px" Placeholder="Select Items" DataSource="@_dropDownListItems" @bind-Value="@_disableValue">
                                <DropDownListEvents TItem="Fields" TValue="string" ValueChange="DisableSelectedItems" />
                                <DropDownListFieldSettings Text="Text" Value="ID"/>
                            </SfDropDownList>
                        </td>
                    </tr>
                    <tr class="e-height-50">
                        <td class="property-text e-width-55">Enable Toolbar Item</td>
                        <td class="e-width-45">
                            <SfDropDownList TItem="Fields" TValue="string" PopupHeight="100px" Placeholder="Select Items" DataSource="@_dropDownListItems" @bind-Value="@_enableValue">
                                <DropDownListEvents TItem="Fields" TValue="string" ValueChange="EnableSelectedItems" />
                                <DropDownListFieldSettings Text="Text" Value="ID" />
                            </SfDropDownList>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    public SfFileManager<FileManagerDirectoryContent>? File;
    private bool _check { get; set; } = true;
    private bool _fileExtensionCheck { get; set; } = false;
    private bool _showThumbnailCheck { get; set; } = true;
    private bool _visible { get; set; } = true;
    private bool _allowMultiSelection { get; set; } = true;
    private bool _showFileExtension { get; set; } = false;
    private bool _showThumbnail { get; set; } = true;
    private bool _enableRangeSelection { get; set; } = true;
    private string? _disableValue { get; set; }
    private string? _enableValue { get; set; }
    //Hidden:Lines
    
    
    public List<ToolBarItemModel> Items = new List<ToolBarItemModel>()
    {
        new ToolBarItemModel() { Name = "NewFolder" },
        new ToolBarItemModel() { Name = "Cut" },
        new ToolBarItemModel() { Name = "Copy" },
        new ToolBarItemModel() { Name = "Paste" },
        new ToolBarItemModel() { Name = "Delete" },
        new ToolBarItemModel() { Name = "Download" },
        new ToolBarItemModel() { Name = "Rename" },
        new ToolBarItemModel() { Name = "SortBy" },
        new ToolBarItemModel() { Name = "Refresh" },
        new ToolBarItemModel() { Name = "Selection" },
        new ToolBarItemModel() { Name = "View" },
        new ToolBarItemModel() { Name = "Details" },
    };
    public string[] LayoutItems = new string[] { "SortBy", "View", "Refresh", "|", "Paste", "|", "NewFolder", "|", "Details", "|", "SelectAll" };
    public string[] FileItems = new string[] { "Cut", "Copy", "|", "Delete", "Download", "Rename", "|", "Details" };
    //End:Hidden
    // Specifies the event handler to show/hide the toolbar.
    private void OnCheckChanged(string property, bool args)
    {
        switch (property)
        {
            case "Visible":
                this._visible = args;
                break;
            case "AllowMultiSelection":
                this._allowMultiSelection = args;
                break;
            case "ShowFileExtension":
                this._showFileExtension = args;
                break;
            case "ShowThumbnail":
                this._showThumbnail = args;
                break;
        }
        this.StateHasChanged();
    }

    private void OnToolbarChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        OnCheckChanged("Visible", args.Checked);
    }

    private void FileExtensionChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        OnCheckChanged("ShowFileExtension", args.Checked);
    }

    private void ShowThumbnailChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        OnCheckChanged("ShowThumbnail", args.Checked);
    }
    public class Fields
    {
        public string ID { get; set; }
        public string Text { get; set; }
    }
    private List<Fields> _dropDownListItems = new List<Fields>()
    {
        new Fields(){ ID= "1", Text= "New Folder" },
        new Fields(){ ID= "2", Text= "Cut" },
        new Fields(){ ID= "3", Text= "Copy" },
        new Fields(){ ID= "4", Text= "Delete" },
        new Fields(){ ID= "5", Text= "Download" },
        new Fields(){ ID= "6", Text= "Rename" },
        new Fields(){ ID= "7", Text= "SortBy" },
        new Fields(){ ID= "8", Text= "Refresh"},
        new Fields(){ ID= "9", Text= "Selection" },
        new Fields(){ ID= "10", Text= "View"},
        new Fields(){ ID= "11", Text= "Details"}
     };
    private readonly Dictionary<string, string> _toolbarItems = new Dictionary<string, string>
    {
        {"New Folder", "NewFolder"},
        {"Cut", "Cut"},
        {"Copy", "Copy"},
        {"Delete", "Delete"},
        {"Download", "Download"},
        {"Rename", "Rename"},
        {"SortBy", "SortBy"},
        {"Refresh", "Refresh"},
        {"Selection", "Selection"},
        {"View", "View"},
        {"Details", "Details"}
    };

    public void DisableEnableSelectedItems(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, Fields> args, bool disable)
    {
        if (args.ItemData != null && _toolbarItems.TryGetValue(args.ItemData.Text, out var item))
        {
            if (disable)
            {
                this.File.DisableToolbarItems(new[] { item });
            }
            else
            {
                this.File.EnableToolbarItems(new[] { item });
            }
        }
    }
    public void DisableSelectedItems(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, Fields> args)
    {
        DisableEnableSelectedItems(args, true);
        if (args.Value == _enableValue)
        {
            _enableValue = null;
        }
    }

    public void EnableSelectedItems(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, Fields> args)
    {
        DisableEnableSelectedItems(args, false);
        if (args.Value == _disableValue)
        {
            _disableValue = null;
        }
    }
}

<style>
     /* Sample specific styles */
    .e-height-50 {
        height: 50%;
    }

    .e-width-45 {
        width: 45%;
        padding: 10px;
    }

    .e-width-55 {
        width: 55%;
        padding-top: 5px;
    }

    .e-width-100 {
        width: 100%;
    }

    .bootstrap5 .e-filemanager .e-large-icons .e-list-img, .bootstrap5-dark .e-filemanager .e-large-icons .e-list-img,
    .bootstrap4 .e-filemanager .e-large-icons .e-list-img {
        border: none !important;
    }

    @@media (max-width: 550px) {
         #rangeSelectionRow {
             display: none;
         }
     }
    </style>
