@page "/treeview/local-data"

@using Syncfusion.Blazor.Navigations

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p> The <a href="https://www.syncfusion.com/blazor-components/blazor-treeview" target="_blank" aria-label="Feature Tour of Blazor TreeView">Blazor TreeView</a> sample demonstrates the binding of local data to the <code>TreeView</code>. Click on node to select it, and click on the expand/collapse icon or double click on node to expand/collapse it.</p>
</SampleDescription>
<ActionDescription>
    <p>The <code>TreeView</code> component loads the data through the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Navigations.TreeViewFieldOptions-1.html#Syncfusion_Blazor_Navigations_TreeViewFieldOptions_1_DataSource">DataSource</a> property, where the data can be either local data or remote data. In case of local data, the data structure can be hierarchical data or list data (with self-referential format i.e., mapped with the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Navigations.TreeViewFieldOptions-1.html#Syncfusion_Blazor_Navigations_TreeViewFieldOptions_1_Id">Id</a> and <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Navigations.TreeViewFieldOptions-1.html#Syncfusion_Blazor_Navigations_TreeViewFieldOptions_1_ParentID">ParentID</a> fields). In this demo, the first <code>TreeView</code> is bound with the hierarchical data that contains array of nested objects. And the second <code>TreeView</code> is bound with the list type data where the parent-child relation is referred by the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Navigations.TreeViewFieldOptions-1.html#Syncfusion_Blazor_Navigations_TreeViewFieldOptions_1_Id">Id</a> and <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Navigations.TreeViewFieldOptions-1.html#Syncfusion_Blazor_Navigations_TreeViewFieldOptions_1_ParentID">ParentID</a> mapping fields. More information about <code>TreeView</code> can be found in this <a target="blank" href="https://blazor.syncfusion.com/documentation/treeview/data-binding" aria-label="Blazor TreeView DataBinding documentation">documentation</a> section.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="col-lg-6 nested-data">
        <h4>Hierarchical Data</h4>
        <div class="content">
            @*Initialize the TreeView component*@
            <SfTreeView TValue="TreeData">
                <TreeViewFieldsSettings DataSource="@TreeDataSource" Id="Code" Text="Name" Selected="Selected" Expanded="Expanded" Child="@("Child")"></TreeViewFieldsSettings>
            </SfTreeView>
        </div>
    </div>
    <div class="col-lg-6 list-data">
        <h4>List Data</h4>
        <div class="content">
            @*Initialize the TreeView component*@
            <SfTreeView TValue="ListData">
                <TreeViewFieldsSettings DataSource="@ListDataSource" Id="Id" ParentID="Pid" Text="Name" HasChildren="HasChild" Expanded="Expanded"></TreeViewFieldsSettings>
            </SfTreeView>

        </div>
    </div>
</div>

@code{
    
    // Specifies the DataSource value for List Data TreeView component.
    private List<ListData> ListDataSource = new List<ListData>();
    // Specifies the DataSource value for Hierarchical Data TreeView component.
    private List<TreeData> TreeDataSource = new List<TreeData>();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        
        ListDataSource.Add(new ListData
        {
            Id = "1",
            Name = "Australia",
            HasChild = true,
            Expanded = true
        });
        ListDataSource.Add(new ListData
        {
            Id = "2",
            Pid = "1",
            Name = "New South Wales",

        });
        ListDataSource.Add(new ListData
        {
            Id = "3",
            Pid = "1",
            Name = "Victoria"
        });

        ListDataSource.Add(new ListData
        {
            Id = "4",
            Pid = "1",
            Name = "South Australia"
        });
        ListDataSource.Add(new ListData
        {
            Id = "6",
            Pid = "1",
            Name = "Western Australia",

        });
        ListDataSource.Add(new ListData
        {
            Id = "7",
            Name = "Brazil",
            HasChild = true
        });
        ListDataSource.Add(new ListData
        {
            Id = "8",
            Pid = "7",
            Name = "Paraná"
        });
        ListDataSource.Add(new ListData
        {
            Id = "9",
            Pid = "7",
            Name = "Ceará"
        });
        ListDataSource.Add(new ListData
        {
            Id = "10",
            Pid = "7",
            Name = "Acre"
        });
        ListDataSource.Add(new ListData
        {
            Id = "11",
            Name = "China",
            HasChild = true
        });
        ListDataSource.Add(new ListData
        {
            Id = "12",
            Pid = "11",
            Name = "Guangzhou"
        });
        ListDataSource.Add(new ListData
        {
            Id = "13",
            Pid = "11",
            Name = "Shanghai"
        });
        ListDataSource.Add(new ListData
        {
            Id = "14",
            Pid = "11",
            Name = "Beijing"
        });
        ListDataSource.Add(new ListData
        {
            Id = "15",
            Pid = "11",
            Name = "Shantou"

        });
        ListDataSource.Add(new ListData
        {
            Id = "16",
            Name = "France",
            HasChild = true

        });
        ListDataSource.Add(new ListData
        {
            Id = "17",
            Pid = "16",
            Name = "Pays de la Loire"

        });
        ListDataSource.Add(new ListData
        {
            Id = "18",
            Pid = "16",
            Name = "Aquitaine"

        });
        ListDataSource.Add(new ListData
        {
            Id = "19",
            Pid = "16",
            Name = "Brittany"

        });
        ListDataSource.Add(new ListData
        {
            Id = "20",
            Pid = "16",
            Name = "Lorraine"
        });
        ListDataSource.Add(new ListData
        {
            Id = "21",
            Name = "India",
            HasChild = true

        });
        ListDataSource.Add(new ListData
        {
            Id = "22",
            Pid = "21",
            Name = "Assam"

        });
        ListDataSource.Add(new ListData
        {
            Id = "23",
            Pid = "21",
            Name = "Bihar"
        });
        ListDataSource.Add(new ListData
        {
            Id = "24",
            Pid = "21",
            Name = "Tamil Nadu"

        });

        TreeDataSource.Add(new TreeData
        {
            Code = "NA",
            Name = "North America",
            Expanded = true,
            Child = new List<TreeData>()
            {
                new TreeData { Code = "USA", Name = "United States of America", Selected = true },
                new TreeData { Code = "CUB", Name = "Cuba" },
                new TreeData { Code = "MEX", Name = "Mexico" },
            },
        });

        TreeDataSource.Add(new TreeData
        {
            Code = "AF",
            Name = "Africa",
            Child = new List<TreeData>()
            {
                new TreeData { Code = "NGA", Name = "Nygeria" },
                new TreeData { Code = "EGY", Name = "Egypt" },
                new TreeData { Code = "ZAF", Name = "South Africa" },
            },
        });

        TreeDataSource.Add(new TreeData
        {
            Code = "AS",
            Name = "Asia",
            Child = new List<TreeData>()
            {
                new TreeData { Code = "CHN", Name = "China" },
                new TreeData { Code = "IND", Name = "India" },
                new TreeData { Code = "JPN", Name = "Japan" },
            },
        });

        TreeDataSource.Add(new TreeData
        {
            Code = "EU",
            Name = "Europe",
            Child = new List<TreeData>()
            {
                new TreeData { Code = "DNK", Name = "Denmark" },
                new TreeData { Code = "AUT", Name = "Austria" },
                new TreeData { Code = "FIN", Name = "Finland" },
            },
        });


        TreeDataSource.Add(new TreeData
        {
            Code = "SA",
            Name = "South America",
            Child = new List<TreeData>()
            {
                new TreeData { Code = "BRA", Name = "Brazil" },
                new TreeData { Code = "COL", Name = "Colombia" },
                new TreeData { Code = "ARG", Name = "Argentina" },
            },
        });

        TreeDataSource.Add(new TreeData
        {
            Code = "OC",
            Name = "Oceania",
            Child = new List<TreeData>()
            {
                new TreeData { Code = "AUS", Name = "Australia" },
                new TreeData { Code = "NZL", Name = "Newzealand" },
                new TreeData { Code = "WSM", Name = "Samoa" },
            },
        });

        TreeDataSource.Add(new TreeData
        {
            Code = "AN",
            Name = "Antartica",
            Child = new List<TreeData>()
            {
                new TreeData { Code = "BVT", Name = "Bouvet Island" },
                new TreeData { Code = "ATF", Name = "French Southern Lands" },
            },
        });
    }

    public class ListData
    {
        public string Id { get; set; }
        public string Pid { get; set; }
        public string Name { get; set; }
        public bool HasChild { get; set; }
        public bool Expanded { get; set; }
    }

    public class TreeData
    {
        public string Code { get; set; }
        public string Name { get; set; }
        public bool Expanded { get; set; }
        public bool Selected { get; set; }
        public List<TreeData> Child;
    }
}

<style>
    /* Sample specific styles */
    .control_wrapper {
        max-width: 500px;
        margin: auto;
        border: 1px solid #dddddd;
        border-radius: 3px;
    }
    /* Specifies the styles for both List and Hierarchical Data TreeView component */
    .nested-data, .list-data {
        padding: 15px;
        margin-bottom: 25px;
    }

    .content {
        margin: 0 auto;
        border: 1px solid #dddddd;
        border-radius: 3px;
        max-height: 470px;
        overflow: auto;
    }
    .content h4 {
        padding: 0 10px;
    }
</style>
