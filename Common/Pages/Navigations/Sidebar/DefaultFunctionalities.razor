@page "/sidebar/default-functionalities"

@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Lists
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>The <a href='https://www.syncfusion.com/blazor-components/blazor-sidebar' target='_blank' aria-label="Feature Tour of Blazor Sidebar">Blazor Sidebar</a> sample demonstrates the default functionalities of the Sidebar. Click on the hamburger menu icon to expand/collapse the <code>Sidebar</code>. Click the <a href='https://www.syncfusion.com/blazor-components/blazor-treeview' target='_blank' aria-label="Feature Tour of Blazor TreeView">TreeView</a> node to see the corresponding folder’s mail details.</p>
</SampleDescription>
<ActionDescription>
    <p>The <code>Blazor Sidebar</code> is an expandable and collapsible component that typically acts as a side container to place primary or secondary content alongside the main content. It provides flexible options that can be shown and hidden based on user interactions. Any type of HTML content or components can be placed in the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Navigations.SfSidebar.html">Blazor Sidebar</a> for quick access and easy navigation, like quick references, menus, lists, and tree views.</p>
    <p>In this demo, the <code>Sidebar</code> is populated as like webmail with folder structure.</p>
</ActionDescription>

<div id="control-section">
<div id="sidebar-wrapper">
    <div>
            @*Initialize the Sidebar component*@
            <SfSidebar class= "default-sidebar" Width="260px" Target="@Target" Position="@Position" @bind-IsOpen="SidebarToggle">
                <ChildContent>
                    <SfTreeView TValue="TreeData">
                        <TreeViewEvents TValue="TreeData" NodeSelecting="BeforeSelect" NodeSelected="OnSelect"></TreeViewEvents>
                        <TreeViewFieldsSettings Id="Id" Text="Name" Selected="Selected" ParentID="Pid" HasChildren="HasChild" Expanded="Expanded" DataSource="@LocalData"></TreeViewFieldsSettings>
                    </SfTreeView>
                </ChildContent>
            </SfSidebar>
        @*Initialize the Toolbar component*@
            <SfToolbar CssClass="defaultToolbar" >
            <ToolbarItems>
                <ToolbarItem>
                    <Template>
                        <SfButton IconCss="e-icons e-menu" @onclick="OnMenuClick" @ref="MenuBtnObj" ></SfButton>
                    </Template>
                </ToolbarItem>
                <ToolbarItem>
                    <Template>
                        <div class="e-folder">
                            <div class="e-folder-name">Webmail</div>
                        </div>
                    </Template>
                </ToolbarItem>
                <ToolbarItem Align="@ItemAlign.Right">
                    <Template>
                        <div>
                            <div class="e-user-name">John</div>
                        </div>
                    </Template>
                </ToolbarItem>
                <ToolbarItem CssClass="e-custom" Align="@ItemAlign.Right">
                    <Template>
                        <div class="image-container">
                            <img height="20px" src="@(SampleService.WebAssetsPath + "images/sidebar/user.svg")" alt="John" />
                        </div>
                    </Template>
                </ToolbarItem>
            </ToolbarItems>
        </SfToolbar>
    </div>
    <div class="maincontent">
        @*Initialize the ListView component*@
        <SfListView DataSource="@ListData" CssClass="e-list-template" TValue="listData">
            <ListViewFieldSettings TValue="listData" Id="Id" Text="Text"></ListViewFieldSettings>
            <ListViewTemplates TValue="listData">
                <Template>
                    <div class="e-list-wrapper e-list-avatar e-list-multi-line">
                        <span class="e-avatar e-avatar-circle e-icon sf-icon-profile"></span>
                        <span class="e-list-item-header">@((context as listData).Text)</span>
                        <span class="e-list-content">@((context as listData).Subject)</span>
                        <span class="e-list-text">@((context as listData).Message)</span>
                    </div>
                </Template>
            </ListViewTemplates>
            <ListViewEvents TValue="listData" ></ListViewEvents>
        </SfListView>
    </div>
</div>
</div>

@code {
    SfButton MenuBtnObj;
    
    // Specify the target value of sidebar component.
    public string Target = ".maincontent";
    // Specify the value of Position property in Sidebar component.
    public SidebarPosition Position { get; set; } = SidebarPosition.Left;
    // Sepcify the value of Sidebar component opened or closed state.
    public bool SidebarToggle = false;    
    
    // Specifies the event handler for Clicked event in Toolbar component. It's used to open/close the Sidebar component. 
    public void OnMenuClick()
    {
        SidebarToggle = !SidebarToggle;
    }
    
    // Specifies the event handler for NodeSelecting event in ListView component.
    public void BeforeSelect(NodeSelectEventArgs args)
    {
        if (args.NodeData.Text == "Favorites" || args.NodeData.Text == "John")
        {
            args.Cancel = true;
        }
    }
    // Specifies the event handler for NodeSelected event in ListView component.
    public void OnSelect(NodeSelectEventArgs args)
    {

        if (args.NodeData.Text == "Inbox")
        {
            ListData = InboxData;
        }
        else if (args.NodeData.Text == "Sent Items")
        {
            ListData = SentItemsData;
        }
        else if (args.NodeData.Text == "Drafts")
        {
            ListData = DraftsData;
        }
        else if (args.NodeData.Text == "Deleted Items")
        {
            ListData = DeletedData;
        }
        else if (args.NodeData.Text == "Outbox")
        {
            ListData = OutboxData;
        }
        StateHasChanged();
    }

    // Specifies the Inbox data for ListView component.
    public List<listData> InboxData = new List<listData>
    {
        new listData {Id="1", Text = "Albert Lives", Subject = "Business dinner invitation", Message = "Looking forward to seeing you at our business dinner this Friday." },
        new listData {Id="2",Text = "Ila Russo", Subject = "Opening for Sales Manager", Message = "We have a position that matches your expertise - details attached." },
        new listData {Id="3",Text = "Garth Owen", Subject = "Application for Sales Manager", Message = "Your application has been received and is under review." },
        new listData {Id="4", Text = "Ursula Patterson", Subject = "Software Programmer Application", Message = "Thanks for your interest in joining our development team." },
        new listData {Id="5", Text = "Nichole Rivas", Subject = "Annual Conference", Message = "Your registration is confirmed for next month's event." }
    };
    // Specifies the SentItems data for ListView component.
    public List<listData> SentItemsData = new List<listData>
    {
        new listData {Id="11", Text = "Gemma Roberson", Subject = "Apology for long leave", Message = "I'll be returning to the office on Monday after my extended absence." },
        new listData {Id="12",Text = "Ann Garza", Subject = "Application for Sales Manager", Message = "I'm excited to apply for the Sales Manager position at your company." },
        new listData {Id="13",Text = "Alfonso Burnett", Subject = "Anything I can help with", Message = "Please let me know if you need assistance with the project." },
        new listData {Id="14", Text = "Rogan Espinoza", Subject = "Needs assistant for Digital Marketing", Message = "I'm interested in discussing your digital marketing requirements." },
        new listData {Id="15", Text = "Sierra Kerr", Subject = "Request for transferring license", Message = "Requesting transfer of software license to our new system." }
    };
    // Specifies the Drafts data for ListView component.
    public List<listData> DraftsData = new List<listData>
    {
        new listData {Id="21", Text = "Chaim Barber", Subject = "We launched new Product!", Message = "Excited to announce our new product launch next week." },
        new listData {Id="22",Text = "Lara Knox", Subject = "Request for meeting appointment", Message = "Are you available for a brief meeting on Thursday at 2pm?" },
        new listData {Id="23",Text = "Igor Mccoy", Subject = "Thank you", Message = "I appreciate your help with resolving the client issue yesterday." },
        new listData {Id="24", Text = "Patricia Boyle", Subject = "Sales Team", Message = "The Q3 sales targets have been updated in the shared document." },
        new listData {Id="25", Text = "Zachery Peters", Subject = "Today’s meeting schedule", Message = "Confirming our team meeting at 10am in Conference Room B." }
    };
    // Specifies the Delete data for ListView component.
    public List<listData> DeletedData = new List<listData>
    {
        new listData {Id="31", Text = "Elijah Berry", Subject = "Meeting with Sales manager", Message = "The sales strategy meeting is scheduled for tomorrow at 3pm." },
        new listData {Id="32",Text = "Cameran Newman", Subject = "Business appointment request", Message = "Would Tuesday at 11am work for our discussion?" },
        new listData {Id="33",Text = "Amity Slater", Subject = "Business dinner invitation", Message = "Join us for dinner at The Grand Hotel on Friday at 7pm." },
        new listData {Id="34", Text = "Leo Cooley", Subject = "Apology Email for wrong order", Message = "We sincerely apologize for the mix-up with your recent order." },
        new listData {Id="35", Text = "Halee Lindsey", Subject = "Successful product launch party", Message = "Thanks to everyone who made our launch event a success!" }
    };
    // Specifies the Outbox data for ListView component.
    public List<listData> OutboxData = new List<listData>
    {
        new listData {Id="41", Text = "Willow Frye", Subject = "Out of Office", Message = "I'll be unavailable from June 20-27 during my annual leave." },
        new listData {Id="42",Text = "Regan Haney", Subject = "Project Manager Interview", Message = "Your interview is confirmed for Tuesday at 10am." },
        new listData {Id="43",Text = "Stella Calderon", Subject = "Proposal for a new business", Message = "Attached is our proposal for the partnership opportunity." },
        new listData {Id="44", Text = "Xanthus Harmon", Subject = "Performance appraisal meeting", Message = "Let's schedule your annual performance review next week." },
        new listData {Id="45", Text = "Cheyenne Cline", Subject = "Office Holiday", Message = "A reminder that our office will be closed this Monday." }
    };


    public class listData
    {
        public string Id { get; set; }
        public string Text { get; set; }
        public string Subject { get; set; }
        public string Message { get; set; }
    }

    List<TreeData> LocalData = new List<TreeData>();
    public List<listData> ListData = new List<listData>();
    protected override void OnInitialized()
    {
        base.OnInitialized();
        
        ListData = InboxData;
        LocalData.Add(new TreeData
        {
            Id = "1",
            Name = "Favorites",
            HasChild = true,
            Expanded = true
        });
        LocalData.Add(new TreeData
        {
            Id = "2",
            Pid = "1",
            Selected = true,
            Name = "Inbox",
        });
        LocalData.Add(new TreeData
        {
            Id = "3",
            Pid = "1",
            Name = "Sent Items"
        });

        LocalData.Add(new TreeData
        {
            Id = "5",
            HasChild = true,
            Name = "John",
            Expanded = true
        });
        LocalData.Add(new TreeData
        {
            Id = "6",
            Pid = "5",
            Name = "Inbox"
        });
        LocalData.Add(new TreeData
        {
            Id = "7",
            Pid = "5",
            Name = "Drafts",
        });
        LocalData.Add(new TreeData
        {
            Id = "8",
            Pid = "5",
            Name = "Deleted Items"
        });
        LocalData.Add(new TreeData
        {
            Id = "9",
            Pid = "5",
            Name = "Sent Items"
        });
        LocalData.Add(new TreeData
        {
            Id = "12",
            Pid = "5",
            Name = "Outbox"
        });

    }
    class TreeData
    {
        public string Id { get; set; }
        public string Pid { get; set; }
        public string Name { get; set; }
        public bool HasChild { get; set; }
        public bool Expanded { get; set; }
        public bool Selected { get; set; }
    }
}


<style>
    /* Sample specific styles */
    .container-fluid {
        padding-left: 0;
        padding-right: 0;
    }

    #sidebar-wrapper .sf-icon-profile:before {
        float: right;
        content: '\e717';
        font-size: 25px;
    }

    #sidebar-wrapper.e-sidebar-context {
        overflow-x: inherit;
    }


    #sidebar-wrapper .default-sidebar {
        z-index: 20 !important;
    }

    #sidebar-wrapper .e-content-animation {
        height: 477px;
        width: auto;
    }
    /* Specifies the styles for Sidebar, ListView, and Toolbar component related styles in light themes */
    .material #sidebar-wrapper .e-listview .e-list-item, .material .defaultToolbar.e-toolbar {
        border-bottom: 1px solid rgba(0,0,0,0.12);
    }

    .fabric #sidebar-wrapper .e-listview .e-list-item, .fabric .defaultToolbar.e-toolbar {
        border-bottom: 1px solid #eaeaea;
    }

    .tailwind #sidebar-wrapper .e-listview .e-list-item, .tailwind .defaultToolbar.e-toolbar {
        border-bottom: 1px solid #d7d7d7;
    }

    .bootstrap5 .defaultToolbar.e-toolbar {
        border-bottom: 1px solid #dee2e6;
    }
    /* Specifies the styles for Sidebar, ListView, and Toolbar component related styles in dark themes */
    .bootstrap5-dark .defaultToolbar.e-toolbar {
        border-bottom: 1px solid #444c54;
    }

    .material-dark #sidebar-wrapper .e-listview .e-list-item, .material-dark .defaultToolbar.e-toolbar {
        border-bottom: 1px solid #616161;
    }

    .fabric-dark #sidebar-wrapper .e-listview .e-list-item, .fabric-dark .defaultToolbar.e-toolbar {
        border-bottom: 1px solid #414040;
    }

    .tailwind-dark #sidebar-wrapper .e-listview .e-list-item, .tailwind-dark .defaultToolbar.e-toolbar {
        border-bottom: 1px solid #4b5563;
    }
    /* Specifies the styles for Sidebar, ListView, and Toolbar component related styles in light themes */
    .material .default-sidebar .e-treeview .e-ul, .material-dark .default-sidebar .e-treeview .e-ul,
    .bootstrap .default-sidebar .e-treeview .e-ul, .bootstrap-dark .default-sidebar .e-treeview .e-ul {
        padding-left: 6px;
    }

    .e-bigger.material .default-sidebar .e-treeview .e-ul, .e-bigger.material-dark .default-sidebar .e-treeview .e-ul,
    .fabric .default-sidebar .e-treeview .e-ul, .fabric-dark .default-sidebar .e-treeview .e-ul,
    .highcontrast .default-sidebar .e-treeview .e-ul {
        padding-left: 12px;
    }

    .e-bigger.fabric .default-sidebar .e-treeview .e-ul, .e-bigger.fabric-dark .default-sidebar .e-treeview .e-ul,
    .bootstrap5 .default-sidebar .e-treeview .e-ul, .bootstrap5-dark .default-sidebar .e-treeview .e-ul {
        padding-left: 14px;
    }

    .e-bigger.bootstrap .default-sidebar .e-treeview .e-ul, .e-bigger.bootstrap-dark .default-sidebar .e-treeview .e-ul,
    .e-bigger.highcontrast .default-sidebar .e-treeview .e-ul {
        padding-left: 16px;
    }

    .tailwind .default-sidebar .e-treeview .e-ul, .tailwind-dark .default-sidebar .e-treeview .e-ul {
        padding-left: 15px;
    }

    .e-bigger.bootstrap5 .default-sidebar .e-treeview .e-ul, .e-bigger.bootstrap5-dark .default-sidebar .e-treeview .e-ul,
    .e-bigger.tailwind .default-sidebar .e-treeview .e-ul, .e-bigger.tailwind-dark .default-sidebar .e-treeview .e-ul,
    .bootstrap4 .default-sidebar .e-treeview .e-ul {
        padding-left: 20px;
    }

    .e-bigger.bootstrap4 .default-sidebar .e-treeview .e-ul {
        padding-left: 24px;
    }

    .tailwind .default-sidebar .e-treeview .e-list-item .e-text-content, .tailwind-dark .default-sidebar .e-treeview .e-list-item .e-text-content {
        padding-left: 22px;
    }
    /* Specifies the styles for Sidebar hamburger icon */
    @@font-face {
        font-family: 'e-sb-icons';
        src: url(data:application/x-font-ttf;charset=utf-8;base64,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AAATMzUjBSElByclMzUjNTM1IwUXEQE3JwUBIQLIyAESAs/+/mVm/ezIyMjIAvfx/Sry8gFoAWf9MQGBIXycUVEsIUwhnZMBU/6tk8D3AR8ABAAAAAADzgPqAA8AIAAvADsAACUjJzcjFwcjAwYCFyEuAQcBHgEXPgE3LgEnNDY1JiMOASUzMhYdARQGKwEVLwE3FQceARc+ATcuAScOAQJeJjsvZDI2Lj+tjgMDryP1EP5EA5Rvb5MFY38CAxMTb5QCA3QKDAwKdzs4d5ACWUFDWAECWUFDWCuHV1SKARAm/v4Rv4sEASJxkwICkm8FgmAJEAcDA5OiDAooCgwpLChMIy9DVwICWUFDWAICWAAAAgAAAAAD3QPqAA0AGQAANxUhNS4BJw4BIiYnDgETHgEXPgE3LgEnDgEQA84DknEvc39zL3GS1AOac3SaAwOadHOahIKCdaMRJCgoJBGjAeF0mgMDmnR0mgICmgAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAoAAQABAAAAAAACAAcACwABAAAAAAADAAoAEgABAAAAAAAEAAoAHAABAAAAAAAFAAsAJgABAAAAAAAGAAoAMQABAAAAAAAKACwAOwABAAAAAAALABIAZwADAAEECQAAAAIAeQADAAEECQABABQAewADAAEECQACAA4AjwADAAEECQADABQAnQADAAEECQAEABQAsQADAAEECQAFABYAxQADAAEECQAGABQA2wADAAEECQAKAFgA7wADAAEECQALACQBRyBlLXNiLWljb25zUmVndWxhcmUtc2ItaWNvbnNlLXNiLWljb25zVmVyc2lvbiAxLjBlLXNiLWljb25zRm9udCBnZW5lcmF0ZWQgdXNpbmcgU3luY2Z1c2lvbiBNZXRybyBTdHVkaW93d3cuc3luY2Z1c2lvbi5jb20AIABlAC0AcwBiAC0AaQBjAG8AbgBzAFIAZQBnAHUAbABhAHIAZQAtAHMAYgAtAGkAYwBvAG4AcwBlAC0AcwBiAC0AaQBjAG8AbgBzAFYAZQByAHMAaQBvAG4AIAAxAC4AMABlAC0AcwBiAC0AaQBjAG8AbgBzAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoBAgEDAQQBBQEGAQcBCAEJAQoBCwEMAQ0BDgEPARABEQESARMBFAEVARYBFwEYARkBGgEbAAltYWlsLXNlbmQLaW5ib3gtMDItd2YLaW5ib3gtMDEtd2YFaW5ib3gPb3Blbi1tZXNzYWdlLXdmDGFycm93aGVhZC0wMRBhcnJvd2hlYWQtdG9wLXdmCXJhdGluZy13ZgtyYXRpbmctLS0wMxFhcnJvd2hlYWQtZG93bi0wMQlmb2xkZXItMDMIdXNlcnMtd2YIY2xvY2stMDIGdXBsb2FkCG9uZWRyaXZlEWNsb3VkLWRvd25sb2FkLXdmD3dvcmstb2ZmbGluZS13ZglzZWFyY2gtd2YPbm90ZS1tZW1vLTAxLXdmDGltcG9ydGFudC13ZglzZW50LW1haWwIaW5ib3gtd2YLbWFpbC0tLXNlbnQJdXNlci1iYWNrDHVzZXItcHJvZmlsZQAAAAA=) format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    [class^="sf-icon-"],
    [class*=" sf-icon-"] {
        font-family: 'e-sb-icons';
        font-size: 15px;
        font-style: normal;
        font-weight: normal;
        font-variant: normal;
        text-transform: none;
        line-height: 1;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

   /* Specifies the styles for Toolbar component*/
    .e-bigger .e-tbar-btn .tb-icons {
        font-size: 20px;
    }

    .e-tbar-btn .tb-icons {
        font-family: 'Material_toolbar';
        speak: none;
        font-size: 16px;
        font-style: normal;
        font-weight: normal;
        font-variant: normal;
        text-transform: none;
    }

    .e-toolbar .e-icons {
        font-size: 20px;
    }

    .e-tbar-menu-icon:before {
        content: "\e718";
    }

    .e-folder {
        text-align: center;
        font-weight: 500;
        font-size: 16px;
    }

    .e-bigger .e-folder {
        font-size: 18px;
    }

    .bootstrap5 .e-folder-name, .bootstrap5-dark .e-folder-name {
        margin-top: -2px;
    }

    .bootstrap4 .e-folder-name,
    .bootstrap .e-folder-name, .bootstrap-dark .e-folder-name {
        margin-top: 3px;
    }

    .tailwind .defaultToolbar.e-toolbar .e-toolbar-items.e-tbar-pos .e-toolbar-left,
    .tailwind-dark .defaultToolbar.e-toolbar .e-toolbar-items.e-tbar-pos .e-toolbar-left {
        line-height: initial;
    }

    .material .e-folder-name, .material-dark .e-folder-name {
        margin-top: 1px;
    }

    .e-user-name {
        text-align: center;
        font-weight: 500;
        font-size: 14px
    }

    .bootstrap4.e-bigger .e-toolbar .e-toolbar-items .e-custom.e-toolbar-item:not(.e-separator) {
        padding-left: 12px;
    }
    /* Specifies the styles for ListView component*/
    .material-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-item-header,
    .material-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-content,
    .bootstrap-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-content {
        color: #fff;
    }

    .fluent2 .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-item-header,
    .fluent2 .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-content,
    .fluent2-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-item-header,
    .fluent2-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-content {
        padding: 6px 0 1px 8px;
    }

    .fluent2 .e-folder-name,
    .fluent2-dark .e-folder-name {
        padding-left: 6px;
    }

    .fluent2 .e-listview.e-list-template .e-list-wrapper.e-list-multi-line.e-list-avatar .e-avatar,
    .fluent2-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line.e-list-avatar .e-avatar {
        top: 24px;
    }

    .e-bigger.fluent2 .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-item-header,
    .e-bigger.fluent2 .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-content,
    .e-bigger.fluent2-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-item-header,
    .e-bigger.fluent2-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line .e-list-content {
        padding: 9px 0 1px 12px;
    }

    .e-bigger.fluent2 .e-folder-name,
    .e-bigger.fluent2-dark .e-folder-name {
        padding-left: 8px;
    }

    .e-bigger.fluent2 .e-listview.e-list-template .e-list-wrapper.e-list-multi-line.e-list-avatar .e-avatar,
    .e-bigger.fluent2-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line.e-list-avatar .e-avatar {
        top: 30px;
    }

    .material .e-listview.e-list-template .e-list-wrapper.e-list-multi-line.e-list-avatar .e-avatar,
    .material-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line.e-list-avatar .e-avatar {
        top: 28px;
    }

    .e-listview.e-list-template .e-list-wrapper.e-list-multi-line.e-list-avatar .e-avatar{
        top: 12px;
    }

    .bootstrap4 .e-listview.e-list-template .e-list-wrapper.e-list-multi-line.e-list-avatar .e-avatar,
    .bootstrap .e-listview.e-list-template .e-list-wrapper.e-list-multi-line.e-list-avatar .e-avatar,
    .bootstrap-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line.e-list-avatar .e-avatar {
        top: 22px;
    }

    .fabric .e-listview.e-list-template .e-list-wrapper.e-list-multi-line.e-list-avatar .e-avatar,
    .fabric-dark .e-listview.e-list-template .e-list-wrapper.e-list-multi-line.e-list-avatar .e-avatar,
    .highcontrast .e-listview.e-list-template .e-list-wrapper.e-list-multi-line.e-list-avatar .e-avatar {
        top: 15px;
    }   
    
    .e-listview.e-list-template .e-list-wrapper.e-list-avatar:not(.e-list-badge){
        padding-left: 64px;
    }
    
    
 </style>

