@page "/breadcrumb/address-bar"

@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>
        This sample demonstrates the address bar functionalities using the <b>Blazor Breadcrumb</b> component. Click the right arrow icon to view and navigate to the next level items.
    </p>
</SampleDescription>
<ActionDescription>
    <p>In the demo, the <code>ItemTemplate</code> property is used to render the <code>Menu</code> component as Breadcrumb items.
        Click the right arrow icon to view and navigate to the next level items.
    </p>
    <p><b>See also:</b></p>
    <ul>
        <li><a href="https://blazor.syncfusion.com/documentation/breadcrumb/getting-started/" target="_blank" aria-label="Getting started with Blazor Breadcrumb">Getting started with Blazor Breadcrumb</a></li>
        <li><a href="https://blazor.syncfusion.com/documentation/breadcrumb/templates" target="_blank" aria-label="Blazor Breadcrumb - Template">Blazor Breadcrumb - Template</a></li>
    </ul>
</ActionDescription>

<div class="control-section">
    <div class="content-wrapper">
        <div class="row material2">
            <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
                <h5 style="display: inline-block">File Manager like Breadcrumb</h5>
                <SfButton class="e-small reset-btn" @onclick="ResetState  ">Reset State</SfButton>
            </div>
        </div>
        <div class="row material2">
            <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
                <SfBreadcrumb class="e-custom-breadcrumb">
                    <BreadcrumbItems>
                        @foreach (var item in BreadcrumbItemList )
                        {
                            <BreadcrumbItem IconCss="@item.IconCss" Text="@item.Text"></BreadcrumbItem>
                        }
                    </BreadcrumbItems>
                    <BreadcrumbTemplates>
                        <ItemTemplate>
                            <div style="display: flex;">
                                @if (context.Text != "LastItem")
                                {
                                    <SfMenu TValue="MenuItem">
                                        <MenuItems>
                                            <MenuItem Text="@context.Text" IconCss="@context.IconCss" />
                                        </MenuItems>
                                        <MenuEvents TValue="MenuItem" ItemSelected="@MenuItemSelected"></MenuEvents>
                                    </SfMenu>
                                }
                            </div>
                        </ItemTemplate>
                        <SeparatorTemplate>
                            <div style="display: flex;">
                                @{if (context.PreviousItem.Text != "LastItem")
                                    {
                                        var items = GetAddressBarItems (@context.PreviousItem.Text, false);
                                        if (items != null && items.Count > 0)
                                        {
                                            <SfMenu TValue="MenuItem" ShowItemOnClick="true">
                                                <MenuItems>
                                                    <MenuItem>
                                                        <MenuItems>
                                                            @foreach (var item in items)
                                                            {
                                                                <MenuItem Text="@item.Text" Id="@item.Type"></MenuItem>
                                                            }
                                                        </MenuItems>
                                                    </MenuItem>
                                                </MenuItems>
                                                <MenuEvents TValue="MenuItem" ItemSelected="@((MenuEventArgs<MenuItem> args) => { OnSubMenuItemSelected (args, context.PreviousItem.Text); })"></MenuEvents>
                                            </SfMenu>
                                        }
                                    }
                                }
                            </div>
                        </SeparatorTemplate>
                    </BreadcrumbTemplates>
                </SfBreadcrumb>
            </div>
        </div>
    </div>
</div>

@code {
    
    public List<BreadcrumbItemModel> BreadcrumbItemList  = new List<BreadcrumbItemModel>() {
        new BreadcrumbItemModel { IconCss = "e-bicons e-picture" },
        new BreadcrumbItemModel { Text = "This PC" },
        new BreadcrumbItemModel { Text = "Local Disk (C:)" },
        new BreadcrumbItemModel { Text = "Users" },
        new BreadcrumbItemModel { Text = "Admin" },
        new BreadcrumbItemModel { Text = "Pictures" }
    };

    private void MenuItemSelected(MenuEventArgs<MenuItem> args)
    {
        for (var i = 0; i < BreadcrumbItemList .Count; i++)
        {
            if (BreadcrumbItemList [i].Text == args.Item.Text)
            {
                BreadcrumbItemList  = BreadcrumbItemList .GetRange(0, i + 1);
                BreadcrumbItemList [0].IconCss = "e-bicons e-" + GetAddressBarItems (args.Item.Text, true)[0].Type;
                break;
            }
        }
        BreadcrumbItemList .Add(new BreadcrumbItemModel { Text = "LastItem" });
    }

    private void OnSubMenuItemSelected (MenuEventArgs<MenuItem> args, string text)
    {
        if (!string.IsNullOrEmpty(args.Item.Text))
        {
            List<AddressBarItemModel> subItems   = GetAddressBarItems (text, false);
            List<BreadcrumbItemModel> selectedItems    = BreadcrumbItemList ;
            for (var i = 0; i < subItems  .Count; i++)
            {
                for (var j = 0; j < BreadcrumbItemList .Count; j++)
                {
                    if (subItems  [i].Text == BreadcrumbItemList [j].Text)
                    {
                        selectedItems    = BreadcrumbItemList .GetRange(0, j);
                    }
                }
            }
            selectedItems   [0].IconCss = "e-bicons e-" + args.Item.Id;
            selectedItems   .Add(new BreadcrumbItemModel { Text = args.Item.Text });
            selectedItems   .Add(new BreadcrumbItemModel { Text = "LastItem" });
            BreadcrumbItemList  = selectedItems   ;
        }
    }

    private List<AddressBarItemModel> GetAddressBarItems (string text, bool needParent)
    {
        List<AddressBarItemModel> subItems   = AddressBarItems;
        bool isBreaked = false;
        if (text == null)
        {
            subItems   = GetSubMenuItems  (subItems  );
        }
        else
        {
            for (var i = 1; i < BreadcrumbItemList .Count; i++)
            {
                for (var j = 0; j < subItems  .Count; j++)
                {
                    if (subItems  [j].Text == BreadcrumbItemList [i].Text)
                    {
                        if (subItems  [j].Text == text)
                        {
                            if (needParent)
                            {
                                subItems   = new List<AddressBarItemModel>() { subItems  [j] };
                            }
                            else
                            {
                                subItems   = GetSubMenuItems  (subItems  [j].Items);
                            }
                            isBreaked = true;
                        }
                        else
                        {
                            subItems   = subItems  [j].Items;
                            j = 0;
                            if (subItems   == null)
                            {
                                isBreaked = true;
                            }
                        }
                        break;
                    }
                }
                if (isBreaked)
                {
                    break;
                }
            }
        }
        return (subItems   == AddressBarItems ? null : subItems  );
    }

    private List<AddressBarItemModel> GetSubMenuItems  (List<AddressBarItemModel> parentSubItems  )
    {
        List<AddressBarItemModel> subItems = new List<AddressBarItemModel>();
        if (parentSubItems   != null)
        {
            for (var i = 0; i < parentSubItems  .Count; i++)
            {
                subItems.Add(new AddressBarItemModel { Text = parentSubItems  [i].Text, Type = parentSubItems  [i].Type });
            }
        }
        return subItems;
    }


    public List<AddressBarItemModel> AddressBarItems { get; set; } = new List<AddressBarItemModel>() {
        new AddressBarItemModel {
            Text = "OneDrive", Type = "onedrive",
            Items = new List<AddressBarItemModel>() {
               new AddressBarItemModel { Text = "Documents", Type = "folder" },
               new AddressBarItemModel { Text = "Email attachments", Type = "folder" },
               new AddressBarItemModel { Text = "Music", Type = "folder" },
               new AddressBarItemModel { Text = "Pictures", Type = "folder" }
            }
        },
       new AddressBarItemModel {
            Text = "This PC", Type = "desktop",
            Items = new List<AddressBarItemModel>() {
               new AddressBarItemModel { Text = "Desktop", Type = "desktop" },
               new AddressBarItemModel { Text = "Documents", Type = "documents",
                   Items = new List<AddressBarItemModel>() {
                   new AddressBarItemModel { Text = "IISExpress", Type = "folder",
                       Items = new List<AddressBarItemModel>() {
                       new AddressBarItemModel { Text = "config", Type = "folder" }
                    } },
                   new AddressBarItemModel { Text = "Visual Studio 2019", Type = "folder",
                       Items = new List<AddressBarItemModel>() {
                       new AddressBarItemModel { Text = "Code Snippets", Type = "folder" },
                       new AddressBarItemModel { Text = "Templates", Type = "folder" },
                       new AddressBarItemModel { Text = "Visualizers", Type = "folder" }
                    } }
                } },
               new AddressBarItemModel { Text = "Downloads", Type = "downloads" },
               new AddressBarItemModel { Text = "Local Disk (C:)", Type = "folder",
                    Items = new List<AddressBarItemModel>() {
                       new AddressBarItemModel {
                            Text = "Microsoft", Type = "folder"
                        },
                       new AddressBarItemModel { Text = "Program Files", Type = "folder",
                           Items = new List<AddressBarItemModel>() {
                           new AddressBarItemModel { Text = "Git", Type = "folder",
                               Items = new List<AddressBarItemModel>() {
                               new AddressBarItemModel { Text = "bin", Type = "folder" },
                               new AddressBarItemModel { Text = "cmd", Type = "folder" },
                               new AddressBarItemModel { Text = "dev", Type = "folder" }
                            } },
                           new AddressBarItemModel { Text = "Google", Type = "folder",
                               Items = new List<AddressBarItemModel>() {
                               new AddressBarItemModel { Text = "Chrome", Type = "folder" }
                            } },
                           new AddressBarItemModel { Text = "Internet Explorer", Type = "folder",
                               Items = new List<AddressBarItemModel>() {
                               new AddressBarItemModel { Text = "en-US", Type = "folder" }
                            } }
                        } },
                       new AddressBarItemModel { Text = "Program Files (x86)", Type = "folder",
                           Items = new List<AddressBarItemModel>() {
                           new AddressBarItemModel { Text = "Microsoft", Type = "folder",
                               Items = new List<AddressBarItemModel>() {
                               new AddressBarItemModel { Text = "Edge", Type = "folder" }
                            } },
                           new AddressBarItemModel { Text = "MSBuild", Type = "folder" },
                           new AddressBarItemModel { Text = "Windows Defender", Type = "folder" }
                        } },
                       new AddressBarItemModel {
                            Text = "Users", Type = "folder", Items = new List<AddressBarItemModel>() {
                               new AddressBarItemModel {
                                    Text = "Admin", Type = "folder", Items = new List<AddressBarItemModel>() {
                                       new AddressBarItemModel { Text = "Desktop", Type = "desktop" },
                                       new AddressBarItemModel { Text = "Documents", Type = "documents" },
                                       new AddressBarItemModel { Text = "Downloads", Type = "downloads" },
                                       new AddressBarItemModel { Text = "Pictures", Type = "picture" }
                                    }
                                },
                               new AddressBarItemModel { Text = "Public", Type = "folder" }
                            }
                        },
                       new AddressBarItemModel { Text = "Windows", Type = "folder",
                           Items = new List<AddressBarItemModel>() {
                           new AddressBarItemModel { Text = "Boot", Type = "folder" },
                           new AddressBarItemModel { Text = "System32", Type = "folder",
                               Items = new List<AddressBarItemModel>() {
                               new AddressBarItemModel { Text = "Configuration", Type = "folder" },
                               new AddressBarItemModel { Text = "LogFiles", Type = "folder" }
                            } }
                        } }
                    }
                },
               new AddressBarItemModel { Text = "Local Disk (D:)", Type = "folder" }
            }
        },
       new AddressBarItemModel { Text = "Libraries", Type = "folder" },
       new AddressBarItemModel { Text = "Network", Type = "network" },
       new AddressBarItemModel { Text = "Recycle Bin", Type = "recyclebin" }
    };

    // To refresh the Breadcrumb control state when reset button clicked
    private void ResetState  ()
    {
        BreadcrumbItemList  = new List<BreadcrumbItemModel>() {
        new BreadcrumbItemModel { IconCss = "e-bicons e-picture" },
        new BreadcrumbItemModel { Text = "This PC" },
        new BreadcrumbItemModel { Text = "Local Disk (C:)" },
        new BreadcrumbItemModel { Text = "Users" },
        new BreadcrumbItemModel { Text = "Admin" },
        new BreadcrumbItemModel { Text = "Pictures" }
        };
    }

    public class AddressBarItemModel
    {
        public string Text { get; set; }
        public string Type { get; set; }
        public List<AddressBarItemModel> Items { get; set; }
    }

    public class BreadcrumbItemModel
    {
        public string Text { get; set; }
        public string IconCss { get; set; }
    }
}
<style>
    .e-custom-breadcrumb .e-menu-container ul .e-menu-item.e-menu-caret-icon {
        padding-right: 20px !important;
        padding-left: 0px !important;
        overflow: hidden;
    }

    .tailwind .e-custom-breadcrumb .e-menu-container ul .e-menu-item.e-menu-caret-icon,
    .tailwind-dark .e-custom-breadcrumb .e-menu-container ul .e-menu-item.e-menu-caret-icon,
    .e-bigger.bootstrap-dark .e-custom-breadcrumb .e-menu-container ul .e-menu-item.e-menu-caret-icon {
        padding-right: 25px !important;
    }

    .bootstrap5 .e-custom-breadcrumb .e-menu-container ul .e-menu-item.e-menu-caret-icon,
    .bootstrap5-dark .e-custom-breadcrumb .e-menu-container ul .e-menu-item.e-menu-caret-icon {
        padding-right: 23px !important;
    }

    .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-caret {
        right: 5px;
    }

    .fluent .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-caret,
    .fluent-dark .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-caret,
    .e-bigger .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-caret,
    .e-bigger .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-caret
    {
        right: 1px;
    }
    
    .e-custom-breadcrumb .e-breadcrumb-item,
    .e-custom-breadcrumb .e-breadcrumb-separator {
        padding: 0px !important;
    }

    .fabric .e-custom-breadcrumb .e-menu {
        padding: 0 8px !important;
    }

    .fabric .e-bigger .e-custom-breadcrumb .e-menu {
        padding: 0 12px !important;
    }

    .fabric .e-custom-breadcrumb .e-breadcrumb-item .e-menu,
    .highcontrast .e-custom-breadcrumb .e-breadcrumb-item .e-menu,
    .fabric-dark .e-custom-breadcrumb .e-breadcrumb-item .e-menu {
        padding: 0 !important;
    }

    .e-custom-breadcrumb .e-menu-container {
        border: none;
    }

    .e-custom-breadcrumb ol {
        background-color: transparent !important;
    }

    .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-menu-icon {
        margin-right: 0;
    }

    .fabric-dark .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-menu-icon,
    .fabric .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-menu-icon,
    .highcontrast .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-menu-icon {
        padding-right: 22px;
        padding-left: 6px;
    }

    .bootstrap .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-menu-icon {
        padding-right: 16px;
    }

    .e-custom-breadcrumb .e-caret {
        transform: rotate(-90deg);
    }

    .e-custom-breadcrumb .e-menu-item[aria-expanded="true"] .e-caret {
        transform: none;
    }

    @@font-face {
        font-family: 'e-bicons';
        src: url(data:application/x-font-ttf;charset=utf-8;base64,) format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    .e-bicons {
        font-family: 'e-bicons' !important;
    }

    .e-folder::before {
        content: '\e705';
    }

    .e-onedrive::before {
        content: '\e713';
    }

    .e-pc::before {
        content: '\e711';
    }

    .e-desktop::before {
        content: '\e700';
    }

    .e-documents::before {
        content: '\e70d';
    }

    .e-downloads::before {
        content: '\e709';
    }

    .e-picture::before {
        content: '\e718';
    }

    .e-network::before {
        content: '\e71c';
    }

    .e-recyclebin::before {
        content: '\e71f';
    }
</style>

@*Hidden:Lines*@
<style>
    .content-wrapper {
        width: 90%;
        margin: 0 auto;
        min-width: 85px;
    }

        .content-wrapper div.row {
            padding: 15px 0px;
        }

    @@media only screen and (max-width: 480px) {
        .content-wrapper {
            width: 92%;
        }

        .col-xs-12,
        .col-xs-4,
        .col-xs-12 {
            padding: 10px 5px;
            width: 100%;
        }

        .content-wrapper div.row {
            padding: 0px;
        }
    }

    .reset-btn {
        float: right;
        margin: 5px 2px 5px 0;
    }

    .bootstrap .e-custom-breadcrumb ol,
    .bootstrap4 .e-custom-breadcrumb ol,
    .bootstrap-dark .e-custom-breadcrumb ol {
        margin-left: -16px;
    }

    .e-bigger.bootstrap5-dark .e-custom-breadcrumb .e-menu-container ul .e-menu-item.e-menu-caret-icon,
    .e-bigger.bootstrap5 .e-custom-breadcrumb .e-menu-container ul .e-menu-item.e-menu-caret-icon {
        margin-top: -2px;
        padding-right: 26px !important;
    }

    .e-bigger.fabric-dark .e-custom-breadcrumb .e-menu-container ul .e-menu-item.e-menu-caret-icon {
        padding-right: 25px !important;
    }

    .e-bigger.fabric .e-custom-breadcrumb .e-menu-container ul .e-menu-item.e-menu-caret-icon,
    .e-bigger.highcontrast .e-custom-breadcrumb .e-menu-container ul .e-menu-item.e-menu-caret-icon {
        padding-right: 22px !important;
    }

    .bootstrap4 .e-custom-breadcrumb {
        background-color: transparent;
    }

    .e-custom-breadcrumb .e-menu-item.e-selected,
    .e-custom-breadcrumb .e-menu-item.e-focused {
        background-color: transparent !important;
    }

    .bootstrap5 .e-custom-breadcrumb .e-menu-item:hover {
        background-color: #dee2e6 !important;
    }

    .bootstrap5-dark .e-custom-breadcrumb .e-menu-item:hover {
        background-color: #495057 !important;
    }

    .tailwind .e-custom-breadcrumb .e-menu-item:hover {
        background-color: #e5e7eb !important;
    }

    .tailwind-dark .e-custom-breadcrumb .e-menu-item:hover {
        background-color: #4b5563 !important;
    }

    .material .e-custom-breadcrumb .e-menu-item:hover {
        background-color: #e0e0e0 !important;
    }

    .fabric .e-custom-breadcrumb .e-menu-item:hover {
        background-color: #dadada !important;
    }

    .fabric-dark .e-custom-breadcrumb .e-menu-item:hover {
        background-color: #514f4f !important;
    }

    .highcontrast .e-custom-breadcrumb .e-menu-item:hover {
        background-color: #685708 !important;
    }
	
    .fluent .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-caret,
    .fluent-dark .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-caret	{
        right: 0;
    }
	
    .material3 .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-caret,
    .material3-dark .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-caret,
    .e-bigger .material3 .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-caret,
    .e-bigger .material3-dark .e-custom-breadcrumb .e-menu-container ul .e-menu-item .e-caret {
        right: 2px;
    }
</style>
@*End:Hidden*@