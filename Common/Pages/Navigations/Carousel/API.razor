@page "/carousel/api"

@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns
@inject NavigationManager UriHelper
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the properties available in the <a href="https://www.syncfusion.com/blazor-components/blazor-carousel" target="_blank" aria-label="Feature Tour of Blazor Carousel">Blazor Carousel</a> component.</p>
</SampleDescription>
<ActionDescription>
    <p>
        In this demo, you can manually change the properties of the <code>Blazor Carousel</code> component like
        <code>AutoPlay</code>, <code>ButtonsVisibility</code>, <code>ShowIndicators</code>,
        <code>Interval</code>, <code>ShowPlayButton</code>, <code>Loop</code> using the property panel.
    </p>
    <p>
        More information about the properties available in the Blazor Carousel component can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/carousel/getting-started" aria-label="Blazor Carousel Getting Started documentation" >documentation section</a>.
    </p>
</ActionDescription>

<div class="control-section api-carousel-section">
    <div class="col-lg-9 content-wrapper">
        <div class="carousel-sample">
            <SfCarousel CssClass="api-carousel" AutoPlay="@_enableAutoPlay" ShowPlayButton="@_showPlayButton" Loop="@_isLoop" Interval="@_slideInterval" ButtonsVisibility="@_buttonsVisibility" ShowIndicators="@_showIndicators">
                <ChildContent>
                    @foreach (var slide in CarouselSlides)
                    {
                        <CarouselItem>
                            <Template>
                                <figure class="img-container">
                                    <img src="@UriHelper.ToAbsoluteUri($"{SampleService.WebAssetsPath}images/carousel/{slide.Image}.png")" alt="@slide.AltText" style="height:100%;width:100%;" />
                                    <figcaption class="img-caption">Showing @slide.Caption</figcaption>
                                </figure>
                            </Template>
                        </CarouselItem>
                    }
                </ChildContent>
            </SfCarousel>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <div id="property" class='property-panel-table' title="Properties">
            <table id='property' class='property-panel-table' style="width: 100%;">
                <tbody>
                    <tr style="height: 50px">
                        <td>Enable AutoPlay</td>
                        <td>
                            <SfSwitch TChecked="bool" @bind-Checked="_enableAutoPlay"></SfSwitch>
                        </td>
                    </tr>
                    <tr style="height: 50px">
                        <td>Infinite looping</td>
                        <td>
                            <SfSwitch TChecked="bool" @bind-Checked="_isLoop"></SfSwitch>
                        </td>
                    </tr>
                    <tr style="height: 50px">
                        <td>Show Indicators</td>
                        <td>
                            <SfSwitch TChecked="bool" @bind-Checked="_showIndicators"></SfSwitch>
                        </td>
                    </tr>
                    <tr style="height: 50px">
                        <td>Show Play Button</td>
                        <td>
                            <SfSwitch TChecked="bool" @bind-Checked="_showPlayButton"></SfSwitch>
                        </td>
                    </tr>
                    <tr>
                        <td>Show Arrows</td>
                        <td>
                            <SfDropDownList TValue="CarouselButtonVisibility" TItem="DropDownData" @bind-Value="@_buttonsVisibility" DataSource="@ArrowData">
                                <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </td>
                    </tr>
                    <tr>
                        <td>Slide interval</td>
                        <td>
                            <SfDropDownList TValue="int" TItem="DropDownData" @bind-Value="@_slideInterval" DataSource="@IntervalData">
                                <DropDownListFieldSettings Text="Name" Value="IntervalValue"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
<style>
    .api-carousel-section .carousel-sample {
        margin: 0 auto 2em;
        max-width: 500px;
        height: 300px;
    }

    .api-carousel-section .property-panel-table td {
        margin: 0;
        padding-bottom: 1em;
    }

    .api-carousel .e-carousel-items .e-carousel-item .img-container {
        height: 100%;
    }

        .api-carousel .e-carousel-items .e-carousel-item .img-container .img-caption {
            color: rgba(255, 255, 255);
            font-style: oblique;
            font-size: 1.5rem;
            margin: 0;
            left: 1.5rem;
            position: absolute;
            text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);
            top: 1.5rem;
        }
</style>

@code {
    private CarouselButtonVisibility _buttonsVisibility = CarouselButtonVisibility.Visible;
    private bool _showIndicators = true;
    private bool _showPlayButton;
    private bool _enableAutoPlay = true;
    private bool _isLoop = true;
    private int _slideInterval = 5000;
    
    private List<CarouselSlide> CarouselSlides = new List<CarouselSlide>()
    {
        new CarouselSlide{Image = "bridge", AltText = "bridge", Caption = "1 of 5"},
        new CarouselSlide{Image = "trees", AltText = "spring_trees", Caption = "2 of 5"},
        new CarouselSlide {Image = "waterfall", AltText = "waterfall", Caption = "3 of 5" },
        new CarouselSlide {Image = "sea", AltText = "sea", Caption = "4 of 5" },
        new CarouselSlide {Image = "rocks", AltText = "rocks", Caption = "5 of 5" }
    };
    
    private List<DropDownData> ArrowData = new List<DropDownData>() {
        new DropDownData { Name = "Hidden", Value = CarouselButtonVisibility.Hidden },
        new DropDownData { Name = "Visible", Value = CarouselButtonVisibility.Visible },
        new DropDownData { Name = "On Hover", Value = CarouselButtonVisibility.VisibleOnHover }
    };
    private List<DropDownData> IntervalData = new List<DropDownData>() {
        new DropDownData { Name = "3 seconds", IntervalValue = 3000 },
        new DropDownData { Name = "5 seconds", IntervalValue = 5000 },
        new DropDownData { Name = "7 seconds", IntervalValue = 7000 }
    };
    public class DropDownData
    {
        public string Name { get; set; }
        public CarouselButtonVisibility Value { get; set; }
        public int IntervalValue { get; set; }
    }
    public class CarouselSlide
    {
        public string Image { get; set; }
        public string AltText { get; set; }
        public string Caption { get; set; }
    }
}