@page "/stepper/linear-flow"
@using Syncfusion.Blazor.Navigations

@*Hidden:Lines*@

@inherits SampleBaseComponent

@*End:Hidden*@

<SampleDescription>
    <p>This sample showcases the usage of the <code>Linear</code> property in the Stepper component.</p>
</SampleDescription>

<ActionDescription>
    <p>In a linear process, users progress through steps one after the other in a sequential order. In a non-linear process, users have the flexibility to skip or complete steps in any order they prefer. In this example, the progress status can be interacted with in both a linear and nonlinear manner using the <code>Linear</code> property.</p>
</ActionDescription>

<div class="control-section">
    <div id="linear-stepper-section">
        <div class="e-btn-group">
            <input type="radio" id="linear" name="StepperMode" value="true" @oninput="@(() => SetStepperMode(true))" checked aria-label="Linear Mode Radio Button" />
            <label class="e-btn" for="linear">Linear</label>
            <input type="radio" id="nonLinear" name="StepperMode" value="false" @oninput="@(() => SetStepperMode(false))" aria-label="Non-linear Mode Radio Button" />
            <label class="e-btn" for="nonLinear">Non-Linear</label>
        </div>
        <div class="linear-stepper-control">
            <SfStepper @ref="LinearStepperComponent" ID="linear-stepper" Linear="@linearMode" StepChanged="(args)=>UpdateStepContent(args.ActiveStep)">
                <StepperSteps>
                    <StepperStep IconCss="sf-icon-form" Label="Project Setup"></StepperStep>
                    <StepperStep IconCss="sf-icon-tasksheet" Label="Task Planning"></StepperStep>
                    <StepperStep IconCss="sf-icon-progress" Label="Progress Tracking"></StepperStep>
                    <StepperStep IconCss="sf-icon-submit" Label="Project Completion"></StepperStep>
                </StepperSteps>
            </SfStepper>
        </div>
    </div>
    <div id="linear-stepper-content">
        @StepContent
    </div>
    <div class="linear-stepper-options" style="display: inline-flex;">
        @if (IsPrevious)
        {
        <button id="previousStep" style="margin-right:15px;" @onclick="@GoToPreviousStep" class="e-btn">Back</button>
        }
        @if (IsNext)
        {
        <button id="nextStep" @onclick="@GoToNextStep" class="e-btn">Next</button>
        }
    </div>
</div>

@code {
    private bool linearMode { get; set; } = true;
    private bool IsNext { get; set; } = true;
    private bool IsPrevious { get; set; } = false;
    private SfStepper LinearStepperComponent { get; set; }

    private MarkupString StepContent { get; set; } = new MarkupString(
        "<b>Description:</b> <br/><br/>" +
        "<ul><li>During this phase, the project's scope and objectives are clearly defined, along with the establishment of initial settings and parameters.</li>" +
        "<li>This step involves outlining the primary goals, deliverables, and the overall vision of the project to ensure a comprehensive understanding among all stakeholders.</li></ul>");

    private async void SetStepperMode(bool isLinear)
    {
        linearMode = isLinear;
        await LinearStepperComponent.ResetAsync();
        UpdateStepContent(LinearStepperComponent.ActiveStep);
    }

    private async void GoToPreviousStep()
    {
        await LinearStepperComponent.PreviousStepAsync();
        UpdateStepContent(LinearStepperComponent.ActiveStep);
    }

    private async void GoToNextStep()
    {
        await LinearStepperComponent.NextStepAsync();
        UpdateStepContent(LinearStepperComponent.ActiveStep);
    }

    private void UpdateStepContent(int activeStep)
    {
        IsNext = activeStep < 3;
        IsPrevious = activeStep > 0;

        StepContent = activeStep switch
        {
            0 => new MarkupString(
                "<b>Description:</b> <br/><br/>" +
                "<ul><li>During this phase, the project's scope and objectives are clearly defined, along with the establishment of initial settings and parameters.</li>" +
                "<li>This step involves outlining the primary goals, deliverables, and the overall vision of the project to ensure a comprehensive understanding among all stakeholders.</li></ul>"),
            1 => new MarkupString(
                "<b>Description:</b> <br/><br/>" +
                "<ul><li>Task planning involves creating a comprehensive roadmap that outlines specific tasks, sets achievable milestones, and allocates responsibilities among team members. </li>" +
                "<li>This phase requires a detailed breakdown of the project's requirements, resources, and a strategic timeline to ensure a systematic and efficient execution of tasks.</li></ul>"),
            2 => new MarkupString(
                "<b>Description:</b> <br/><br/>" +
                "<ul><li>In this phase, project managers closely monitor the progress of individual tasks, track the overall project's advancement, and regularly update task statuses.</li>" +
                "<li>Continuous assessment of the project's timeline and potential challenges allows for timely adjustments, ensuring that the project stays on course and within the predefined parameters.</li></ul>"),
            3 => new MarkupString(
                "<b>Description:</b> <br/><br/>" +
                "<ul><li>The final phase focuses on the comprehensive evaluation of the project's success, completion of all deliverables, and documentation of lessons learned. </li>" +
                "<li>Analyzing the outcomes and documenting the experiences gained during the project's lifecycle are crucial for improving future project management processes and enhancing overall organizational efficiency.</li></ul>"),
            _ => StepContent
        };
    }

}

<style>

    @@font-face {
        font-family: 'Linear_flow';
        src:
        url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    [class^="sf-icon-"], [class*=" sf-icon-"] {
        font-family: 'Linear_flow' !important;
        speak: none;
        font-style: normal;
        font-weight: normal;
        font-variant: normal;
        text-transform: none;
        line-height: inherit;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    .sf-icon-form:before { content: "\e700"; }
    .sf-icon-tasksheet:before { content: "\e701"; }
    .sf-icon-progress:before { content: "\e702"; }
    .sf-icon-submit:before { content: "\e703"; }

    #linear-stepper-section {
        text-align: center;
    }

    .linear-stepper-control {
        margin: 45px 100px;
    }

    .linear-stepper-options {
        margin: 30px 100px;
    }

    #linear-stepper-content {
        height: 120px;
        width: 75%;
        margin: 0px 105px;
    }

    @@media only screen and (max-width: 965px) {
        .linear-stepper-control {
            width: 100%;
            margin: 30px auto;
        }
        #linear-stepper-content, .linear-stepper-options {
            margin: 30px 0px 0px 0px;
            width: auto;
            height: auto;
            left: 25%;
        }
    }

</style>
