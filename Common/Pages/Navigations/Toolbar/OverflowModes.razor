@page "/toolbar/overflow-modes"

@using Syncfusion.Blazor.Navigations

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the available overflow modes in the <code>Blazor Toolbar</code>.</p>
</SampleDescription>
<ActionDescription>
    <p>In this demo, available responsive mode of Blazor Toolbar has been showcased. The modes can be set through <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Navigations.ToolbarItem.html#Syncfusion_Blazor_Navigations_ToolbarItem_Overflow" aria-label="Class reference of OverflowMode property in Toolbar">OverflowMode</a> property and the possible modes are <code>Scrollable</code>, <code>Popup</code>, <code>Extended</code> and <code>MultiRow</code>.</p>
    <p><code>Scrollable</code> - The scrollable mode is the default mode. When you have excess toolbar items, it can be viewed by scrolling through left and right arrows.</p>
    <p><code>Popup</code> - The overflowing toolbar items which do not fit in viewing area moves to the popup container.</p>
    <p><code>Extended</code> - The overflowing toolbar items which do not fit in the available space can be viewed in the next row of the toolbar on clicking the expand icon.</p>
    <p><code>MultiRow</code> - The overflowing toolbar items which do not fit in viewing area will be displayed as an in-line of the toolbar.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="e-sample-resize-container">
        <div class="row">
            <div class="col-md-12">
                <h5 style="display: inline-block">Overflow Mode - Scrollable</h5>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <SfToolbar OverflowMode="OverflowMode.Scrollable">
                    <ToolbarItems>
                        @foreach (ToolbarItemModel item in ToolbarItems)
                        {
                            if (string.IsNullOrEmpty(item.Text))
                            {
                                <ToolbarItem Type="@item.Type"></ToolbarItem>
                            }
                            else
                            {
                                <ToolbarItem PrefixIcon="@item.PrefixIcon" TooltipText="@item.TooltipText" Text="@item.Text"></ToolbarItem>
                            }
                        }
                    </ToolbarItems>
                </SfToolbar>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h5 style="display: inline-block">Overflow Mode - Popup</h5>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <SfToolbar OverflowMode="OverflowMode.Popup">
                    <ToolbarItems>
                        @foreach (ToolbarItemModel item in ToolbarItems)
                        {
                            if (string.IsNullOrEmpty(item.Text))
                            {
                                <ToolbarItem Type="@item.Type"></ToolbarItem>
                            }
                            else
                            {
                                <ToolbarItem PrefixIcon="@item.PrefixIcon" TooltipText="@item.TooltipText" Text="@item.Text"></ToolbarItem>
                            }
                        }
                    </ToolbarItems>
                </SfToolbar>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h5 style="display: inline-block">Overflow Mode - Extended</h5>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <SfToolbar OverflowMode="OverflowMode.Extended">
                    <ToolbarItems>
                        @foreach (ToolbarItemModel item in ToolbarItems)
                        {
                            if (string.IsNullOrEmpty(item.Text))
                            {
                                <ToolbarItem Type="@item.Type"></ToolbarItem>
                            }
                            else
                            {
                                <ToolbarItem PrefixIcon="@item.PrefixIcon" TooltipText="@item.TooltipText" Text="@item.Text"></ToolbarItem>
                            }
                        }
                    </ToolbarItems>
                </SfToolbar>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <h5 style="display: inline-block">Overflow Mode - MultiRow</h5>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <SfToolbar OverflowMode="OverflowMode.MultiRow">
                    <ToolbarItems>
                        @foreach (ToolbarItemModel item in ToolbarItems)
                        {
                            if (string.IsNullOrEmpty(item.Text))
                            {
                                <ToolbarItem Type="@item.Type"></ToolbarItem>
                            }
                            else
                            {
                                <ToolbarItem PrefixIcon="@item.PrefixIcon" TooltipText="@item.TooltipText" Text="@item.Text"></ToolbarItem>
                            }
                        }
                    </ToolbarItems>
                </SfToolbar>
            </div>
        </div>
    </div>
</div>

@code{
    
    public List<ToolbarItemModel> ToolbarItems = new List<ToolbarItemModel>
    {
        new ToolbarItemModel { PrefixIcon = "e-icons e-cut", TooltipText = "Cut", Text = "Cut" },
        new ToolbarItemModel { PrefixIcon = "e-icons e-copy", TooltipText = "Copy", Text = "Copy" },
        new ToolbarItemModel { PrefixIcon = "e-icons e-paste", TooltipText = "Paste", Text = "Paste" },
        new ToolbarItemModel { Type = ItemType.Separator },
        new ToolbarItemModel { PrefixIcon = "e-icons e-bold", TooltipText = "Bold", Text = "Bold" },
        new ToolbarItemModel { PrefixIcon = "e-icons e-underline", TooltipText = "Underline", Text = "Underline" },
        new ToolbarItemModel { PrefixIcon = "e-icons e-italic", TooltipText = "Italic", Text = "Italic" },
        new ToolbarItemModel { Type = ItemType.Separator },
        new ToolbarItemModel { PrefixIcon = "e-icons e-list-unordered", TooltipText = "Bullets", Text = "Bullets" },
        new ToolbarItemModel { PrefixIcon = "e-icons e-list-ordered", TooltipText = "Numbering", Text = "Numbering" },
        new ToolbarItemModel { Type = ItemType.Separator },
        new ToolbarItemModel { PrefixIcon = "e-icons e-undo", TooltipText = "Undo", Text = "Undo" },
        new ToolbarItemModel { PrefixIcon = "e-icons e-redo", TooltipText = "Redo", Text = "Redo" },
        new ToolbarItemModel { Type = ItemType.Separator },
        new ToolbarItemModel { PrefixIcon = "e-icons e-align-left", TooltipText = "Align-Left", Text = "Left" },
        new ToolbarItemModel { PrefixIcon = "e-icons e-align-right", TooltipText = "Align-Right", Text = "Right" },
        new ToolbarItemModel { PrefixIcon = "e-icons e-align-center", TooltipText = "Align-Center", Text = "Center" },
        new ToolbarItemModel { PrefixIcon = "e-icons e-justify", TooltipText = "Align-Justify", Text = "Justify" },
        new ToolbarItemModel { Type = ItemType.Separator },
        new ToolbarItemModel { PrefixIcon = "e-icons e-increase-indent", TooltipText = "Text-Indent", Text = "Indent" },
        new ToolbarItemModel { PrefixIcon = "e-icons e-decrease-indent", TooltipText = "Text-Outdent", Text = "Outdent" },
        new ToolbarItemModel { PrefixIcon = "e-icons e-erase", TooltipText = "Clear", Text = "Clear" },
        new ToolbarItemModel { PrefixIcon = "e-icons e-table", TooltipText = "Table", Text = "Table" },
        new ToolbarItemModel { PrefixIcon = "e-icons e-refresh", TooltipText = "Refresh", Text = "Refresh" },
        new ToolbarItemModel { PrefixIcon = "e-icons e-export", TooltipText = "Export", Text = "Export" }
    };
    public class ToolbarItemModel
    {
        public ItemType Type { get; set; }
        public string TooltipText { get; set; }
        public string Text { get; set; }
        public string PrefixIcon { get; set; }
    }
}

<style>
    .e-sample-resize-container {
        max-width: 700px;
    }

    .control-section div.row {
        padding: 8px 0px;
    }
</style>