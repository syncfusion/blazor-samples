@page "/ai-filemanager/tagsearch"
@page "/file-manager/ai-tagsearch"

@using FileManagerAI.Services
@using BlazorDemos.Service
@using Syncfusion.Blazor.FileManager
@using Syncfusion.Blazor.Popups
@using System;
@using System.IO;
@using System.Text;
@using System.Threading.Tasks;
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Notifications
@using Syncfusion.Pdf;
@using Syncfusion.Pdf.Graphics;
@using Syncfusion.Pdf.Grid;
@using Syncfusion.Drawing;
@using Syncfusion.Pdf.Parsing;
@using System.Text.RegularExpressions;
@using Syncfusion.DocIO;
@using Syncfusion.DocIO.DLS;
@using Syncfusion.Blazor.Spinner;
@using Syncfusion.Blazor.Buttons;

@using SmartComponents.LocalEmbeddings
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@
@inject FileManagerService FileManagerService
@inject AzureAIService openAIService
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper

<SampleDescription>
    <p>
        The Blazor File Manager is integrated with AI, offering features like AI Tagging and Tag Search. AI Tagging automatically assigns relevant tags to files, while Tag Search allows users to quickly find files based on these AI-generated tags, making file organization and retrieval more efficient.
    </p>
    <p>
        Explore our <strong>Smart AI demos</strong> with limited AI token usage directly in your browser. To dive deeper and try out these features locally using your own API key, check out our
        <a href="https://github.com/syncfusion/smart-ai-samples/tree/master/blazor" target="_blank" aria-label="Navigate to the Syncfusion Smart AI Samples GitHub repository">
            <strong>Syncfusion Smart AI Samples</strong>
        </a> on GitHub.
    </p>
</SampleDescription>

<ActionDescription>
    <p>
        Users can manage files with ease using smart AI features. Upon clicking a file, see existing tags and generate new AI-suggested tags to ensure your files are properly categorized. Save or discard AI-suggested tags based on relevance.
    </p>
</ActionDescription>

@*Hidden:Lines*@
<AINotification></AINotification>
@*End:Hidden*@

@*Hidden:Lines*@
<AIToastNotification></AIToastNotification>
@*End:Hidden*@

<div class="control-container">
    <div class="file-manager">
        <SfFileManager ShowTooltip="false" TValue="FileManagerDirectoryContent" ID="@FileManagerId" @ref="FileManager" Height="500px">
            <FileManagerSearchSettings AllowSearchOnTyping=false></FileManagerSearchSettings>
            <FileManagerToolbarSettings ToolbarItems="@Items"></FileManagerToolbarSettings>
            <FileManagerContextMenuSettings File="@FileItems" Folder="@FolderItems"></FileManagerContextMenuSettings>
            <FileManagerEvents TValue="FileManagerDirectoryContent" OnRead="OnReadAsync" ItemsDeleting="ItemsDeletingAsync" FolderCreating="FolderCreatingAsync" Searching="SearchingAsync" ItemRenaming="ItemRenamingAsync" ItemsMoving="ItemsMovingAsync" ItemsUploaded="ItemsUploadedAsync" BeforeDownload="BeforeDownload" BeforeImageLoad="BeforeImageLoadAsync" MenuOpened="MenuOpened" OnMenuClick="OnMenuClick" FileSelection="CloseTagContainer"></FileManagerEvents>
        </SfFileManager>
    </div>
    @if (isTag)
    {
        <div id="tags" class="tags">
            <div id="tagContainer">
                <div class="title-container">
                    <strong>Existing File Tags:</strong>
                    <SfButton IconCss="e-icons e-close" CssClass="e-small" OnClick="CloseTagContainer"></SfButton>
                </div>
                <br />
                @if (fileTags?.Count == 0)
                {
                    <p>No tags available</p>
                }
                else
                {
                    <div class="scrollable-container">
                        <SfChip EnableDelete="true" @ref="Chip" Chips="@fileTags">
                            <ChipEvents Deleted="@Deleted"></ChipEvents>
                        </SfChip>
                    </div>
                }
                <br />
                <strong style="margin-bottom: 10px;">AI suggested File Tags:</strong>
                @if (aiTags?.Count == 0)
                {
                    <p>Click <strong>"Generate AI Tags"</strong> button to get suggested tags from AI.</p>
                }
                else
                {
                    <div class="scrollable-container">
                        <SfChip EnableDelete="true" @ref="AIChip" Chips="@aiTags">
                            <ChipEvents Deleted="@AIDeleted"></ChipEvents>
                        </SfChip>
                    </div>
                }
                <div class="button-container">
                    <SfButton CssClass="e-btn e-outline e-primary" OnClick="SaveTags" Disabled=@isSave>Save AI Tags</SfButton>
                    <SfButton CssClass="e-btn e-outline e-primary" OnClick="AddTags">Generate AI Tags</SfButton>
                </div>
            </div>
        </div>
    }
</div>

<style>

    button {
        display: inline-block;
        margin: 5px 0;
    }

    .rich-label {
        font-size: 1.2em;
        color: #333;
        font-weight: bold;
    }

    .feature-description {
        border: 1px solid #d1d9e0;
        border-radius: 10px;
        padding: 5px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        font-family: Arial, sans-serif;
        margin: 20px 0;
    }

    .feature-description h4 {
        color: #2a3f54;
        font-size: 1.3em;
        margin-bottom: 15px;
    }

    .feature-description ul {
        list-style-type: disc;
        padding-left: 20px;
    }

    .feature-description li {
        color: #596775;
        font-size: 1em;
        line-height: 1.4;
        margin-bottom: 10px;
    }

    .feature-description li:last-of-type {
        margin-bottom: 0;
    }
</style>