@page "/kanban/stacked-header"

@using Syncfusion.Blazor.KanbanDemo
@using Syncfusion.Blazor.Kanban
@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the Kanban component with the stacked header feature. 
        In this sample, the Kanban is showcased with two headers aligned in a stacked manner.</p>
</SampleDescription>
<ActionDescription>
    <p>The Kanban provides an option to add an additional header along with a column header in a stacked manner. 
        This header groups the logically related columns. 
        This can be achieved by mapping <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Kanban.KanbanStackedHeader.html#Syncfusion_Blazor_Kanban_KanbanStackedHeader_Text" aria-label="Class reference of Text property in Kanban">Text</a> and <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Kanban.KanbanStackedHeader.html#Syncfusion_Blazor_Kanban_KanbanStackedHeader_KeyFields" aria-label="Class reference of KeyFields property in Kanban">KeyFields</a> attribute of the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Kanban.KanbanStackedHeader.html" aria-label="Class reference of KanbanStackedHeader">KanbanStackedHeader</a> property.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <SfKanban KeyField="Status" DataSource="@CardData" EnableTooltip="true">
        <KanbanColumns>
            @foreach (ColumnModel item in ColumnData)
            {
                <KanbanColumn HeaderText="@item.HeaderText" KeyField="@item.KeyField"/>
            }
        </KanbanColumns>
        <KanbanCardSettings ContentField="Summary" HeaderField="Id"/>
        <KanbanStackedHeaders>
            @foreach (StackedHeaderModel item in StackedHeaderData)
            {
                <KanbanStackedHeader Text="@item.Text" KeyFields="@item.KeyFields"/>
            }
        </KanbanStackedHeaders>
    </SfKanban>
</div>

@code{
    
    private List<KanbanDataModel> CardData = new KanbanDataModel().GetTasks();
    private List<ColumnModel> ColumnData = new List<ColumnModel>() 
    {
        new ColumnModel(){ HeaderText= "Open", KeyField= new List<string>() { "Open" } },
        new ColumnModel(){ HeaderText= "In Progress", KeyField= new List<string>() { "In Progress" } },
        new ColumnModel(){ HeaderText= "In Review", KeyField= new List<string>() { "Review" } },
        new ColumnModel() { HeaderText = "Completed", KeyField = new List<string>() { "Close" } }
    };

    private List<StackedHeaderModel> StackedHeaderData = new List<StackedHeaderModel>() 
    {
        new StackedHeaderModel(){ Text= "To Do", KeyFields= new List<string>() { "Open" } },
        new StackedHeaderModel(){ Text= "Development Phase", KeyFields= new List<string>() { "In Progress", "Review" } },
        new StackedHeaderModel(){ Text= "Done", KeyFields= new List<string>() { "Close" } }
    };
}