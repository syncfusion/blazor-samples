@page "/diagram/spiral-Diagram"

@using Syncfusion.Blazor.Diagram
@*Hidden:Lines*@
@inherits SampleBaseComponent;
@implements IDisposable
@inject NavigationManager NavigationManager
@*End:Hidden*@
@*Hidden:Lines*@
<SampleDescription>
    <p>
        This sample visualizes the software development lifecycle using a spiral diagram, implemented with the Syncfusion<sup>®</sup> Blazor Diagram component. It represents project stages as nodes arranged in a continuously expanding spiral.
    </p>
</SampleDescription>
<ActionDescription>
    <p>
        This interactive spiral diagram visualizes a software project's lifecycle. Each stage (e.g., "Ideation," "Development") is represented by a color-coded circular node with an icon. Connectors emphasize directional progression, and tooltip display stage titles on hover, offering immediate clarity into the iterative development process.
    </p>
</ActionDescription>
<style>
    @@font-face {
        font-family: 'Spiral Diagram Font Icon';
        src: url(data:application/x-font-ttf;charset=utf-8;base64,) format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    [class^="sf-icon-"], [class*=" sf-icon-"] {
        font-family: 'Spiral Diagram Font Icon' !important;
        speak: none;
        font-size: 50px;
        font-style: normal;
        font-weight: normal;
        font-variant: normal;
        text-transform: none;
        line-height: 1;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    .sf-icon-ideation:before {
        content: "\e700";
    }

    .sf-icon-planning:before {
        content: "\e701";
    }

    .sf-icon-requirement-analysis:before {
        content: "\e702";
    }

    .sf-icon-research:before {
        content: "\e703";
    }

    .sf-icon-design:before {
        content: "\e704";
    }

    .sf-icon-prototyping:before {
        content: "\e705";
    }

    .sf-icon-front-end-development:before {
        content: "\e706";
    }

    .sf-icon-backend-development:before {
        content: "\e707";
    }

    .sf-icon-integration:before {
        content: "\e708";
    }

    .sf-icon-testing:before {
        content: "\e709";
    }

    .sf-icon-bug-fixing:before {
        content: "\e70a";
    }

    .sf-icon-deployment:before {
        content: "\e70b";
    }

    .sf-icon-user-training:before {
        content: "\e70c";
    }

    .sf-icon-monitoring:before {
        content: "\e70d";
    }

    .sf-icon-feedback:before {
        content: "\e70e";
    }

    .sf-icon-iteration:before {
        content: "\e70f";
    }

    .sf-icon-scalability-improvements:before {
        content: "\e710";
    }

    .sf-icon-security-audit:before {
        content: "\e711";
    }

    .sf-icon-performance-tuning:before {
        content: "\e712";
    }

    .sf-icon-documentation:before {
        content: "\e713";
    }

    .sf-icon-customer-support:before {
        content: "\e714";
    }

    .sf-icon-feature-expansion:before {
        content: "\e715";
    }

    .sf-icon-sales-marketing:before {
        content: "\e716";
    }

    .sf-icon-partnership:before {
        content: "\e717";
    }

    .sf-icon-end-plan:before {
        content: "\e718";
    }
</style>
<div class="col-lg-12 control-section">
    <div style="text-align:center">
        @*End:Hidden*@
        <SfDiagramComponent Height="700px" @ref="@Diagram" Nodes="@NodeCollection" Connectors="@ConnectorCollection" InteractionController="@DiagramInteractions.ZoomPan" Created="OnCreated"
                            Constraints="@Constraints">
            <PageSettings MultiplePage="true" Width="500" Height="500"></PageSettings>
            <DiagramTemplates>
                <AnnotationTemplate>
                    @{
                        if (context is ShapeAnnotation annotation)
                        {
                            Node? node = annotation.GetParent() as Node;
                            string? id = node?.ID;
                            if (id == "node1")
                            {
                                <div class="sf-icon-ideation" style="text-align: center;"></div>
                            }
                            else if (id == "node2")
                            {
                                <div class="sf-icon-planning" style="text-align: center;"></div>
                            }
                            else if (id == "node3")
                            {
                                <div class="sf-icon-requirement-analysis" style="text-align: center;"></div>
                            }
                            else if (id == "node4")
                            {
                                <div class="sf-icon-research" style="text-align: center;"></div>
                            }
                            else if (id == "node5")
                            {
                                <div class="sf-icon-design" style="text-align: center;"></div>
                            }
                            else if (id == "node6")
                            {
                                <div class="sf-icon-prototyping" style="text-align: center;"></div>
                            }
                            else if (id == "node7")
                            {
                                <div class="sf-icon-front-end-development" style="text-align: center;"></div>
                            }
                            else if (id == "node8")
                            {
                                <div class="sf-icon-backend-development" style="text-align: center;"></div>
                            }
                            else if (id == "node9")
                            {
                                <div class="sf-icon-integration" style="text-align: center;"></div>
                            }
                            else if (id == "node10")
                            {
                                <div class="sf-icon-testing" style="text-align: center;"></div>
                            }
                            else if (id == "node11")
                            {
                                <div class="sf-icon-bug-fixing" style="text-align: center;"></div>
                            }
                            else if (id == "node12")
                            {
                                <div class="sf-icon-deployment" style="text-align: center;"></div>
                            }
                            else if (id == "node13")
                            {
                                <div class="sf-icon-user-training" style="text-align: center;"></div>
                            }
                            else if (id == "node14")
                            {
                                <div class="sf-icon-monitoring" style="text-align: center;"></div>
                            }
                            else if (id == "node15")
                            {
                                <div class="sf-icon-feedback" style="text-align: center;"></div>
                            }
                            else if (id == "node16")
                            {
                                <div class="sf-icon-iteration" style="text-align: center;"></div>
                            }
                            else if (id == "node17")
                            {
                                <div class="sf-icon-scalability-improvements" style="text-align: center;"></div>
                            }
                            else if (id == "node18")
                            {
                                <div class="sf-icon-security-audit" style="text-align: center;"></div>
                            }
                            else if (id == "node19")
                            {
                                <div class="sf-icon-performance-tuning" style="text-align: center;"></div>
                            }
                            else if (id == "node20")
                            {
                                <div class="sf-icon-documentation" style="text-align: center;"></div>
                            }
                            else if (id == "node21")
                            {
                                <div class="sf-icon-customer-support" style="text-align: center;"></div>
                            }
                            else if (id == "node22")
                            {
                                <div class="sf-icon-feature-expansion" style="text-align: center;"></div>
                            }
                            else if (id == "node23")
                            {
                                <div class="sf-icon-sales-marketing" style="text-align: center;"></div>
                            }
                            else if (id == "node24")
                            {
                                <div class="sf-icon-partnership" style="text-align: center;"></div>
                            }
                            else if (id == "node25")
                            {
                                <div class="sf-icon-end-plan" style="text-align: center;"></div>
                            }
                        }

                    }
                </AnnotationTemplate>
            </DiagramTemplates>
            <SnapSettings Constraints="@SnapConstraints.None"></SnapSettings>
        </SfDiagramComponent>
        @*Hidden:Lines*@
    </div>
</div>

@*End:Hidden*@

@code{

    //Defines Diagrams's nodes collection
    public DiagramObjectCollection<Node>? NodeCollection { get; set; }
    //Defines Diagrams's connectors collection
    public DiagramObjectCollection<Connector>? ConnectorCollection { get; set; }
    public SfDiagramComponent? Diagram;
    public DiagramConstraints Constraints = DiagramConstraints.Default & ~DiagramConstraints.UndoRedo;

    public class LifeCycle
    {
        public string? Title { get; set; }
        public string? Color { get; set; }
    }

    public const int CenterX = 500;
    public const int CenterY = 500;
    public const int Angle = 180;
    public const int AngleStep = 30;
    public const int Radius = 200;
    public const int RadiusStep = 65;


    public List<LifeCycle> LifeCycleSteps = new List<LifeCycle>{
        new LifeCycle { Title = "Lifecycle \n of\nSoftware ", Color = "hsl(0, 0%, 20%)" },
        new LifeCycle { Title = "Ideation", Color = "hsl(10, 80%, 60%)" },
        new LifeCycle { Title = "Planning", Color = "hsl(20, 80%, 60%)" },
        new LifeCycle { Title = "Requirement Analysis", Color = "hsl(30, 80%, 60%)" },
        new LifeCycle { Title = "Research", Color = "hsl(40, 80%, 60%)" },
        new LifeCycle { Title = "Design", Color = "hsl(50, 75%, 62%)" },
        new LifeCycle { Title = "Prototyping", Color = "hsl(60, 75%, 62%)" },
        new LifeCycle { Title = "Frontend Development", Color = "hsl(140, 70%, 55%)" },
        new LifeCycle { Title = "Backend Development", Color = "hsl(150, 70%, 55%)" },
        new LifeCycle { Title = "Integration", Color = "hsl(160, 70%, 55%)" },
        new LifeCycle { Title = "Testing", Color = "hsl(180, 65%, 60%)" },
        new LifeCycle { Title = "Bug Fixing", Color = "hsl(190, 65%, 60%)" },
        new LifeCycle { Title = "Deployment", Color = "hsl(210, 70%, 60%)" },
        new LifeCycle { Title = "User Training", Color = "hsl(220, 70%, 60%)" },
        new LifeCycle { Title = "Monitoring", Color = "hsl(240, 70%, 65%)" },
        new LifeCycle { Title = "Feedback Collection", Color = "hsl(250, 70%, 65%)" },
        new LifeCycle { Title = "Iteration", Color = "hsl(260, 70%, 65%)" },
        new LifeCycle { Title = "Scalability Improvements", Color = "hsl(280, 70%, 60%)" },
        new LifeCycle { Title = "Security Audit", Color = "hsl(290, 70%, 60%)" },
        new LifeCycle { Title = "Performance Tuning", Color = "hsl(300, 70%, 60%)" },
        new LifeCycle { Title = "Documentation", Color = "hsl(320, 60%, 65%)" },
        new LifeCycle { Title = "Customer Support", Color = "hsl(330, 60%, 65%)" },
        new LifeCycle { Title = "Feature Expansion", Color = "hsl(345, 60%, 60%)" },
        new LifeCycle { Title = "Sales & Marketing", Color = "hsl(355, 60%, 60%)" },
        new LifeCycle { Title = "Partnerships", Color = "hsl(5, 60%, 60%)" },
        new LifeCycle { Title = "End-of-Life Plan", Color = "hsl(15, 60%, 60%)" }
    };


    public DiagramPoint PolarToCartesian(double cx, double cy, double r, double AngleDeg)
    {
        double rad = (AngleDeg - 90) * Math.PI / 180;
        return new DiagramPoint
        {
            X = cx + r * Math.Cos(rad),
            Y = cy + r * Math.Sin(rad)
        };
    }

    protected override void OnInitialized()
    {
        NodeCollection = new DiagramObjectCollection<Node>();
        ConnectorCollection = new DiagramObjectCollection<Connector>();
        CreateSpiralDiagram();
    }


    public void CreateSpiralDiagram()
    {
        // Center node
        NodeCollection?.Add(new Node
        {
            ID = "node0",
            OffsetX = CenterX + 30,
            OffsetY = CenterY,
            Width = 150,
            Height = 150,
            Shape = new BasicShape { Type = NodeShapes.Basic, Shape = NodeBasicShapes.Ellipse },
            Constraints = NodeConstraints.Default | NodeConstraints.Shadow,
            Annotations = new DiagramObjectCollection<ShapeAnnotation>
        {
                new ShapeAnnotation
                {
                    Content = LifeCycleSteps[0].Title,
                    Width = 100,
                    Style = new TextStyle { Color = "#FFFFFF", FontSize = 18, Bold = true }
                },
            },
            Style = new ShapeStyle
            {
                Fill = LifeCycleSteps[0].Color,
                StrokeColor = "white",
                StrokeWidth = 2,
            },
        });

        for (int i = 1; i < LifeCycleSteps.Count; i++)
        {
            var step = LifeCycleSteps[i];
            var point = PolarToCartesian(CenterX, CenterY, Radius + (i * RadiusStep / (2 * Math.PI)), Angle + (i * AngleStep));

            NodeCollection?.Add(new Node
            {
                ID = $"node{i}",
                OffsetX = point.X,
                OffsetY = point.Y,
                Width = 85,
                Height = 85,
                Shape = new BasicShape { Type = NodeShapes.Basic, Shape = NodeBasicShapes.Ellipse },
                Constraints = NodeConstraints.Default | NodeConstraints.Shadow | NodeConstraints.Tooltip,
                Tooltip = new DiagramTooltip() { Content = step.Title },
                Annotations = new DiagramObjectCollection<ShapeAnnotation>
            {
                    new ShapeAnnotation
                    {
                        UseTemplate=true,
                        Width=50,
                        Height=50,
                    }
                },
                Style = new ShapeStyle
                {
                    Fill = step.Color,
                    StrokeColor = "#FFFFFF",
                    StrokeWidth = 2,

                },
            });

            if (i != 1)
            {
                ConnectorCollection?.Add(new Connector
                {
                    ID = $"connector{i}",
                    SourceID = $"node{i - 1}",
                    TargetID = $"node{i}",
                    Type = ConnectorSegmentType.Straight,
                    Style = new ShapeStyle
                    {
                        StrokeColor = "#9CA3AF",
                        StrokeWidth = 2,
                        StrokeDashArray = "0"
                    },
                    TargetDecorator = new DecoratorSettings
                    {
                        Shape = DecoratorShape.Arrow,
                        Style = new ShapeStyle
                        {
                            Fill = "#9CA3AF",
                            StrokeColor = "#9CA3AF"
                        }
                    }
                });
            }
        }
    }

    private void OnCreated()
    {
        FitOptions options = new FitOptions() { Mode = FitMode.Both, Region = DiagramRegion.PageSettings, CanZoomIn = true };
        Diagram?.FitToPage(options);
    }
    @*Hidden:Lines*@
    public void Dispose()
    {
        if (NodeCollection != null)
        {
            NodeCollection.Clear();
            NodeCollection = null;
        }
    }
    @*End:Hidden*@
}