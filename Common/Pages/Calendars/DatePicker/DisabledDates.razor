@page "/DatePicker/Disabled-Dates"

@using Syncfusion.Blazor.Calendars

@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@
<SampleDescription>
    <p>In the following example, all the weekends (<b>Saturday</b> and <b>Sunday</b>) of a month are <b>disabled</b>, and these dates are <b>restricted</b> to set or select in the DatePicker.</p>
</SampleDescription>
<ActionDescription>
    <p>Disabled Dates example demonstrates how to disable specific dates in the DatePicker by using <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Calendars.DatePickerEvents-1.html#Syncfusion_Blazor_Calendars_DatePickerEvents_1_OnRenderDayCell" target="_blank" aria-label="Class reference of OnRenderDayCell event in DatePicker">OnRenderDayCell</a> event. This event gets triggered on each day cell element creation, that allows you to customize, or disable specific dates in the DatePicker. Here the weekend dates are disabled by using <b>OnRenderDayCell</b>.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="control-wrapper">
        <label class="example-label">Date of journey</label>
        <SfDatePicker TValue="DateTime?" @ref="@DatePickerObj" Placeholder="Choose a Date" ShowClearButton="true" FullScreen="true" aria-label="Select date of journey">
            <DatePickerEvents TValue="DateTime?"  OnRenderDayCell="@DisableDate"></DatePickerEvents>
        </SfDatePicker>
    </div>
</div>

<style>
    .control-wrapper {
        max-width: 250px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }
</style>
@code {
    private SfDatePicker<DateTime?>? DatePickerObj { get; set; }
    
    private void DisableDate(RenderDayCellEventArgs args)
    {
        if (DatePickerObj != null)
        {
            var view = DatePickerObj.CurrentView();
            if (view == "Month" && ((int)args.Date.DayOfWeek == 0 || (int)args.Date.DayOfWeek == 6))
            {
                args.IsDisabled = true;
            }
        }
    }
}