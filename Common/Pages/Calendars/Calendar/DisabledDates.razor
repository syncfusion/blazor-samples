@page "/Calendar/Disabled-Dates"

@using Syncfusion.Blazor.Calendars

@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@
<SampleDescription>
    <p>In the following example, all the weekends (<b>Saturday</b> and <b>Sunday</b>) of a month are <b>disabled</b>, and these dates are restricted to set or select in the Calendar.</p>
</SampleDescription>
<ActionDescription>
    <p>Disabled Dates example demonstrates, how to disable specific dates in the Calendar by using the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Calendars.CalendarEvents-1.html#Syncfusion_Blazor_Calendars_CalendarEvents_1_OnRenderDayCell" target="_blank" aria-label="Class reference of OnRenderDayCell event in Calendar">OnRenderDayCell</a> event. This event gets triggered on each day cell element creation that allows you to customize or disable the specific dates in the Calendar. Here, the weekend dates are disabled by using <b>OnRenderDayCell</b>.</p>
</ActionDescription>

<div class="control-section">
    <div class="control-wrapper">
        <SfCalendar TValue="DateTime?" @ref="@CalendarObj" @bind-Value="@SelectedDate" HtmlAttributes="@(new Dictionary<string, object> { {"aria-label", "Calendar with disabled weekend dates"} })" >
            <CalendarEvents TValue="DateTime?" OnRenderDayCell="@DisableDate"></CalendarEvents>
        </SfCalendar>
        <span class="example-label">Selected date is: <b>@(SelectedDate?.ToString("M/d/yyyy"))</b></span>
    </div>
</div>

<style>
    .control-wrapper {
        max-width: 300px;
        margin: 0 auto;
        padding: 20px 0px 10px;
    }

    .example-label {
        font-size: 14px;
        display: block;
        margin: 0;
        padding: 20px 0px 0px;
    }
</style>

@code {
    private DateTime? SelectedDate { get; set; } = DateTime.Now;
    private SfCalendar<DateTime?>? CalendarObj { get; set; }
    
    private void DisableDate(RenderDayCellEventArgs args)
    {
        if (CalendarObj != null)
        {
            var view = CalendarObj.CurrentView();
            if (view == "Month" && ((int)args.Date.DayOfWeek == 0 || (int)args.Date.DayOfWeek == 6))
            {
                args.IsDisabled = true;
            }
        }
    }
}
