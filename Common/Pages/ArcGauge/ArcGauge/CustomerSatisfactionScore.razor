@page "/arc-gauge/customer-satisfaction-score"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.CircularGauge
@using ThemeHelper
@inject NavigationManager NavigationManager

@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@

<SampleDescription>
    <p>This sample shows an arc gauge with a real-time scenario of a customer satisfaction score ranging from 0 to 10.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render an arc gauge showing customer satisfaction score. You can use <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeAxis.html" aria-label="Class reference of CircularGaugeAxes">CircularGaugeAxes</a>, <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeRange.html" aria-label="Class reference of CircularGaugeRanges">CircularGaugeRanges</a>, <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeAnnotation.html" aria-label="Class reference of CirculargaugeAnnotations">CirculargaugeAnnotations</a>, <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeLegendSettings.html" aria-label="Class reference of CircularGaugeLegendSettings">CircularGaugeLegendSettings</a> and <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipSettings.html">CircularGaugeTooltipSettings</a> oriented properties to customize the appearance of the arc gauge, in order to achieve the desired outcome.</p>
    <p>More information on the arc gauge can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/circular-gauge/getting-started" aria-label="Blazor Circular Gauge Getting Started documentation" >documentation section</a>.</p>
</ActionDescription>

<div class="control-section" align="center">
    <SfCircularGauge Title="Customer Satisfaction Score" Height="400px" AllowMargin="false" CenterY="63%" Theme="@Theme">
        <CircularGaugeTitleStyle Size="18px" FontFamily="inherit" FontWeight="@FontWeight"></CircularGaugeTitleStyle>
        <CircularGaugeLegendSettings Shape="GaugeShape.Circle" Alignment="Alignment.Center" ToggleVisibility="true" Visible="true" Position="LegendPosition.Bottom">
            <CircularGaugeLegendTextStyle FontFamily="inherit" Size="12px"></CircularGaugeLegendTextStyle>
        </CircularGaugeLegendSettings>
        <CircularGaugeAxes>
            <CircularGaugeAxis StartAngle="270" EndAngle="90" Minimum="0" Maximum="10" Radius="125%">
                <CircularGaugeAxisLineStyle Width="0"></CircularGaugeAxisLineStyle>
                <CircularGaugeAxisLabelStyle Position="Position.Outside" Offset="-18">
                    <CircularGaugeAxisLabelFont Size="12px" FontFamily="inherit">
                    </CircularGaugeAxisLabelFont>
                </CircularGaugeAxisLabelStyle>
                <CircularGaugeAxisMajorTicks Height="12" Width="1.5" Interval="2" Offset="16">
                </CircularGaugeAxisMajorTicks>
                <CircularGaugeAxisMinorTicks Height="0" Width="0">
                </CircularGaugeAxisMinorTicks>
                <CircularGaugeRanges>
                    <CircularGaugeRange Start="0" End="2" StartWidth="40" EndWidth="40" Color="#F03E3E" Radius="90%" LegendText="Poor"></CircularGaugeRange>
                    <CircularGaugeRange Start="6.5" End="9.5" StartWidth="120" EndWidth="120" Color="#0477c2" Radius="120%" LegendText="Average Score"></CircularGaugeRange>
                    <CircularGaugeRange Start="2" End="6" StartWidth="40" EndWidth="40" Color="#f6961e" Radius="90%" LegendText="Satisfied"></CircularGaugeRange>
                    <CircularGaugeRange Start="6" End="8" StartWidth="40" EndWidth="40" Color="#FFDD00" Radius="90%" LegendText="Good"></CircularGaugeRange>
                    <CircularGaugeRange Start="8" End="10" StartWidth="40" EndWidth="40" Color="#30B32D" Radius="90%" LegendText="Excellent"></CircularGaugeRange>
                </CircularGaugeRanges>
                <CircularGaugeTooltipSettings Enable="true">
                    <TooltipTemplate>
                        <div class="satisfaction-tooltip">Current Score: @SatisfactionScore </div>
                    </TooltipTemplate>
                </CircularGaugeTooltipSettings>
                <CircularGaugePointers>
                    <CircularGaugePointer Value="7.5" Radius="80%" NeedleEndWidth="2" PointerWidth="5">
                        <CircularGaugeCap Radius="8">
                            <CircularGaugeCapBorder Width="2"></CircularGaugeCapBorder>
                        </CircularGaugeCap>
                    </CircularGaugePointer>
                    @foreach (var markerValue in RangeMarkerValues)
                    {
                        <CircularGaugePointer Type="PointerType.Marker" 
                                            MarkerShape="GaugeShape.Rectangle" 
                                            MarkerWidth="40" 
                                            MarkerHeight="0.5" 
                                            Radius="78%" 
                                            Value="@markerValue" 
                                            Color="#0477c2">
                            <CircularGaugePointerAnimation Enable="false"></CircularGaugePointerAnimation>
                        </CircularGaugePointer>
                    }
                </CircularGaugePointers>
                <CircularGaugeAnnotations>
                    <CircularGaugeAnnotation Angle="179" ZIndex="1" Radius="15%">
                        <ContentTemplate>
                            <div class="score-annotation">@SatisfactionScore</div>
                        </ContentTemplate>
                    </CircularGaugeAnnotation>
                </CircularGaugeAnnotations>
            </CircularGaugeAxis>
        </CircularGaugeAxes>
    </SfCircularGauge>
</div>

<style>
    .satisfaction-tooltip {
        font-size: 18px;
        background: white;
        color: #595959;
        border: 1px solid #e8e8e8;
    }
    
    .score-annotation {
        font-size: 16px;
        margin-top: 5px;
        margin-left: -2px;
        font-family: inherit;
    }
</style>

@code {
    public Theme Theme { get; set; }
    public string FontWeight = "500";
    public double SatisfactionScore { get; set; } = 7.5;
    public List<double> RangeMarkerValues { get; set; } = new List<double> { 6.5, 9.5 };
    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (Theme == Theme.Bootstrap5 || Theme == Theme.Bootstrap5Dark)
        {
            FontWeight = "500";
        }
        else if (Theme == Theme.Fluent || Theme == Theme.FluentDark || Theme == Theme.Fluent2 || Theme == Theme.Fluent2Dark || Theme == Theme.Fluent2HighContrast)
        {
            FontWeight = "600";
        }
        else
        {
            FontWeight = "normal";
        }
    }    
}