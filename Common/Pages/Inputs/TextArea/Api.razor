@page "/TextArea/Api"

@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>
        This example demonstrates the api functionalities of the <b>TextArea</b> control. You can customize the appearance and
        behaviour of textarea component by choosing the corresponding option from the property panel.
    </p>
</SampleDescription>
<ActionDescription>
    <p>The TextArea has the options to customize the appearance and behaviour of the component dynamically by updating
        the following properties:</p>
    <ul>
        <li>Change the number of rows and columns of textarea by updating <b>RowCount</b> and <b>ColumnCount</b> options.</li>
        <li>To make the textarea ReadOnly, check the <b>ReadOnly</b> option.</li>
        <li>Disable the textarea by check the <b>Disabled</b> option.</li>
        <li>Set the maximum length of characters that can be entered in textarea by customizing the <b>MaxLength</b> option.
        </li>
        <li>To make the clear button visible, check the <b>ShowClearButton</b> option.</li>
    </ul>
</ActionDescription>

<div class="col-lg-12">
    <div class="col-lg-8 control-section sb-property-border">
        <div class="control-wrapper">
            <SfTextArea Placeholder="Enter your comments" ResizeMode="Syncfusion.Blazor.Inputs.Resize.None" FloatLabelType="FloatLabelType.Auto" ShowClearButton="@_showClearButton" RowCount="@Row"
                         ColumnCount="@Column" MaxLength="@MaxLength" Disabled="@CheckDisabled" ReadOnly="@CheckReadonly" ></SfTextArea>
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <div class="property-panel-section">
            <div class="property-panel-header">Properties</div>
            <div class="property-panel-content">
                <table id="property" title="Properties" class="api-property">
                    <tr>
                        <td>RowCount</td>
                        <td>
                            <SfNumericTextBox TValue="int" Value="@RowValue" Min="1">
                                <NumericTextBoxEvents TValue="int" ValueChange="@ValueChangeHandler2"></NumericTextBoxEvents>
                            </SfNumericTextBox></td>
                    </tr>
                    <tr>
                        <td>ColumnCount</td>
                        <td>
                            <SfNumericTextBox TValue="int" Value="@ColumnValue" Min="1">
                                <NumericTextBoxEvents TValue="int" ValueChange="@ValueChangeHandler3"></NumericTextBoxEvents>
                            </SfNumericTextBox></td>
                    </tr>
                    <tr>
                        <td>Disabled</td>
                        <td><SfCheckBox ValueChange="OnEnabledChange" TChecked="bool"></SfCheckBox></td>
                    </tr>
                    <tr>
                        <td>ReadOnly</td>
                        <td><SfCheckBox ValueChange="OnReadonlyChange" TChecked="bool"></SfCheckBox></td>
                    </tr>
                    <tr>
                        <td>MaxLength</td>
                        <td>
                            <SfNumericTextBox TValue="int" Value="@MaxLengthValue" Min="-1">
                                <NumericTextBoxEvents TValue="int" ValueChange="@ValueChangeHandler"></NumericTextBoxEvents>
                            </SfNumericTextBox></td>
                    </tr>
                    <tr>
                        <td>ShowClearButton</td>
                        <td><SfCheckBox ValueChange="OnClearChange" TChecked="bool"></SfCheckBox></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>

@code {
    public bool CheckDisabled { get; set; } = false;
    public bool CheckReadonly { get; set; } = false;
    public int MaxLength { get; set; } = -1;
    public int MaxLengthValue { get; set; } = -1;
    public int Row { get; set; } = 2;
    public int RowValue { get; set; } = 2;
    public int Column { get; set; } = 20;
    public int ColumnValue { get; set; } = 20;
    private bool _showClearButton { get; set; } = false;

    public void OnEnabledChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        this.CheckDisabled = args.Checked;
    }

    public void OnClearChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        this._showClearButton = args.Checked;
    }

    public void OnReadonlyChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        this.CheckReadonly = args.Checked;
    }

    private void ValueChangeHandler(Syncfusion.Blazor.Inputs.ChangeEventArgs<int> args)
    {
        MaxLengthValue = (int)args.Value;
        StateHasChanged();
        this.MaxLength = args.Value;
    }

    private void ValueChangeHandler2(Syncfusion.Blazor.Inputs.ChangeEventArgs<int> args)
    {
        RowValue = (int)args.Value;
        StateHasChanged();
        this.Row = args.Value;
    }

    private void ValueChangeHandler3(Syncfusion.Blazor.Inputs.ChangeEventArgs<int> args)
    {
        ColumnValue = (int)args.Value;
        StateHasChanged();
        this.Column = args.Value;
    }
}

<style>
    .control-section {
        min-height: 370px;
    }

    .control-wrapper {
        max-width: 250px;
        margin: 0 auto;
        padding: 40px 0px 0px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }

    .property-panel-header {
        padding-top: 22px;
        padding-bottom: 20px;
        font-weight: 600;
        font-size: 15px;
    }

    .property-panel-section {
        padding-left: 12px;
    }

    .sb-property-border {
        border-right: 1px solid #D7D7D7;
    }

    .property-panel-table td {
        width: 50%;
        margin-top: 3px;
    }

    .property-panel-table {
        width: 100%;
    }

    .property-panel-table div {
        padding-left: 10px;
        padding-top: 10px;
    }

    .property-panel-content table.api-property tr td {
        font-size: 14px;
        padding: 5px;
    }

    .api-property.property-panel-table div.api {
        padding-left: 0px;
    }
</style>
