@page "/File-Upload/Preload-Files"

@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This example demonstrates how to pre-load the files of the File Upload component. The already uploaded files are configured in file list to view and remove them.</p>
</SampleDescription>
<ActionDescription>
    <p>The File Upload component allows to load initial list of files which are already uploaded in the server. The preload files are useful to view and remove from server.</p>
</ActionDescription>

<div class="col-lg-12">
    <div class="col-lg-8 control-section sb-property-border">
        <div class="control-wrapper">
            <SfUploader @ref="UploaderObj">
                <UploaderFiles>
                    <UploaderUploadedFiles Name="Nature" Size=500000 Type=".png"></UploaderUploadedFiles>
                    <UploaderUploadedFiles Name="TypeScript Succinctly" Size=12000 Type=".pdf"></UploaderUploadedFiles>
                    <UploaderUploadedFiles Name="ASP.NET Webhooks" Size="500000" Type=".docx"></UploaderUploadedFiles>
                </UploaderFiles>
                <UploaderAsyncSettings SaveUrl="http://localhost:63028/api/FileUploader/Save" RemoveUrl="http://localhost:63028/api/FileUploader/Remove"></UploaderAsyncSettings>
            </SfUploader>
        </div>
    </div>
    <div class="col-lg-4">
        <div class='property-panel-section'>
            <div class="property-panel-header">Properties</div>
            <div class="property-panel-content">
                <SfButton @onclick="@ClearFiles">Clear All</SfButton>
            </div>
        </div>
    </div>
</div>

<style>
    .control-section {
    min-height: 370px;
    }

    .control-wrapper {
    max-width: 400px;
    margin: 0 auto;
    padding: 10px 0px 0px;
    }

    .property-panel-content {
    padding: 0px 0px 20px 0px;
    }

    .property-panel-content:last-child {
    padding: 0px 0px 40px 0px;
    }
</style>

@code {
    public SfUploader? UploaderObj;

    private void ClearFiles()
    {
        if (this.UploaderObj != null)
        {
            this.UploaderObj.ClearAllAsync();          
        }
    }
}