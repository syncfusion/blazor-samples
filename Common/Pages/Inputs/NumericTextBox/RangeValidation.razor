@page "/Numeric-TextBox/Range-Validation"

@using Syncfusion.Blazor.Inputs

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This example demonstrates the range validation functionalities of the Numeric Textbox. Change the Min, Max and Step values and click on apply button to change the property values in Numeric TextBox.</p>
</SampleDescription>
<ActionDescription>
    <p>The Numeric Textbox has the options to restrict the input value between a specific range using the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Inputs.NumericTextBoxModel-1.html#Syncfusion_Blazor_Inputs_NumericTextBoxModel_1_Min" target="_blank" aria-label="Class reference of Min property in NumericTextBox"> Min</a>, <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Inputs.NumericTextBoxModel-1.html#Syncfusion_Blazor_Inputs_NumericTextBoxModel_1_Max" target="_blank" aria-label="Class reference of Max property in NumericTextBox"> Max</a>, and <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Inputs.NumericTextBoxModel-1.html#Syncfusion_Blazor_Inputs_NumericTextBoxModel_1_StrictMode" target="_blank" aria-label="Class reference of StrictMode property in NumericTextBox"> StrictMode</a> properties.</p>
    <p>When you enable the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Inputs.NumericTextBoxModel-1.html#Syncfusion_Blazor_Inputs_NumericTextBoxModel_1_StrictMode" target="_blank" aria-label="Class reference of StrictMode property in NumericTextBox"> StrictMode</a> property, the value will automatically change within a range on passing the out-of-range values. When you disable the StrictMode property, the Numeric Textbox component allows the out-of-range value with the highlighted textbox to indicate the given value is wrong.</p>
    <p>In this demo, numeric textbox is restricted between 10 to 100 through the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Inputs.NumericTextBoxModel-1.html#Syncfusion_Blazor_Inputs_NumericTextBoxModel_1_Min" target="_blank" aria-label="Class reference of Min property in NumericTextBox"> Min</a> and <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Inputs.NumericTextBoxModel-1.html#Syncfusion_Blazor_Inputs_NumericTextBoxModel_1_Max" target="_blank" aria-label="Class reference of Max property in NumericTextBox"> Max</a> properties. So you can enter only the value between this range.</p>
    <p><b>See also</b></p>
    <ul>
        <li><a href="https://blazor.syncfusion.com/documentation/numeric-textbox/getting-started#range-validation" target="_blank">Blazor Numeric Textbox - Range Validation</a></li>
    </ul>
</ActionDescription>

<div class="col-lg-12">
    <div class="col-lg-8 control-section sb-property-border">
        <div class="control-wrapper">
            <label class="example-label">Numeric value</label>
            <SfNumericTextBox TValue="double?" Min="@SetMin" Max="@SetMax" Value=15 Step=@SetIncrement aria-label="Set numeric input value between 10 and 100"></SfNumericTextBox>
        </div>
    </div>
    <div class="col-lg-4">
        <div class='property-panel-section'>
            <div class="property-panel-header">Properties</div>
            <div class="property-panel-content">
                <label class="example-label">Set minimum value</label>
                <SfNumericTextBox TValue="double?" ShowSpinButton="@EnableSpinButton" Format="n0" @bind-Value="@MinValue"></SfNumericTextBox>
            </div>
            <div class="property-panel-content">
                <label class="example-label">Set maximum value</label>
                <SfNumericTextBox TValue="double?" ShowSpinButton="@EnableSpinButton" Format="n0" @bind-Value="@MaxValue"></SfNumericTextBox>
            </div>
            <div class="property-panel-content">
                <label class="example-label">Set increment step</label>
                <SfNumericTextBox TValue="double?" ShowSpinButton="@EnableSpinButton" Min="@StepMin" Format="n0" @bind-Value="@StepValue"></SfNumericTextBox>
            </div>
            <div class="property-panel-content">
                <button class="e-btn apply-limit e-primary" @onclick="@ApplyRange">Apply</button>
            </div>
        </div>
    </div>
</div>

@code{

    private double? SetMin { get; set; } = 10;
    private double? SetMax { get; set; } = 100;
    private double? SetIncrement { get; set; } = 1;
    private double? StepMin { get; set; } = 1;
    private double? MinValue = 10;
    private double? MaxValue = 100;
    private double? StepValue = 1;
    private bool EnableSpinButton { get; set; } = false;

    public void ApplyRange(Microsoft.AspNetCore.Components.Web.MouseEventArgs args)
    {
        SetMin = MinValue;
        SetMax = MaxValue;
        SetIncrement = (StepValue == null) ? 1 : StepValue;
    }
}

<style>
    .control-section {
        min-height: 375px;
    }

    .control-wrapper {
        max-width: 230px;
        margin: 0 auto;
        padding: 40px 0px 0px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }

    .property-panel-content {
        padding: 0px 0px 20px 0px;
    }

    .property-panel-content:last-child {
        padding: 0px 0px 40px 0px;
    }
</style>