@page "/Input-Mask/Custom-Mask"

@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns;

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This example demonstrates the custom mask functionalities of the MaskedTextBox component. Enter time value in meridiem format, and enter IP value in numeric format.</p>
</SampleDescription>
<ActionDescription>
    <p>The custom mask is achieved by the following ways:</p>
    <p><b>Custom characters:</b></p>
    <p>You can form the mask with any non-mask elements (literals), and you can configure the behavior of that non-mask element as mask element through the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Inputs.SfMaskedTextBox.html#Syncfusion_Blazor_Inputs_SfMaskedTextBox_CustomCharacters" target="_blank" aria-label="Class reference of CustomCharacters property in MaskedTextBox"> CustomCharacters</a> property.</p>
    <p>In this demo, the "Time" mask '99 : 99 >PM' contains the literals P and M, where it is configured to allow the inputs as 'P', 'A', 'p', 'a', and 'M', 'm'.</p>
    <p><b>Regular expression:</b></p>
    <p>Alternatively, you can use the regular expressions as mask element to validate the input of the particular input place.</p>
    <p> Here, in the "IP address" example, each character is masked by an regular expression to allow a particular range of values. </p>
    <p><b>See also</b></p>
    <ul>
        <li><a href="https://blazor.syncfusion.com/documentation/input-mask/mask-configuration/" target="_blank" aria-label="Blazor MaskedTextBox Mask Configuration documentation">Blazor MaskedTextBox - Mask Configuration</a></li>
    </ul>
</ActionDescription>

<div class="col-lg-12">
    <div class="col-lg-8 control-section sb-property-border">
        <div class="control-wrapper">
            <div class="example-content">
                <label class="example-label">Time (ex: 10:00 PM, 10:00 AM)</label>
                <SfMaskedTextBox Mask="00:00 >PM" PromptChar="@PromptCharacter" aria-label="Enter prompt character in the time format" CustomCharacters="@CustomMasks"></SfMaskedTextBox>
            </div>
            <div class="example-content">
                <label class="example-label">IP address (ex: 212.212.111.222)</label>
                <SfMaskedTextBox Mask="[0-2][0-9][0-9].[0-2][0-9][0-9].[0-2][0-9][0-9].[0-2][0-9][0-9]" aria-label="Enter IP address in the format: xxx.xxx.xxx.xxx" PromptChar="@PromptCharacter"></SfMaskedTextBox>
            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <div class='property-panel-section'>
            <div class="property-panel-header">Properties</div>
            <div class="property-panel-content">
                <label class="example-label">Choose a prompt character</label>
                <SfDropDownList TValue="string" TItem="PromptCharTypes" DataSource="@Data" @bind-Index="@Index">
                    <DropDownListEvents TItem="PromptCharTypes" TValue="string" ValueChange="@OnPromptCharChange"></DropDownListEvents>
                    <DropDownListFieldSettings Text="Text" Value="Id"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>
        </div>
    </div>
</div>

@code {
    public char PromptCharacter { get; set; } = '_';

    public class PromptCharTypes
    {
        public string? Id { get; set; }
        public char Text { get; set; }
    }
    private int? Index { get; set; } = 0;

    private List<PromptCharTypes> Data = new List<PromptCharTypes>()
    {
        new PromptCharTypes() { Id = "1", Text = '_' },
        new PromptCharTypes() { Id = "2", Text = '#' },
        new PromptCharTypes() { Id = "3", Text = '*' }
    };
    private void OnPromptCharChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, PromptCharTypes> args)
    {
        if (args.ItemData != null)
        {
            this.PromptCharacter = args.ItemData.Text;          
        }
    }
    public Dictionary<string, string> CustomMasks = new Dictionary<string, string>()
    {
        {"P" , "P,p,A,a" },
        {"M" , "m,M" }
    };
}

<style>
    .control-section {
        min-height: 370px;
    }

    .control-wrapper {
        max-width: 250px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }

    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }

    .property-panel-content,
    .example-content {
        padding: 0px 0px 20px 0px;
    }

    .property-panel-content:last-child,
    .example-content:last-child {
        padding: 0px 0px 40px 0px;
    }
</style>
