@page "/card/expand-card"

@inject IJSRuntime jsRuntime
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.Buttons
@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@
<SampleDescription>
    <p>This sample demonstrates the expansion of the Card.</p>
</SampleDescription>
<ActionDescription>
    <p>This Card shows the weather details of a city.</p>
</ActionDescription>

<div class="control-section">
    <div class='row e-card-layout'>
        <div class="col-lg-4">
            <SfCard>
                <CardHeader Title="Hong Kong" SubTitle="Mon, 12.30 PM, Mostly Sunny" />
                <CardContent>
                    <table style="margin-bottom: 10px;">
                        <tr>
                            <td>
                                <div class="TempClass">23°C</div>
                            </td>
                            <td>
                                <div class="TempImage TextCenter"></div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span class="RainImage"></span>
                                <span class="RainText">2% precipitation</span>
                            </td>
                        </tr>
                    </table>
                    @if (Expand)
                    {
                        <table style="border-collapse: separate; border-spacing: 0;">
                           @{
                               bool isFirst = true;
                           }
                           @foreach(var day in weekForecast)
                           {
                               if (isFirst)
                               {
                                   <tr class="DayContent" tabindex="0" @ref="WeekdayElementRef">
                                       <td>
                                            <div class="WeekDay">@day.Day</div>
                                       </td>
                                       <td>
                                            <div class="@(day.WeatherType)Image TextCenter" role="img" aria-label="@day.WeatherType weather"></div>
                                       </td>
                                       <td>
                                            <div class="MinMaxClass TextCenter"><b>@day.HighTemp°C</b> / @day.LowTemp°C</div>
                                       </td>
                                   </tr>
                                   isFirst = false;
                               }
                               else
                               {
                                   <tr class="DayContent" tabindex="0">
                                       <td>
                                            <div class="WeekDay">@day.Day</div>
                                       </td>
                                       <td>
                                            <div class="@(day.WeatherType)Image TextCenter" role="img" aria-label="@day.WeatherType weather"></div>
                                       </td>
                                       <td>
                                            <div class="MinMaxClass TextCenter"><b>@day.HighTemp°C</b> / @day.LowTemp°C</div>
                                       </td>
                                   </tr>
                               }
                           }
                        </table>
                    }
                </CardContent>
                <CardContent EnableSeparator="true"></CardContent>
                <CardFooter>
                    <CardFooterContent>
                        <SfButton CssClass="e-outline" @onclick="@ExpandHandler">@(Expand ? "Collapse" : "Expand")</SfButton>
                    </CardFooterContent>
                </CardFooter>
            </SfCard>
        </div>
    </div>
</div>

@code{
    private bool Expand = false;
    public ElementReference WeekdayElementRef;

    private class WeatherDay
    {
        public string Day{ get; set; }
        public string WeatherType{ get; set; }
        public int HighTemp{ get; set; }
        public int LowTemp{ get; set; }
    }

    private List<WeatherDay> weekForecast = new List<WeatherDay>
    {
        new WeatherDay{Day = "Monday", WeatherType = "Cloudy", HighTemp = 23, LowTemp = 12},
        new WeatherDay{Day = "Tuesday", WeatherType = "Sunny", HighTemp = 28, LowTemp = 15},
        new WeatherDay{Day = "Wednesday", WeatherType = "Sunny", HighTemp = 25, LowTemp = 20},
        new WeatherDay{Day = "Thursday", WeatherType = "Cloudy", HighTemp = 20, LowTemp = 12},
        new WeatherDay{Day = "Friday", WeatherType = "Sunny", HighTemp = 23, LowTemp = 15}
    };

    public async Task ExpandHandler()
    {
        Expand = !Expand;
        await Task.Delay(2);
        if (Expand)
        {
            try
            {
                await jsRuntime.InvokeVoidAsync("setFocusToElement", WeekdayElementRef);
            }
            catch
            {
                Console.WriteLine($"Failed to set focus: Button is not Clicked!");
            }
        }
    }
}

<style>
    .DayContent:focus {
        outline: none;
    }
    .DayContent:focus td {
        border-top: 1px solid black;
        border-bottom: 1px solid black;
    }
    .DayContent:focus td:first-child {
        border-left: 1px solid black;
        border-top-left-radius: 5px;
        border-bottom-left-radius: 5px;
    }
    .DayContent:focus td:last-child {
        border-right: 1px solid black;
        border-top-right-radius: 5px;
        border-bottom-right-radius: 5px;
    }
    .fluent-dark .DayContent:focus td,
    .fluent2-dark .DayContent:focus td,
    .fluent2-highcontrast .DayContent:focus td,
    .fabric-dark .DayContent:focus td,
    .material-dark .DayContent:focus td,
    .material3-dark .DayContent:focus td,
    .bootstrap-dark .DayContent:focus td,
    .bootstrap5-dark .DayContent:focus td,
    .tailwind-dark .DayContent:focus td,
    .tailwind3-dark .DayContent:focus td,
    .highcontrast .DayContent:focus td {
        border-color: #8a8886;
    }

    .WeekDay {
        padding-left: 7px;
    }
    
    .TempClass {
        font-size: 30px;
    }

    .TempImage {
        background-image: url(https://cdn.syncfusion.com/blazor/images/demos/chart/sunny.webp); 
        height: 40px;
        width: 40px;
        background-size: contain;
        background-repeat: no-repeat;
    }

    .SunnyImage {
        height: 40px;
        width: 40px;
            background-image: url(https://cdn.syncfusion.com/blazor/images/demos/chart/sunny.webp);
        }

    .CloudyImage {
        height: 40px;
        width: 40px;
        background-image: url(https://cdn.syncfusion.com/blazor/images/demos/chart/cloud.webp);
    }

    .e-card .e-card-header .e-card-header-caption .e-card-header-title {
        font-size: 25px;
        line-height: 32px;
    }

    .e-card .e-card-header .e-card-header-caption .e-card-sub-title {
        font-size: 16px;
        line-height: 20px;
    }

    .e-card .e-card-content {
        padding-top: 0px;
    }

    .RainText {
        color: blue;
    }

    .RainImage {
        height: 20px;
        width: 20px;
        background-image: url(https://cdn.syncfusion.com/blazor/images/demos/chart/cloud.webp);
    }

    .e-card-layout {
        display: flex;
        margin: auto;
        justify-content: center;
        align-items: center;
    }

    table {
        width: 100%;
    }

    .TextCenter {
        text-align: center;
    }
</style>
