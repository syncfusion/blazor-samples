@page "/chart-3d/stacked-column"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.Chart3D
@using ThemeHelper

@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@
<SampleDescription>
    <p>
        This example showcases a 3D stacked column chart that visualizes the steel production of countries, grouped by continent. The legend in the sample provides information about these series, making it easy to understand the data and its grouping.
    </p>
</SampleDescription>
<ActionDescription>
    <p>
        In this example, you can explore the rendering and configuration of a 3D stacked column chart. This type of chart stacks points in the series vertically, providing a visual representation of cumulative values.
        To customize the rendering of axis labels, the <code>AxisLabelRendering</code> event for the 3D chart can be triggered, allowing for precise control over label appearance. 
        Moreover, the <code>StackingGroup</code> property enables grouping of stacked collections based on category, offering flexibility in data organization.
    </p>
</ActionDescription>

<div class="control-section" align="center">
    <SfChart3D WallColor="transparent" EnableRotation="true" RotationAngle="7" TiltAngle="10" Depth="100" Width="@ChartWidth" Height="@ChartHeight" Title="Steel Production by Countries, Grouped by Continent" Theme="@CurrentTheme" AxisLabelRendering="OnAxisLabelRender">
        <Chart3DPrimaryXAxis ValueType="Syncfusion.Blazor.Chart3D.ValueType.Category" Interval="1"></Chart3DPrimaryXAxis>
        <Chart3DPrimaryYAxis Maximum="@YAxisMaximum" Interval="10"></Chart3DPrimaryYAxis>
        <Chart3DSeriesCollection>
            <Chart3DSeries DataSource="@AsiaSteelProductionIran" XName="Year" YName="Production" Name="Iran" StackingGroup="Asia" ColumnWidth="0.6" Type="Chart3DSeriesType.StackingColumn"></Chart3DSeries>
            <Chart3DSeries DataSource="@AsiaSteelProductionIndonesia" XName="Year" YName="Production" Name="Indonesia" StackingGroup="Asia" ColumnWidth="0.6" Type="Chart3DSeriesType.StackingColumn"></Chart3DSeries>
            <Chart3DSeries DataSource="@EuropeSteelProductionItaly" XName="Year" YName="Production" Name="Italy" StackingGroup="Europe" ColumnWidth="0.6" Type="Chart3DSeriesType.StackingColumn"></Chart3DSeries>
            <Chart3DSeries DataSource="@EuropeSteelProductionFrance" XName="Year" YName="Production" Name="France" StackingGroup="Europe" ColumnWidth="0.6" Type="Chart3DSeriesType.StackingColumn"></Chart3DSeries>
        </Chart3DSeriesCollection>
        <Chart3DTooltipSettings Enable="true" Format="${point.x} : <b>${point.y} Mmt"></Chart3DTooltipSettings>
        <Chart3DLegendSettings EnableHighlight="true"></Chart3DLegendSettings>
    </SfChart3D>
</div>

@code {
    private Theme CurrentTheme { get; set; }
    public string? ChartWidth { get; set; }
    public string ChartHeight { get; set; } = "400";
    public double YAxisMaximum { get; set; }
    
    public List<SteelProductionData> AsiaSteelProductionIran { get; set; } = new List<SteelProductionData>()
    {
        new SteelProductionData { Year = "2018", Production = 24.5 },
        new SteelProductionData { Year = "2019", Production = 25.6 },
        new SteelProductionData { Year = "2020", Production = 29.0 },
        new SteelProductionData { Year = "2021", Production = 28.5 },
        new SteelProductionData { Year = "2022", Production = 30.6 }
    };

    public List<SteelProductionData> AsiaSteelProductionIndonesia { get; set; } = new List<SteelProductionData>()
    {
        new SteelProductionData { Year = "2018", Production = 6.2 },
        new SteelProductionData { Year = "2019", Production = 15.6 },
        new SteelProductionData { Year = "2020", Production = 14.3 },
        new SteelProductionData { Year = "2021", Production = 9.3 },
        new SteelProductionData { Year = "2022", Production = 7.8 }
    };

    public List<SteelProductionData> EuropeSteelProductionItaly { get; set; } = new List<SteelProductionData>()
    {
        new SteelProductionData { Year = "2018", Production = 24.5 },
        new SteelProductionData { Year = "2019", Production = 23.2 },
        new SteelProductionData { Year = "2020", Production = 20.4 },
        new SteelProductionData { Year = "2021", Production = 23.2 },
        new SteelProductionData { Year = "2022", Production = 24.5 }
    };

    public List<SteelProductionData> EuropeSteelProductionFrance { get; set; } = new List<SteelProductionData>()
    {
        new SteelProductionData { Year = "2018", Production = 15.4 },
        new SteelProductionData { Year = "2019", Production = 21.1 },
        new SteelProductionData { Year = "2020", Production = 13.9 },
        new SteelProductionData { Year = "2021", Production = 11.6 },
        new SteelProductionData { Year = "2022", Production = 14.4 }
    };

    protected override void OnInitialized()
    {
        CurrentTheme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        ChartWidth = SampleService != null && SampleService.IsDevice ? "100%" : "75%";
        YAxisMaximum = SampleService != null && SampleService.IsDevice ? 50 : 60;
    }

    public void OnAxisLabelRender(Chart3DAxisLabelRenderEventArgs args)
    {
        if (args.Axis.Name == "PrimaryYAxis")
        {
            args.Text = $"{args.Text} Mmt";
        }
    }

    public class SteelProductionData
    {
        public string? Year { get; set; }
        public double Production { get; set; }
    }
}