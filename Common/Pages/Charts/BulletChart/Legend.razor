@page "/bullet-chart/legend"
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor
@inject NavigationManager NavigationManager
@using ThemeHelper

@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@

<SampleDescription>
    <p>A bullet chart with legend is shown in this example. In the chart, the legend is enabled to provide information about the target, range, and value.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render a bullet chart with legend. You can use <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.BulletChartLegendSettings.html" aria-label="Navigate to the class reference for bullet chart legend settings">BulletChartLegendSettings</a> property to customize the legend in the chart.</p>
    <p>More information about the legend can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/bullet-chart/legend" aria-label="Navigate to the documentation for Legend in bullet chart component">documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <div align="center">
        <SfBulletChart DataSource="@PackageDownloadData" ValueField="ActualValue" Theme="@ChartTheme" TargetField="TargetValue" Minimum="0" Maximum="30" Interval="5"
                       Title="Package Downloads" Subtitle="in Thousands" Width="@ChartWidth" Height="@ChartHeight">
            <BulletChartTooltip TValue="ChartData" Enable="true"></BulletChartTooltip>
            <BulletChartLegendSettings Visible="true"></BulletChartLegendSettings>
            <BulletChartRangeCollection>
                <BulletChartRange End="8" Color="#CA4218" Name="Poor"> </BulletChartRange>
                <BulletChartRange End="18" Color="#EFC820" Name="Avg"></BulletChartRange>
                <BulletChartRange End="30" Color="#599C20" Name="Good"></BulletChartRange>
            </BulletChartRangeCollection>
        </SfBulletChart>
    </div>
</div>
<style>
    .control-section, .sb-content-section {
        min-height: auto !important;
        height: auto !important;
    }
</style>
@code{
    public bool IsLegendVisible { get; set; } = true;

    public class ChartData
    {
        public double ActualValue { get; set; }
        public double[]? TargetValue { get; set; }
    }

    public List<ChartData> PackageDownloadData { get; set; } = new List<ChartData>
    {
        new ChartData { ActualValue = 25, TargetValue = new double[] { 20, 26, 28 } }
    };

    public string? CurrentUri { get; set; }
    public Theme ChartTheme { get; set; }
    public string ChartHeight { get; set; } = "160";
    public string ChartWidth { get; set; } = "70%";

    protected override void OnInitialized()
    {
        AdjustChartDimensionsForDevice();
        ChartTheme=ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }

    public void AdjustChartDimensionsForDevice()
    {
        if (SampleService != null && SampleService.IsDevice)
        {
            ChartWidth = "100%";
            ChartHeight = "200";
        }
    }
}
