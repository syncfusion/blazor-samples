@page "/bullet-chart/bar-customization"
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor
@inject NavigationManager NavigationManager
@using ThemeHelper
@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@

<SampleDescription>
    <p>This example shows a bullet chart with different customization options for the feature bar and a comparative bar.</p>
</SampleDescription>

<ActionDescription>
    <p>The Blazor Bullet Chart component allows you to configure the feature bar and comparative bar using <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.SfBulletChart-1.html#Syncfusion_Blazor_Charts_SfBulletChart_1_ValueFill" aria-label="Navigate to the ValueFill property reference for bullet chart component">ValueFill</a>, <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.SfBulletChart-1.html#Syncfusion_Blazor_Charts_SfBulletChart_1_ValueHeight" aria-label="Navigate to the ValueHeight property reference for bullet chart component">ValueHeight</a>, <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.SfBulletChart-1.html#Syncfusion_Blazor_Charts_SfBulletChart_1_TargetWidth" aria-label="Navigate to the TargetWidth property reference for bullet chart component">TargetWidth</a> and <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.SfBulletChart-1.html#Syncfusion_Blazor_Charts_SfBulletChart_1_TargetColor" aria-label="Navigate to the TargetColor property reference for bullet chart component">TargetColor</a>.</p>
    <p>Tooltip is enabled in this example. To see the tooltip in action, hover a feature bar or comparative bar on the bullet chart.</p>
    <p>More information about the target bar can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/bullet-chart/target-bar" aria-label="Navigate to the documentation for target bar in bullet chart component">documentation section</a>.</p>
</ActionDescription>

<div class="row" style="height:auto">
    <div class="control-section col-md-8">
        <SfBulletChart DataSource="@BulletChartData" Type="@Type" ValueField="ActualValue" Theme="@SelectedTheme" TargetField="TargetValue" Minimum="0" Maximum="300" Interval="50"
                       ValueFill="@ValueFillColor" TargetColor="@TargetFillColor" Title="New Customers" Subtitle="in Thousands" TitlePosition="@(SampleService != null && SampleService.IsDevice ? TextPosition.Top : TextPosition.Left)" >
            <BulletChartTooltip TValue="ChartData" Enable="true"></BulletChartTooltip>
            <BulletChartRangeCollection>
                <BulletChartRange End="150"> </BulletChartRange>
                <BulletChartRange End="250"></BulletChartRange>
                <BulletChartRange End="300"></BulletChartRange>
            </BulletChartRangeCollection>
        </SfBulletChart>
    </div>
    <div class="col-md-4 property-section">
        <table style="width: 100%">
            <tr style="height:50px"><th>Properties</th></tr>
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div>Actual Value:</div>
                </td>
                <td style="width: 50%;">
                    <div>
                        <SfNumericTextBox TValue="int?" Value="@SelectedActualValue" Max=300 Min=0 Step=10>
                                <NumericTextBoxEvents TValue="int?" ValueChange="OnChangeActualValue" />
                        </SfNumericTextBox>
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div>Target Value:</div>
                </td>
                <td style="width: 50%;">
                    <div>
                        <SfNumericTextBox TValue="int?" Value="@SelectedTargetValue" Max=300 Min=0 Step=10>
                                <NumericTextBoxEvents TValue="int?" ValueChange="OnChangeTargetValue" />
                        </SfNumericTextBox>
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 50%">
                    Feature Bar Type:
                </td>
                <td style="width: 50%;">
                    <SfDropDownList TValue="string" TItem="Data" DataSource="@_dropDownData" @bind-Value="@Value">
                        <DropDownListFieldSettings Value="Id"></DropDownListFieldSettings>
                        <DropDownListEvents TValue="string" TItem="Data" ValueChange="OnChangeType"></DropDownListEvents>
                    </SfDropDownList>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div>Feature Bar Color:</div>
                </td>
                <td style="width: 50%;">
                    <div>
                        <SfColorPicker Value="@ValueFillColor" Mode="ColorPickerMode.Palette" ShowButtons="false" ValueChange="OnFeatureBarColor"></SfColorPicker>
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div>Target Color:</div>
                </td>
                <td style="width: 50%;">
                    <div>
                        <SfColorPicker Value="@TargetFillColor" Mode="ColorPickerMode.Palette" ShowButtons="false" ValueChange="OnTargetColorChange"></SfColorPicker>
                    </div>
                </td>
            </tr>
        </table>
    </div>
</div>
<style>
    .control-section, .sb-content-section { 
        min-height: auto !important;
        height: auto !important;
    }
</style>

@code{
    public int SelectedTargetValue { get; set; } = 250;
    public int SelectedActualValue { get; set; } = 270;
    public FeatureType Type { get; set; }
    public string ValueFillColor { get; set; } = "#000000";
    public string TargetFillColor { get; set; } = "#000000";
    public string Value = "Rect";

    public void OnFeatureBarColor(ColorPickerEventArgs args)
    {
        ValueFillColor = args.CurrentValue.Hex;
    }

    public void OnTargetColorChange(ColorPickerEventArgs args)
    {
        TargetFillColor = args.CurrentValue.Hex;
    }


    public void OnChangeActualValue(Syncfusion.Blazor.Inputs.ChangeEventArgs<int?> args)
    {
        SelectedActualValue = Convert.ToInt32(args.Value);
        BulletChartData = new List<ChartData>
        {
            new ChartData { ActualValue = SelectedActualValue, TargetValue = SelectedTargetValue }
        };
    }

    public void OnChangeTargetValue(Syncfusion.Blazor.Inputs.ChangeEventArgs<int?> args)
    {
        SelectedTargetValue = Convert.ToInt32(args.Value);
        BulletChartData = new List<ChartData>
        {
            new ChartData { ActualValue = SelectedActualValue, TargetValue = SelectedTargetValue }
        };
    }

    public void UpdateChartData()
    {
        BulletChartData = new List<ChartData>
        {
            new ChartData { ActualValue = SelectedActualValue, TargetValue = SelectedTargetValue }
        };
    }

    // Class for Dropdown Data
    public class Data
    {
        public string? Id { get; set; }
    }

// Dropdown data options
    private List<Data> _dropDownData = new List<Data>()
    {
        new Data() { Id = "Rect" },
        new Data() { Id = "Dot" }
    };

    private void OnChangeType(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, Data> args)
    {
        this.Type = (FeatureType)Enum.Parse(typeof(FeatureType), args.Value, true);
        StateHasChanged();
    }

    public class ChartData
    {
        public int ActualValue { get; set; }
        public int TargetValue { get; set; }
    }

    public List<ChartData> BulletChartData = new List<ChartData>
    {
        new ChartData { ActualValue = 270, TargetValue = 250 }
    };

    public Theme SelectedTheme { get; set; }

    protected override void OnInitialized()
    {
// Theme initialization based on the current URI
        SelectedTheme= ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }

}
