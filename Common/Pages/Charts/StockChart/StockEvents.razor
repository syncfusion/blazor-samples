@page "/stock-chart/stock-events"
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@using ThemeHelper
@using System.Net.Http.Json
@inject HttpClient Http
@*Hidden:Lines*@
@inherits SampleBaseComponent;


@*End:Hidden*@

<SampleDescription>
    <p> This <a target="_blank" href="https://www.syncfusion.com/blazor-components/blazor-stock-chart" aria-label="Blazor Stock Chart">Blazor Stock Chart</a> example visualizes the AAPL stock price with spline chart. Crosshair show the information about the data and period.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure a stock chart with <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.StockChartStockEvent.html" aria-label="StockEvents">StockEvents</a> to mark specific events such as market open and close, highest or lowest price reached, year/quarter start and end on a chart for a specific date.</p>
    <p>
        <code>Crosshair</code> is enabled in this example. To see the crosshair in action, hover the chart or tap on touch enabled devices.
    </p>
    <p>
        More information about the stock events can be found in this
        <a target="_blank" href="https://blazor.syncfusion.com/documentation/stock-chart/stock-events" aria-label="documentation section" >documentation section</a>.
    </p>
</ActionDescription>

@if (StockChartDataSource == null)
{
    <div class="stockchart-loader">
    </div>
}
else
{
    <div class="@LoadingClass">
    </div>
    <div class="@ChartContainerClass">
        <SfStockChart Title="AAPL Stock Price" IndicatorType="@IndicatorTypes" Theme="@CurrentTheme" TrendlineType="@TrendlineTypes" SeriesType="@ChartSeriesTypes">
            <StockChartEvents OnLoaded="@OnChartLoaded"></StockChartEvents>
            <StockChartPrimaryXAxis>
                <StockChartAxisMajorGridLines Width="0"></StockChartAxisMajorGridLines>
                <StockChartAxisCrosshairTooltip Enable="true"></StockChartAxisCrosshairTooltip>
            </StockChartPrimaryXAxis>
            <StockChartPrimaryYAxis>
                <StockChartAxisLineStyle Width="0"></StockChartAxisLineStyle>
                <StockChartAxisMajorTickLines Width="0"></StockChartAxisMajorTickLines>
                <StockChartAxisCrosshairTooltip Enable="true"></StockChartAxisCrosshairTooltip>
            </StockChartPrimaryYAxis>
            <StockChartStockEvents>
                <StockChartStockEvent Date="new DateTime(2011, 03, 01)" Text="Q2" Description="2012 Quarter2" Type="FlagType.Flag" Background="#6c6d6d">
                    <StockChartStockEventsBorder Color="#6c6d6d"></StockChartStockEventsBorder>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2012, 03, 20)" Text="Open" Description="Markets opened" Background="#f48a21">
                    <StockChartStockEventsBorder Color="#f48a21"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2012, 06, 01)" Text="Q3" Description="2013 Quarter3" Type="FlagType.Flag" Background="#6c6d6d">
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                    <StockChartStockEventsBorder Color="#6c6d6d"></StockChartStockEventsBorder>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2012, 09, 01)" Text="Q4" Description="2013 Quarter4" Type="FlagType.Flag" Background="#6c6d6d">
                    <StockChartStockEventsBorder Color="#6c6d6d"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2013, 07, 30)" Text="G" Description="Google Stock" Background="#f48a21">
                    <StockChartStockEventsBorder Color="#f48a21"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2013, 10, 01)" Text="Y" Description="Yahoo Stock" Type="FlagType.Square" Background="#841391">
                    <StockChartStockEventsBorder Color="#841391"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2013, 12, 04)" Text="Y2" Description="Year 2013" Type="FlagType.Pin" Background="#6322e0" ShowOnSeries="false">
                    <StockChartStockEventsBorder Color="#6322e0"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2014, 03, 01)" Text="Q2" Description="2013 Quarter2" Type="FlagType.Flag" Background="#6c6d6d">
                    <StockChartStockEventsBorder Color="#6c6d6d"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2014, 03, 20)" Text="Q2" Description="Surge in Stocks" Type="FlagType.ArrowUp" Background="#3ab0f9">
                    <StockChartStockEventsBorder Color="#3ab0f9"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2014, 06, 01)" Text="Q3" Description="2013 Quarter3" Type="FlagType.Flag" Background="#6c6d6d">
                    <StockChartStockEventsBorder Color="#6c6d6d"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2014, 09, 01)" Text="Q4" Description="2013 Quarter4" Type="FlagType.Flag" Background="#6c6d6d">
                    <StockChartStockEventsBorder Color="#6c6d6d"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2014, 12, 03)" Text="Y3" Description="Year 2014" Type="FlagType.Pin" Background="#6322e0" ShowOnSeries="false">
                    <StockChartStockEventsBorder Color="#6322e0"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2016, 03, 01)" Text="Q2" Description="2014 Quarter2" Type="FlagType.Flag" Background="#6c6d6d">
                    <StockChartStockEventsBorder Color="#6c6d6d"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2016, 06, 01)" Text="Q3" Description="2014 Quarter3" Background="#f48a21">
                    <StockChartStockEventsBorder Color="#f48a21"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2016, 09, 01)" Text="Q4" Description="2014 Quarter4" Type="FlagType.Flag" Background="#f48a21">
                    <StockChartStockEventsBorder Color="#f48a21"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2016, 12, 01)" Text="Y4" Description="Year 2015" Type="FlagType.Pin" ShowOnSeries="false" Background="#6322e0">
                    <StockChartStockEventsBorder Color="#6322e0"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2016, 02, 02)" Text="End" Description="Markets closed" Type="FlagType.ArrowDown" Background="#3ab0f9">
                    <StockChartStockEventsBorder Color="#3ab0f9"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2015, 01, 07)" Text="A" Description="Amazon Stock" Background="#f48a21">
                    <StockChartStockEventsBorder Color="#f48a21"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2015, 02, 02)" Text="Q1" Description="AAPL Stock" Type="FlagType.Text" Background="#dd3c9f">
                    <StockChartStockEventsBorder Color="#dd3c9f"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
                <StockChartStockEvent Date="new DateTime(2015, 03, 12)" Text="Close" Description="Markets closed" Background="#f48a21">
                    <StockChartStockEventsBorder Color="#f48a21"></StockChartStockEventsBorder>
                    <StockChartStockEventsTextStyle Color="white"></StockChartStockEventsTextStyle>
                </StockChartStockEvent>
            </StockChartStockEvents>
            <StockChartCrosshairSettings Enable="true"></StockChartCrosshairSettings>
            <StockChartSeriesCollection>
                <StockChartSeries DataSource="@StockChartDataSource" XName="x" YName="high" Type="ChartSeriesType.Spline" Name="google"></StockChartSeries>
            </StockChartSeriesCollection>
            <StockChartChartArea>
                <StockChartChartAreaBorder Width="0"></StockChartChartAreaBorder>
            </StockChartChartArea>
        </SfStockChart>
    </div>
    <style>
        .stockchart-loader {
            border: 6px solid #f3f3f3;
            border-top: 6px solid #7a0fff;
            width: 40px;
            height: 40px;
            position: absolute;
            top: 46%;
            left: 46%;
            border-radius: 50%;
            -webkit-animation: loader 2s linear infinite;
            animation: loader 2s linear infinite;
        }
        .stockchart-container {
            visibility: hidden;
        }

        div[id*="_stockChart_rangeSelector_leftTooltip"], div[id*="_stockChart_rangeSelector_rightTooltip"] {
            top: 10px !important;
        }

        div[id*="_selector_Secondary_Element"] {
            transform: translate(0px, @TranslateY) !important;
        }

        .e-tbar-btn {
            border-color: transparent !important;
        }
    </style>
}

@code{
    public List<TechnicalIndicators> IndicatorTypes { get; set; } = new List<TechnicalIndicators>();
    public List<TrendlineTypes> TrendlineTypes { get; set; } = new List<TrendlineTypes>();
    public List<ChartSeriesType> ChartSeriesTypes { get; set; } = new List<ChartSeriesType>();
    public ChartData[]? StockChartDataSource { get; set; }
    public string TranslateY { get; set; } = "-5px";
    
    public string LoadingClass { get; set; } = "stockchart-loader";
    public string ChartContainerClass { get; set; } = "stockchart-container";
    
    public Theme CurrentTheme { get; set; } = Theme.Bootstrap4;

    protected override async Task OnInitializedAsync()
    {
        SetTheme();
        StockChartDataSource = await Http.GetFromJsonAsync<ChartData[]>(NavigationManager.BaseUri + SampleService?.WebAssetsPath + "data/stock-chart/aapl.json");
    }

    void OnChartLoaded(StockChartEventArgs args)
    {
        LoadingClass = String.Empty;
        ChartContainerClass = String.Empty;
        StateHasChanged();
    }
    
    void SetTheme()
    {
        CurrentTheme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (CurrentTheme == Theme.Material3 || 
            CurrentTheme == Theme.Material3Dark || 
            CurrentTheme == Theme.Bootstrap4 || 
            CurrentTheme == Theme.Material || 
            CurrentTheme == Theme.MaterialDark)
        {
            TranslateY = "-7px";
        }
    }
    
    public class ChartData
    {
        public DateTime x { get; set; }
        public double open { get; set; }
        public double low { get; set; }
        public double close { get; set; }
        public double high { get; set; }
        public double volume { get; set; }
    }
}