@page "/stock-chart/stock-chart"
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor
@using ThemeHelper
@inject NavigationManager NavigationManager
@using System.Net.Http.Json
@inject HttpClient Http
@*Hidden:Lines*@
@inherits SampleBaseComponent;


@*End:Hidden*@

<SampleDescription>
    <p> This <a target="_blank" href="https://www.syncfusion.com/blazor-components/blazor-stock-chart">Blazor Stock Chart</a> example visualizes the AAPL stock price with candle chart. Tooltip and crosshair show the information about the data and period.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure the stock chart. The candle type series chart shows financial data and trends at equal intervals. The <a target="_blank" href="https://blazor.syncfusion.com/documentation/stock-chart/period-selector">Period Selector</a> and <a target="_blank" href="https://blazor.syncfusion.com/documentation/stock-chart/range-selector" aria-label="Range Selector">Range Selector</a> can be used to select a range with specified periods.</p>
    <p>
        Stock Chart provides support to 10 types of <a target="_blank" href="https://blazor.syncfusion.com/documentation/stock-chart/technical-indicators" aria-label="Technical Indicators"> Technical Indicators </a> namely <code>Accumulation Distribution</code>, <code>ATR</code>, <code>EMA</code>, <code>SMA</code>, <code>TMA</code>, <code>Momentum</code>, <code>MACD</code>, <code>RSI</code>, <code>Stochastic</code>, <code>Bollinger Band</code>. By using indicator dropdown box, add and remove the required indicator types.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover the chart or tap on it in touch enabled devices.
    </p>
    <p>
        More information about the stock charts can be found in this
        <a target="_blank" href="https://blazor.syncfusion.com/documentation/stock-chart/getting-started" aria-label="documentation section" >documentation section</a>.
    </p>
</ActionDescription>

@if (StockData == null)
{
    <div class="stock-chart-loader"></div>
}
else
{
    <div class="@LoaderClass"></div>
    <div class="@ChartContainerClass">
        <SfStockChart Title="AAPL Stock Price" IndicatorType="@IndicatorList" Theme="@CurrentTheme">
            <StockChartEvents OnLoaded="@OnChartLoaded"></StockChartEvents>
            <StockChartPrimaryXAxis>
                <StockChartAxisMajorGridLines Width="0"></StockChartAxisMajorGridLines>
                <StockChartAxisCrosshairTooltip Enable="true"></StockChartAxisCrosshairTooltip>
            </StockChartPrimaryXAxis>
            <StockChartPrimaryYAxis>
                <StockChartAxisLineStyle Width="0"></StockChartAxisLineStyle>
                <StockChartAxisMajorTickLines Width="0"></StockChartAxisMajorTickLines>
            </StockChartPrimaryYAxis>
            <StockChartTooltipSettings Enable="true"></StockChartTooltipSettings>
            <StockChartCrosshairSettings Enable="true"></StockChartCrosshairSettings>
            <StockChartSeriesCollection>
                <StockChartSeries DataSource="@StockData" Type="ChartSeriesType.Candle"></StockChartSeries>
            </StockChartSeriesCollection>
            <StockChartChartArea>
                <StockChartChartAreaBorder Width="0"></StockChartChartAreaBorder>
            </StockChartChartArea>
        </SfStockChart>
    </div>
    <style>
        .stock-chart-loader {
            border: 6px solid #f3f3f3;
            border-top: 6px solid #7a0fff;
            width: 40px;
            height: 40px;
            position: absolute;
            top: 46%;
            left: 46%;
            border-radius: 50%;
            -webkit-animation: loader 2s linear infinite;
            animation: loader 2s linear infinite;
        }

        .stock-chart-container {
            visibility: hidden;
        }

        div[id*="_stockChart_rangeSelector_leftTooltip"], div[id*="_stockChart_rangeSelector_rightTooltip"] {
            top: 10px !important;
        }

        div[id*="_selector_Secondary_Element"] {
            transform: translate(0px, @TranslateY) !important;
        }

        .e-tbar-btn {
            border-color: transparent !important;
        }
</style>
}

@code {
    private ChartData[]? StockData { get; set; }
    private string TranslateY { get; set; } = "-5px";
    private string LoaderClass { get; set; } = "stock-chart-loader";
    private string ChartContainerClass { get; set; } = "stock-chart-container";
    private Theme CurrentTheme { get; set; } = Theme.Bootstrap4;

    protected override async Task OnInitializedAsync()
    {
        SetThemeProperties();
        StockData = await Http.GetFromJsonAsync<ChartData[]>(NavigationManager.BaseUri + SampleService?.WebAssetsPath + "data/stock-chart/chart-data.json");
    }

    public class ChartData
    {
        public DateTime date { get; set; }
        public double open { get; set; }
        public double low { get; set; }
        public double close { get; set; }
        public double high { get; set; }
        public double volume { get; set; }
    }

    private void OnChartLoaded(StockChartEventArgs args)
    {
        LoaderClass = string.Empty;
        ChartContainerClass = string.Empty;
        StateHasChanged();
    }

    private List<TechnicalIndicators> IndicatorList { get; set; } = new List<TechnicalIndicators>
    {
        TechnicalIndicators.Ema,
        TechnicalIndicators.Tma,
        TechnicalIndicators.Sma,
        TechnicalIndicators.Momentum,
        TechnicalIndicators.Atr,
        TechnicalIndicators.BollingerBands
    };

    private void SetThemeProperties()
    {
        CurrentTheme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);

        if (CurrentTheme == Theme.Material3 || CurrentTheme == Theme.Material3Dark ||
            CurrentTheme == Theme.Bootstrap4 || CurrentTheme == Theme.Material ||
            CurrentTheme == Theme.MaterialDark)
        {
            TranslateY = "-7px";
        }
    }
}
