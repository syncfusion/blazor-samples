@page "/stock-chart/hide-period-selector"
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor
@inject NavigationManager NavigationManager
@using ThemeHelper
@using System.Net.Http.Json
@inject HttpClient Http
@*Hidden:Lines*@
@inherits SampleBaseComponent;


@*End:Hidden*@

<SampleDescription>
    <p>By hiding the period selector in the stock chart, this sample visualizes the AAPL stock price. The tooltip and crosshair display data and period information.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure stock chart to visualize the stock data. The <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.SfStockChart.html#Syncfusion_Blazor_Charts_SfStockChart_EnablePeriodSelector" aria-label="EnablePeriodSelector">EnablePeriodSelector</a> property allows to toggle the visibility of period selector.</p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover the chart or tap on it in touch enabled devices.
    </p>
    <p>
        More information about the series type can be found in this
        <a target="_blank" href="https://blazor.syncfusion.com/documentation/stock-chart/series-types" aria-label="documentation section" >documentation section</a>.
    </p>
</ActionDescription>


@if (StockChartData == null)
{
    <div class="stock-chart-loader"></div>
}
else
{
    <div class="@LoaderClass"></div>
    <div class="@ChartContainerClass">
        <SfStockChart Title="AAPL Stock Price" EnablePeriodSelector="false" Theme="@CurrentTheme">
            <StockChartEvents OnLoaded="@OnChartLoaded"></StockChartEvents>
            <StockChartPrimaryXAxis>
                <StockChartAxisMajorGridLines Width="0"></StockChartAxisMajorGridLines>
                <StockChartAxisCrosshairTooltip Enable="true"></StockChartAxisCrosshairTooltip>
            </StockChartPrimaryXAxis>
            <StockChartPrimaryYAxis>
                <StockChartAxisLineStyle Width="0"></StockChartAxisLineStyle>
                <StockChartAxisMajorTickLines Width="0"></StockChartAxisMajorTickLines>
            </StockChartPrimaryYAxis>
            <StockChartTooltipSettings Enable="true"></StockChartTooltipSettings>
            <StockChartCrosshairSettings Enable="true"></StockChartCrosshairSettings>
            <StockChartSeriesCollection>
                <StockChartSeries DataSource="@StockChartData" Type="ChartSeriesType.Area" Fill="@FillGradient"></StockChartSeries>
            </StockChartSeriesCollection>
            <StockChartChartArea>
                <StockChartChartAreaBorder Width="0"></StockChartChartAreaBorder>
            </StockChartChartArea>
        </SfStockChart>
    </div>
    <style>
    .stock-chart-loader {
        border: 6px solid #f3f3f3;
        border-top: 6px solid #7a0fff;
        width: 40px;
        height: 40px;
        position: absolute;
        top: 46%;
        left: 46%;
        border-radius: 50%;
        -webkit-animation: loader 2s linear infinite;
        animation: loader 2s linear infinite;
    }

    .stock-chart-container {
        visibility: hidden;
    }

    div[id*="_stockChart_rangeSelector_leftTooltip"], div[id*="_stockChart_rangeSelector_rightTooltip"] {
        top: 10px !important;
    }

    div[id*="_selector_Secondary_Element"] {
        transform: translate(0px, @TranslateY) !important;
    }

    .e-tbar-btn {
        border-color: transparent !important;
    }
</style>
}

@code {
    private ChartData[]? StockChartData { get; set; }
    private string TranslateY { get; set; } = "-5px";
    private string LoaderClass { get; set; } = "stock-chart-loader";
    private string ChartContainerClass { get; set; } = "stock-chart-container";
    private string? FillGradient { get; set; }
    private Theme CurrentTheme { get; set; }

    private string GradientBaseUrl { get; set; } = "url";
    private string? CurrentUri { get; set; }

    protected override async Task OnInitializedAsync()
    {
        SetTheme();
        StockChartData = await Http.GetFromJsonAsync<ChartData[]>(NavigationManager.BaseUri + SampleService?.WebAssetsPath + "data/stock-chart/chart-data.json");

        if (CurrentTheme == Theme.Material3 || CurrentTheme == Theme.Material3Dark ||
            CurrentTheme == Theme.Bootstrap4 || CurrentTheme == Theme.Material ||
            CurrentTheme == Theme.MaterialDark)
        {
            TranslateY = "-7px";
        }
    }

    public class ChartData
    {
        public DateTime date { get; set; }
        public double open { get; set; }
        public double low { get; set; }
        public double close { get; set; }
        public double high { get; set; }
        public double volume { get; set; }
    }

    private void OnChartLoaded(StockChartEventArgs args)
    {
        LoaderClass = string.Empty;
        ChartContainerClass = string.Empty;
        StateHasChanged();
    }

    private void SetTheme()
    {
        CurrentUri = NavigationManager.Uri;
        CurrentTheme = ThemeHelper.GetCurrentTheme(CurrentUri);
        if (CurrentUri.Contains("material3"))
        {
            FillGradient = $"{GradientBaseUrl}(#{CurrentTheme.ToString().ToLowerInvariant()}-gradient-chart)";
        }
        else if (CurrentUri.Contains("material"))
        {
            FillGradient = $"{GradientBaseUrl}(#{CurrentTheme.ToString().ToLowerInvariant()}-gradient-chart)";
        }
        else if (CurrentUri.Contains("fabric"))
        {
            FillGradient = $"{GradientBaseUrl}(#fabric-gradient-chart)";
        }
        else if (CurrentUri.Contains("bootstrap5"))
        {
            FillGradient = $"{GradientBaseUrl}(#{CurrentTheme.ToString().ToLowerInvariant()}-gradient-chart)";
        }
        else if (CurrentUri.Contains("fluent2"))
        {
            if (CurrentUri.Contains("highcontrast"))
            {
                FillGradient = $"{GradientBaseUrl}(#fluent2highcontrast-gradient-chart)";
            }
            else
            {
                FillGradient = $"{GradientBaseUrl}(#{CurrentTheme.ToString().ToLowerInvariant()}-gradient-chart)";
            }
        }
        else if (CurrentUri.Contains("fluent"))
        {
            FillGradient = $"{GradientBaseUrl}(#{CurrentTheme.ToString().ToLowerInvariant()}-gradient-chart)";
        }
        else if (CurrentUri.Contains("bootstrap4"))
        {
            FillGradient = $"{GradientBaseUrl}(#bootstrap4-gradient-chart)";
        }
        else if (CurrentUri.Contains("bootstrap"))
        {
            FillGradient = $"{GradientBaseUrl}(#{CurrentTheme.ToString().ToLowerInvariant()}-gradient-chart)";
        }
        else if (CurrentUri.Contains("highcontrast"))
        {
            FillGradient = $"{GradientBaseUrl}(#highcontrast-gradient-chart)";
        }
        else if (CurrentUri.Contains("tailwind3"))
        {
            FillGradient = $"{GradientBaseUrl}(#tailwind3-gradient-chart)";
        }
        else
        {
            FillGradient = $"{GradientBaseUrl}(#bootstrap4-gradient-chart)";
        }
    }
}
<style>
    #control-container {
        padding: 0px !important;
    }

    #material-gradient-chart stop {
        stop-color: #00bdae;
    }
    
    #materialdark-gradient-chart stop {
        stop-color: #9ECB08;
    }

    #fabric-gradient-chart stop {
        stop-color: #4472c4;
    }

    #bootstrap-gradient-chart stop {
        stop-color: #a16ee5;
    }

    #bootstrap4-gradient-chart stop {
        stop-color: #a16ee5;
    }
    
    #bootstrap5-gradient-chart stop {
        stop-color: #FD7E14;
    }

    #bootstrap5dark-gradient-chart stop {
        stop-color: #FD7E14;
    }
	
	#fluent-gradient-chart stop {
        stop-color: #1AC9E6;
    }

    #fluentdark-gradient-chart stop {
        stop-color: #1AC9E6;
    }

    #highcontrast-gradient-chart stop {
        stop-color: #79ECE4;
    }

    #material3-gradient-chart stop {
        stop-color: #6355C7;
    }

    #material3dark-gradient-chart stop {
        stop-color: #4EAAFF;
    }

    .chart-gradient stop[offset="0"] {
        stop-opacity: 0.9;
    }

    .chart-gradient stop[offset="1"] {
        stop-opacity: 0.3;
    }
    #tailwind3-gradient-chart stop {
        stop-color: #2F4074;
    }
    
    #tailwind3dark-gradient-chart stop {
        stop-color: #8029F1;
    }

    #fluent2-gradient-chart stop {
        stop-color: #6200EE;
    }

    #fluent2dark-gradient-chart stop {
        stop-color: #9BB449;
    }

    #fluent2highcontrast-gradient-chart stop {
        stop-color: #9BB449;
    }
</style>
<svg style="height: 0">
    <defs>
        <linearGradient id="material-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="materialdark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fabric-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap4-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap5-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap5dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluent-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluentdark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="highcontrast-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
         <linearGradient id="tailwind3-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="tailwind3dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="material3-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="material3dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluent2-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluent2dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluent2highcontrast-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
    </defs>
</svg>