@page "/chart/percent-stacked-area"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@

<SampleDescription>
    <p>This <a target='_blank' href='https://www.syncfusion.com/blazor-components/blazor-charts/chart-types/100-stacked-area-chart' aria-label="Navigate to explore the Blazor 100% Stacked Area Chart">Blazor 100% Stacked Area Chart</a> example visualizes the global electricity production by source with default 100% stacked area series. A legend in the sample shows information about the series.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure the 100% stacked area chart. This chart visualizes data with y-values stacked, ensuring that the cumulative proportion of each stacked element always totals 100%.</p>
    <p><code>Tooltip</code> is enabled in this example. To see a tooltip in action, hover over or tap on the chart.</p>
    <p>More information about the 100% stacked area series can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/chart/chart-types/stack-area' aria-label="Navigate to the documentation for stack-area in chart component">documentation section</a>.</p>
</ActionDescription>

<div class="control-section" align='center'>
    <SfChart Title="Global Electricity Production by Source" SubTitle="Source: ourworldindata.org" Width="@Width" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartMargin Bottom="12"></ChartMargin>
        <ChartTooltipSettings Enable="true" EnableHighlight="true" ShowNearestTooltip="true" Header="<b>${series.name}</b>" Format="Production: <b>${point.y} TWh</b>"></ChartTooltipSettings>
        <ChartLegendSettings EnableHighlight="true"></ChartLegendSettings>
        <ChartPrimaryXAxis Minimum="new DateTime(2013, 01, 01)" Maximum="new DateTime(2023, 01, 01)" ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime" LabelFormat="yyyy" IntervalType="IntervalType.Years" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis >
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
        </ChartPrimaryYAxis> 
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartPoints" Name="Gas" XName="Period" Width="2"
            Opacity="1" YName="Gas" Type="ChartSeriesType.StackingArea100">
                <ChartSeriesBorder Width="1" Color="#ffffff"></ChartSeriesBorder>
            </ChartSeries>
            <ChartSeries DataSource="@ChartPoints" Name="Oil" XName="Period" Width="2"
            Opacity="1" YName="Oil" Type="ChartSeriesType.StackingArea100">
                <ChartSeriesBorder Width="1" Color="#ffffff"></ChartSeriesBorder>
            </ChartSeries>
            <ChartSeries DataSource="@ChartPoints" Name="Nuclear" XName="Period" Width="2"
            Opacity="1" YName="Nuclear" Type="ChartSeriesType.StackingArea100">
                <ChartSeriesBorder Width="1" Color="#ffffff"></ChartSeriesBorder>
            </ChartSeries>
            <ChartSeries DataSource="@ChartPoints" Name="Hydro Power" XName="Period" Width="2"
            Opacity="1" YName="Hydropower" Type="ChartSeriesType.StackingArea100">
                <ChartSeriesBorder Width="1" Color="#ffffff"></ChartSeriesBorder>
            </ChartSeries>
            <ChartSeries DataSource="@ChartPoints" Name="Wind" XName="Period" Width="2"
                         Opacity="1" YName="Wind" Type="ChartSeriesType.StackingArea100">
                <ChartSeriesBorder Width="1" Color="#ffffff"></ChartSeriesBorder>
            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
</div>

@code{


    private Theme Theme { get; set; }
    public string Width { get; set; } = "90%";
    public List<StackedAreaChartData> ChartPoints { get; set; } = new List<StackedAreaChartData>
{
        new StackedAreaChartData { Period = new DateTime(2013, 01, 01), Gas = 5073.84, Oil = 1180.35, Nuclear = 2448.52, Hydropower = 3791.34, Wind = 634.05 },
        new StackedAreaChartData { Period = new DateTime(2014, 01, 01), Gas = 5237, Oil = 1120.83, Nuclear = 2498.73, Hydropower = 3873.70, Wind = 706.01 },
        new StackedAreaChartData { Period = new DateTime(2015, 01, 01), Gas = 5553.96, Oil = 1118.41, Nuclear = 2532.93, Hydropower = 3884, Wind = 829.57 },
        new StackedAreaChartData { Period = new DateTime(2016, 01, 01), Gas = 5839.46, Oil = 1060.76, Nuclear = 2571.05, Hydropower = 4012.86, Wind = 960 },
        new StackedAreaChartData { Period = new DateTime(2017, 01, 01), Gas = 5958.21, Oil = 987.45, Nuclear = 2594.23, Hydropower = 4058.06, Wind = 1138.96 },
        new StackedAreaChartData { Period = new DateTime(2018, 01, 01), Gas = 6197, Oil = 888.57, Nuclear = 2658.70, Hydropower = 4178.38, Wind = 1267.89 },
        new StackedAreaChartData { Period = new DateTime(2019, 01, 01), Gas = 6369.66, Oil = 834.83, Nuclear = 2754.08, Hydropower = 4225.93, Wind = 1419.80 },
        new StackedAreaChartData { Period = new DateTime(2020, 01, 01), Gas = 6332.21, Oil = 773.00, Nuclear = 2648.37, Hydropower = 4344.05, Wind = 1590.68 },
        new StackedAreaChartData { Period = new DateTime(2021, 01, 01), Gas = 6492.94, Oil = 830.76, Nuclear = 2762.24, Hydropower = 4276.07, Wind = 1849.47 },
        new StackedAreaChartData { Period = new DateTime(2022, 01, 01), Gas = 6581.64, Oil = 849.26, Nuclear = 2639.68, Hydropower = 4297.74, Wind = 2098.52 },
        new StackedAreaChartData { Period = new DateTime(2023, 01, 01), Gas = 6622.93, Oil = 788.55, Nuclear = 2685.74, Hydropower = 4211.01, Wind = 2304.44 }
};

    protected override void OnInitialized()
    {

        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService != null && SampleService.IsDevice)
        {
            Width = "100%";
        }
    }

    public class StackedAreaChartData
    {
        public DateTime Period { get; set; }
        public double Gas { get; set; }
        public double Oil { get; set; }
        public double Hydropower { get; set; }
        public double Nuclear { get; set; }
        public double Wind { get; set; }
    }

}
