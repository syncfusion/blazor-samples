@page "/chart/numeric-axis"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@

<SampleDescription>
    <p>This sample shows the numeric axis in a chart with England and West Indies cricket match data.</p>
</SampleDescription>
<ActionDescription>
    <p>You can use a numeric axis to represent numeric value data in a chart. To render a numeric axis, set the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.ChartAxis.html#Syncfusion_Blazor_Charts_ChartAxis_ValueType' aria-label="Navigate to the ValueType property reference for chart axis">ValueType</a> in axis to <b>Double</b>.</p>
    <p><code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.</p>
    <p>More information about the numeric axis can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/chart/numeric-axis' aria-label="Navigate to the documentation for numeric axis in chart component">documentation section</a>.</p>
</ActionDescription>

<div class="control-section" align='center'>
    <SfChart Title="England vs West Indies" Width="@Width" Theme="@Theme">
        <ChartTitleStyle TextOverflow="TextOverflow.Wrap"></ChartTitleStyle>
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartMargin Bottom="12"></ChartMargin>
        <ChartPrimaryXAxis Minimum="15" Maximum="21" Interval="1">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis>
            <ChartAxisLabelStyle Color="transparent"></ChartAxisLabelStyle>
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true" Format="${point.x}th Over : <b>${point.y} Runs</b>" EnableHighlight="true"></ChartTooltipSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartPoints" XName="Over" YName="ENG_Score" Opacity="1" Name="England" Fill="#1e90ff" Width="2" ColumnSpacing="0.1" Type="ChartSeriesType.Column">
                <ChartCornerRadius TopLeft="4" TopRight="4"></ChartCornerRadius>
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                        <ChartDataLabelFont FontWeight="600"></ChartDataLabelFont>
                    </ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
            <ChartSeries DataSource="@ChartPoints" XName="Over" YName="WI_Score" Opacity="1" Name="West Indies" Fill="#b22222" Width="2" ColumnSpacing="0.1" Type="ChartSeriesType.Column">
                <ChartCornerRadius TopLeft="4" TopRight="4"></ChartCornerRadius>
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                        <ChartDataLabelFont FontWeight="600"></ChartDataLabelFont>
                    </ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
         <ChartLegendSettings Visible="true" EnableHighlight="true"></ChartLegendSettings>
    </SfChart>
</div>

@code{


    private Theme Theme { get; set; }
    public List<DoubleData> ChartPoints { get; set; } = new List<DoubleData>
    {
        new DoubleData { Over = 16, ENG_Score = 2, WI_Score = 7},
        new DoubleData { Over = 17, ENG_Score = 14, WI_Score = 7 },
        new DoubleData { Over = 18, ENG_Score = 7, WI_Score = 11 },
        new DoubleData { Over = 19, ENG_Score = 7, WI_Score = 8 },
        new DoubleData { Over = 20, ENG_Score = 10, WI_Score = 24 }
    };
    public string Width { get; set; } = "90%";

    protected override void OnInitialized()
    {

        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService != null && SampleService.IsDevice)
        {
            Width = "100%";
        }
    }

    public class DoubleData
    {
        public double Over { get; set; }
        public double ENG_Score { get; set; }
        public double WI_Score { get; set; }
    }
}
