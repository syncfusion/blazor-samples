@page "/chart/marker-chart"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@

<SampleDescription>
    <p>This sample illustrates share of population using internet in a chart for different countries over several years. In a line-based series, data points can be annotated using symbols.</p>
</SampleDescription>
<ActionDescription>
    <p>Each data point in a series can be represented by a symbol as a marker. You can customize the shape, size, and color of the symbol with the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.ChartMarker.html' aria-label="Navigate to the class reference for ChartMarker">ChartMarker</a> class.</p>
    <p><code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.</p>
    <p>More information about the marker can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/chart/data-markers' aria-label="Navigate to the documentation for data-markers in chart component">documentation section</a>.</p>
</ActionDescription>

<div class="control-section" align='center'>
    <SfChart Title="Share of Population using Internet" SubTitle="Source: ourworldindata.org" Width="@Width" Theme="@Theme">
        <ChartTitleStyle TextOverflow="TextOverflow.Wrap"></ChartTitleStyle>
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartMargin Bottom="12"></ChartMargin>
        <ChartPrimaryXAxis Interval="1" LabelRotation="@Rotation" LabelIntersectAction="@Label" ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis LabelFormat="{value}%" Minimum="90" Maximum="100" Interval="2" RangePadding="ChartRangePadding.None">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true" Header="" Format="<b>${point.x}</b> <br> ${series.name} : <b>${point.y}</b>"></ChartTooltipSettings>
        <ChartLegendSettings Visible="true" EnableHighlight="true"></ChartLegendSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartPoints" Name="2021" XName="Country" Width="2"
                         Opacity="1" YName="Year_2021" Type="ChartSeriesType.Line">
                <ChartMarker Visible="true" Width="8" Height="8" IsFilled="true" Shape="ChartShape.Diamond">
                    <ChartDataLabel Name="TooltipMappingName"></ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
            <ChartSeries DataSource="@ChartPoints" Name="2022" XName="Country" Width="2"
                         Opacity="1" YName="Year_2022" Type="ChartSeriesType.Line">
                <ChartMarker Visible="true" Width="8" Height="8" IsFilled="true" Shape="ChartShape.Pentagon">
                    <ChartDataLabel Name="TooltipMappingName"></ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
            <ChartSeries DataSource="@ChartPoints" Name="2023" XName="Country" Width="2"
                         Opacity="1" YName="Year_2023" Type="ChartSeriesType.Line">
                <ChartMarker Visible="true" Width="8" Height="8" IsFilled="true" Shape="ChartShape.Triangle">
                    <ChartDataLabel Name="TooltipMappingName"></ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
</div>

@code{

    
    private Theme Theme { get; set; }
    public string Width { get; set; } = "90%";
    public double Rotation { get; set; } = 0;
    public LabelIntersectAction Label { get; set; } = LabelIntersectAction.Rotate45;
    public List<LineChartData> ChartPoints { get; set; } = new List<LineChartData>
    {
        new LineChartData { Country = "Switzerland", Year_2021 = 95.6, Year_2022 = 96.8, Year_2023 = 97.3, TooltipMappingName = "Switzerland"},
        new LineChartData { Country = "Denmark", Year_2021 = 98.9, Year_2022 = 97.9, Year_2023 = 98.8, TooltipMappingName = "Denmark" },
        new LineChartData { Country = "Finland", Year_2021 = 92.8, Year_2022 = 93.0, Year_2023 = 97.0, TooltipMappingName = "Finland"},
        new LineChartData { Country = "Netherlands", Year_2021 = 92.1, Year_2022 = 92.5, Year_2023 = 93.5, TooltipMappingName = "Netherlands"},
        new LineChartData { Country = "Belgium", Year_2021 = 92.8, Year_2022 = 94.0, Year_2023 = 94.6, TooltipMappingName = "Germany"},
    };

    protected override void OnInitialized()
    {
        
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService != null && SampleService.IsDevice)
        {
            Label = LabelIntersectAction.None;
            Width = "100%";
            Rotation = -45;
        }
    }

    public class LineChartData
    {
        public string? Country { get; set; }
        public double Year_2023 { get; set; }
        public double Year_2022 { get; set; }
        public double Year_2021 { get; set; }
        public string? TooltipMappingName { get; set; }
    }

}
