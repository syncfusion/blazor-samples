 @page "/chart/funnel"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.Inputs 

@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@

<SampleDescription>
    <p>This <a target='_blank' href='https://www.syncfusion.com/blazor-components/blazor-charts/chart-types/funnel-chart' aria-label="Navigate to explore the Blazor Funnel Chart">Blazor Funnel Chart</a> example shows a funnel chart for recruitment process. Datalabels show information about the points.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure a funnel chart. The labels are smartly arranged to avoid overlapping. The width and height of the funnel chart can be customized using the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.AccumulationChartSeries.html#Syncfusion_Blazor_Charts_AccumulationChartSeries_NeckWidth' aria-label="Navigate to the NeckWidth property reference for accumulation chart series">NeckWidth</a> and <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.AccumulationChartSeries.html#Syncfusion_Blazor_Charts_AccumulationChartSeries_NeckHeight' aria-label="Navigate to the NeckHeight property reference for accumulation chart series">NeckHeight</a> properties.</p>
    <p>More information about the funnel series can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/accumulation-chart/chart-types/funnel' aria-label="Navigate to the documentation for Funnel in accumulation chart">documentation section</a>.</p>
</ActionDescription>

<div  class="control-section" align='center'>
    <div class="control-section">
        <SfAccumulationChart Title="Recruitment Process" EnableAnimation="false" Theme="@Theme">
            <AccumulationChartLegendSettings Visible="false"></AccumulationChartLegendSettings>
            <AccumulationChartSeriesCollection>
                <AccumulationChartSeries DataSource="@FunnelChartPoints" XName="InterviewProcess" YName="Candidates"
                                         Type="AccumulationType.Funnel" Explode="false" GapRatio="0.03" Height="80%" Width="@Width" NeckWidth="@NeckWidth" NeckHeight="18%">
                    <AccumulationDataLabelSettings Visible="true" Name="DataLabelMappingName" Position="AccumulationLabelPosition.Outside">
                        <AccumulationChartConnector Length=@ConnectorLength></AccumulationChartConnector>
                        <AccumulationChartDataLabelFont Size=@Size FontWeight="600"></AccumulationChartDataLabelFont>
                    </AccumulationDataLabelSettings>
                </AccumulationChartSeries>
            </AccumulationChartSeriesCollection>
        </SfAccumulationChart>
    </div>
</div>


@code{

    
    private Theme Theme { get; set; }
    public string NeckWidth { get; set; } = "15%";
    public TextWrap Wrap { get; set; } = TextWrap.Normal;
    public string Width { get; set; } = "45%";
    public string ConnectorLength { get; set; } = "20px";
    public string Size { get; set; } = "12px";

    public List<FunnelData> FunnelChartPoints { get; set; } = new List<FunnelData>
    {

        new FunnelData { InterviewProcess = "Final Selection", Candidates = 30, DataLabelMappingName="Final Selection: 30"},
        new FunnelData { InterviewProcess = "Final Interview", Candidates = 58, DataLabelMappingName="Final Interview: 58"},
        new FunnelData { InterviewProcess = "Phone Interview", Candidates = 85, DataLabelMappingName="Phone Interview: 85"},
        new FunnelData { InterviewProcess = "Screening Completed", Candidates = 105, DataLabelMappingName="Screening Completed: 105"},
        new FunnelData { InterviewProcess = "Initial Validation", Candidates = 145, DataLabelMappingName="Initial Validation: 145"},
        new FunnelData { InterviewProcess = "Application Received", Candidates = 170, DataLabelMappingName="Application Received: 170"},

    };

    protected override void OnInitialized()
    {
        
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService != null && SampleService.IsDevice)
        {
            Width = "90%";
            NeckWidth = "25%";
            FunnelChartPoints[1].DataLabelMappingName = "Final<br> Interview: 58";
            FunnelChartPoints[2].DataLabelMappingName = "Phone<br> Interview: 85";
            ConnectorLength = "10px";
            Size = "7px";
        }
    }
 
    public class FunnelData
    {
        public string? InterviewProcess { get; set; }
        public double Candidates { get; set; }
        public string? DataLabelMappingName{ get; set; }
    }
}

