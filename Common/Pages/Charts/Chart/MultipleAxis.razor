@page "/chart/multiple-axis"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@

<SampleDescription>
    <p>This example shows how to use a chart's multiple axes to depict temperatures for Washington and Texas.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure multiple axes. Use an <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.ChartAxes.html' aria-label="Navigate to the class reference for chart Axes">Axes</a> collection to render a secondary axis in the chart that can be bound to a specific series using <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.ChartSeries.html#Syncfusion_Blazor_Charts_ChartSeries_YAxisName' aria-label="Navigate to the YAxisName property reference for chart series">YAxisName</a> and <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.ChartSeries.html#Syncfusion_Blazor_Charts_ChartSeries_XAxisName' aria-label="Navigate to the XAxisName property reference for chart series">XAxisName</a> properties in the series. You can also customize the secondary axis similar to the primary axis.</p>
    <p><code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a data point or tap one on touch-enabled devices.</p>
    <p>More information about the multiple axes can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/chart/axis-customization/#multiple-axis' aria-label="Navigate to the documentation for multiple-axis in chart component">documentation section</a>.</p>
</ActionDescription>

<div class="control-section" align='center'>
    <SfChart Title="Weather Data - 2024" SubTitle="Source: ncei.noaa.gov" Width="@Width" Theme="@Theme">
        <ChartTitleStyle TextOverflow="TextOverflow.Wrap"></ChartTitleStyle>
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category">
            <ChartAxisMinorGridLines Width="0"></ChartAxisMinorGridLines>
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Minimum="151" Maximum="156" Interval="1" LabelFormat="{value}°F">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartAxes>
            <ChartAxis Minimum="46" Maximum="50" Interval="1" OpposedPosition="true" RowIndex="0" Name="yAxis2" LabelFormat="{value}°C">
                <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
                <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            </ChartAxis>
        </ChartAxes>
        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@ChartPoints" XName="Month" YName="Texas" Opacity="1" Name="Texas" Width="2" Type="ChartSeriesType.Column">
                <ChartCornerRadius TopLeft="4" TopRight="4"></ChartCornerRadius>
            </ChartSeries>
            <ChartSeries DataSource="@ChartPoints" YAxisName="yAxis2" XName="Month" YName="Washington" Opacity="1" Name="Washington" Width="2" Type="ChartSeriesType.Spline">
                <ChartMarker Visible="true" Height="7" Width="7" IsFilled="true">
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
        <ChartLegendSettings Visible="true"></ChartLegendSettings>
    </SfChart>
</div>

@code{

    
    private Theme Theme { get; set; }
    public string Width { get; set; } = "90%";
    private string Jan = "Jan", May = "May";
    public List<CategoryData> ChartPoints { get; set; } = new List<CategoryData>
    {
        new CategoryData { Month = "Jan", Texas = 153.5, Washington = 48.1 },
        new CategoryData { Month = "Feb", Texas = 153.64, Washington = 48.5 },
        new CategoryData { Month = "Mar", Texas = 153.64, Washington = 48.8 },
        new CategoryData { Month = "Apr", Texas = 154.58, Washington = 49.0 },
        new CategoryData { Month = "May", Texas = 155.12, Washington = 48.4 },
        new CategoryData { Month = "Jun", Texas = 155.12, Washington = 48.2 },
        new CategoryData { Month = "Jul", Texas = 154.58, Washington = 48.4 },
        new CategoryData { Month = "Aug", Texas = 154.4, Washington = 48.2 },
        new CategoryData { Month = "Sep", Texas = 153.68, Washington = 48.5 },
        new CategoryData { Month = "Oct", Texas = 154.4, Washington = 48.4 },
        new CategoryData { Month = "Nov", Texas = 154.94, Washington = 48.5 },
        new CategoryData { Month = "Dec", Texas = 155.3, Washington = 48.4 }
    };


    protected override void OnInitialized()
    {
        
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService != null && SampleService.IsDevice)
        {
            Width = "100%";
        }
    }

    public class CategoryData
    {
        public String? Month { get; set; }
        public double Washington { get; set; }
        public double Texas { get; set; }
    }
}
