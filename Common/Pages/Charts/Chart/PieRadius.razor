@page "/chart/pie-radius"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@

<SampleDescription>
    <p>This sample compares countries by population density and total area using various radius in a pie series.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render a doughnut chart with different radius. You can use the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.AccumulationChartSeries.html#Syncfusion_Blazor_Charts_AccumulationChartSeries_Radius' aria-label="Navigate to the Radius property reference for accumulation chart series">Radius</a> mapping property to achieve this feature. <code>DataLabel</code> are used to represent individual data and its values.</p>
    <p><code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
    <p>More information about the pie series can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/accumulation-chart/chart-types/pie-doughnut' aria-label="Navigate to the documentation for Pie and Doughnut in accumulation chart component">documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <SfAccumulationChart EnableBorderOnMouseMove="false" Title="Global Distribution of Population and Land Area by Country 2025" SubTitle="Source: wikipedia.org" EnableAnimation="true" EnableSmartLabels="true" Theme="@Theme">
        <AccumulationChartEvents TooltipRender="PieTooltipRender"></AccumulationChartEvents>
        <AccumulationChartTooltipSettings Header="" Format="<b>${point.x}</b><br>Area in square km: <b>${point.y}</b><br>Population density per square km: <b>${point.tooltip}" Enable="true" EnableHighlight="true"></AccumulationChartTooltipSettings>
        <AccumulationChartLegendSettings Visible="false">
        </AccumulationChartLegendSettings>
        <AccumulationChartSeriesCollection>
            <AccumulationChartSeries DataSource="@PieChartPoints" XName="Country" YName="Population" Radius="Radius" TooltipMappingName="Radius" InnerRadius="20%" BorderRadius="3">
                <AccumulationChartSeriesBorder Color="#FFFFFF" Width="1"></AccumulationChartSeriesBorder>
                <AccumulationDataLabelSettings TextWrap="@Wrap" MaxWidth="@Width" Name="@Name" Visible="true" Position="DataLabelPosition">
                    <AccumulationChartConnector Length=@ConnectorLength Type="ConnectorType.Curve"></AccumulationChartConnector>
                    <AccumulationChartDataLabelFont Size=@Size FontWeight="600"></AccumulationChartDataLabelFont>
                </AccumulationDataLabelSettings>
            </AccumulationChartSeries>
        </AccumulationChartSeriesCollection>
    </SfAccumulationChart>
</div>

@code{

    private Theme Theme { get; set; }
    public TextWrap Wrap { get; set; } = TextWrap.Normal;
    public double Width { get; set; } = double.NaN;
    public AccumulationLabelPosition DataLabelPosition = AccumulationLabelPosition.Outside;
    public string ConnectorLength { get; set; } = "20px";
    public string Size { get; set; } = "12px";
    private string? Name { get; set; }

    public List<PieData> PieChartPoints = new List<PieData>
    {
        new PieData { Country = "Cuba", Population = 103800 , Radius = "106", MappingName = "CUB"},
        new PieData { Country = "Syria", Population = 185178 , Radius = "133", MappingName = "SYR"},
        new PieData { Country = "Benin", Population = 112760, Radius = "128", MappingName = "BEN"},
        new PieData { Country = "Portugal", Population = 91606, Radius = "114", MappingName = "POR"},
        new PieData { Country = "Austria", Population = 82520, Radius = "111", MappingName = "AUS"},
        new PieData { Country = "Honduras", Population = 111890 , Radius = "97", MappingName = "HON"},
        new PieData { Country = "Azerbaijan", Population = 82650, Radius = "125", MappingName = "AZE"},
    };

    public void PieTooltipRender(TooltipRenderEventArgs args)
    {
        args.Text = args.Text.Replace(args.Data.PointY.ToString() ?? null!, Convert.ToDouble(args.Data.PointY).ToString("#,#"));
    }

    protected override void OnInitialized()
    {
        
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        Name = SampleService != null && SampleService.IsDevice ? "MappingName" : "Country";
        if(SampleService != null && SampleService.IsDevice)
        {
            DataLabelPosition = AccumulationLabelPosition.Inside;
            Wrap = TextWrap.Wrap;
            Width = 60;
            ConnectorLength = "10px";
            Size = "7px";
        }
    }

    public class PieData
    {
        public string? Country { get; set; }
        public double Population { get; set; }
        public string? Radius { get; set; }
        public string? MappingName { get; set; }
    }
}
