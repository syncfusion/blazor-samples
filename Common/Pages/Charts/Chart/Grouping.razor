@page "/chart/grouping"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs

@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@

<SampleDescription>
    <p>This sample shows the gold medal count scored by each country at the summer olympic 2024 games, along with the pie series grouping functionality.</p>
</SampleDescription>
<ActionDescription>
    <p>
        In this example, you can see how to group points based on count and values. The slice can be grouped based on the number of points by specifying the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.AccumulationChartSeries.html#Syncfusion_Blazor_Charts_AccumulationChartSeries_GroupMode' aria-label="Navigate to the GroupMode property reference for accumulation chart series">GroupMode</a> to <b>Point</b>.
        For example, if the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.AccumulationChartSeries.html#Syncfusion_Blazor_Charts_AccumulationChartSeries_GroupTo' aria-label="Navigate to the GroupTo property reference for accumulation chart series">GroupTo</a> property is set to 10, the chart will display the first 10 points and the remaining entries from the collection will be grouped as a single point. The slice can also be grouped based on values by specifying the <code>GroupMode</code> to <b>Value</b>.
        For example, if the <code>GroupTo</code> is set to 10, the first 10 points with a lower value will be grouped together and shown as a single point while the others as a slice.
    </p>
    <p><code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.</p>
    <p>More information on the grouping can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/accumulation-chart/grouping' aria-label="Navigate to the documentation for grouping in accumulation chart">documentation section</a>.</p>
</ActionDescription>

<div class="col-lg-8 control-section sb-property-border">
    <SfAccumulationChart EnableBorderOnMouseMove="false" Title="Summer Olympic 2024 - Gold Medals" SubTitle="Source: wikipedia.org" EnableSmartLabels="true" Theme="@Theme">
        <AccumulationChartLegendSettings Visible="false"></AccumulationChartLegendSettings>
        <AccumulationChartTooltipSettings Header="" Enable="true" Format="<b>${point.x}</b><br> Gold Medals: <b>${point.y}</b>" EnableHighlight="true"></AccumulationChartTooltipSettings>
        <AccumulationChartSeriesCollection>
            <AccumulationChartSeries DataSource="@PieChartPoints" XName="Country" YName="Medal" Name="Summer Olympics" Explode="true" GroupTo="@GroupChange" Radius="@Radius"
                                     GroupMode="@Mode" StartAngle="-20" EndAngle="340" InnerRadius="0%" BorderRadius="3">
                <AccumulationChartSeriesBorder Color="#FFFFFF" Width="1"></AccumulationChartSeriesBorder>
                <AccumulationDataLabelSettings Visible="true" Name="DataLabelMappingName" Position="AccumulationLabelPosition.Outside">
                    <AccumulationChartConnector Type="ConnectorType.Curve" Length=@ConnectorLength></AccumulationChartConnector>
                    <AccumulationChartDataLabelFont FontWeight="600" Size="@Size"></AccumulationChartDataLabelFont>
                </AccumulationDataLabelSettings>
            </AccumulationChartSeries>
        </AccumulationChartSeriesCollection>
    </SfAccumulationChart>
</div>

<div class="col-lg-4 property-section">
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table style="width: 100%">
                <tr style="height:50px">
                    <td>
                        Group Modes:
                    </td>
                    <td>
                        <SfDropDownList Placeholder="Point" TValue="string" TItem="SelectionTypes" DataSource="@GroupModeData" Width="100%">
                            <DropDownListEvents TValue="string" TItem="SelectionTypes" ValueChange="ChangeGroupMode"></DropDownListEvents>
                            <DropDownListFieldSettings Value="Type"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 50%">
                        <div>
                            Group To:
                        </div>
                    </td>
                    <td style="width: 50%;">
                        <div data-role="rangeslider">
                            <SfNumericTextBox TValue="int?" Value="@groupToValue" Max=27 Min=0 Step=1 Width="100%">
                                <NumericTextBoxEvents TValue="int?" ValueChange="ClubChange" />
                            </SfNumericTextBox>
                        </div>
                    </td>
                    <td style="width: 50%;" align="center">
                        <div data-role="rangeslider">
                            <p id="yvalue" style="font-weight: normal;padding:10px;margin-bottom: 0px;"><span>@groupToValue</span></p>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

@code{

    
    private Theme Theme { get; set; }
    private string GroupChange { get; set; } = "9";
    private string Radius { get; set; } = "55%";
    public string Size { get; set; } = "13px";
    private GroupMode Mode { get; set; } = GroupMode.Point;
    public string ConnectorLength { get; set; } = "20px";

    public List<PieData> PieChartPoints { get; set; } = new List<PieData>
    {
        new PieData { Country = "China", Medal = 40, DataLabelMappingName= "China: 40" },
        new PieData { Country = "Japan", Medal = 20, DataLabelMappingName= "Japan: 20" },
        new PieData { Country = "Australia", Medal = 18, DataLabelMappingName= "Australia: 18" },
        new PieData { Country = "France", Medal = 16, DataLabelMappingName= "France: 16" },
        new PieData { Country = "Netherlands", Medal = 15, DataLabelMappingName= "Netherlands: 15" },
        new PieData { Country = "Great Britain", Medal = 14, DataLabelMappingName= "Great Britain: 14" },
        new PieData { Country = "South Korea", Medal = 13, DataLabelMappingName= "South Korea: 13" },
        new PieData { Country = "Germany", Medal = 12, DataLabelMappingName= "Germany: 12" },        
        new PieData { Country = "Italy", Medal = 12, DataLabelMappingName= "Italy: 12" },
        new PieData { Country = "Canada", Medal = 9, DataLabelMappingName = "Canada: 9"},
        new PieData { Country = "Hungary", Medal = 6, DataLabelMappingName= "Hungary: 6" },
        new PieData { Country = "Spain", Medal = 5, DataLabelMappingName= "Spain: 5" },
        new PieData { Country = "Kenya", Medal = 4, DataLabelMappingName= "Kenya: 4" },
        new PieData { Country = "Brazil", Medal = 3, DataLabelMappingName= "Brazil: 3" },
    };
    public List<SelectionTypes> GroupModeData { get; set; } = new List<SelectionTypes>
    {
       new SelectionTypes() { Type = GroupMode.Point.ToString() },
       new SelectionTypes() { Type = GroupMode.Value.ToString() }
    };
    private int groupToValue = 9;

    protected override void OnInitialized()
    {
        
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService != null && SampleService.IsDevice)
        {
            Size = "11px";
            Radius = "40%";
            PieChartPoints[2].DataLabelMappingName = "Australia<br> 18";
            PieChartPoints[7].DataLabelMappingName = "Germany<br> 12";
            PieChartPoints[8].DataLabelMappingName = "Italy<br> 12";
            PieChartPoints[1].DataLabelMappingName = "Japan<br> 20";
            PieChartPoints[6].DataLabelMappingName = "SK: 13";
            PieChartPoints[9].DataLabelMappingName = "CA: 9";
            PieChartPoints[10].DataLabelMappingName = "HU: 6";
            ConnectorLength = "10px";
            Size = "8px";

        }
    }
 
    private void ChangeGroupMode(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, SelectionTypes> args)
    {
        if (args.Value.ToString().Equals(GroupModeData[1].Type))
        {
            Mode = GroupMode.Value;
        }
        else if (args.Value.ToString().Equals(GroupModeData[0].Type))
        {
            Mode = GroupMode.Point;
        }
    }

    private void ClubChange(Syncfusion.Blazor.Inputs.ChangeEventArgs<int?> args)
    {
        groupToValue = Convert.ToInt32(args.Value);
        GroupChange = Convert.ToString(groupToValue);
    }

    public class PieData
    {
        public string? Country { get; set; }
        public double Medal { get; set; }
        public string? DataLabelMappingName { get; set; }
    }

    public class SelectionTypes
    {
        public string? Type { get; set; }
    }
}
