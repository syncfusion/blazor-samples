@page "/chart/negative-area"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@

<SampleDescription>
    <p>This sample illustrates an area series with negative points. Data points with negative points are shown here.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render an area series with negative points. Also, a legend is enabled in the shape of the series type.</p>
    <p><code>Tooltip</code> is enabled in this example. To see a tooltip in action, hover over or tap on the chart.</p>
    <p>More information about the negative points can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/chart/working-with-data#empty-points' aria-label="Navigate to documentation for Empty points in chart component">documentation section</a>.</p>
</ActionDescription>

<div class="control-section" align='center'>
    <SfChart Title="GDP Growth Rate" SubTitle="Source: wikipedia.org" Width="@Width" Theme="@Theme">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartMargin Bottom="12"></ChartMargin>
        <ChartLegendSettings Visible="true" EnableHighlight="true"></ChartLegendSettings>
        <ChartTooltipSettings Enable="true" EnableHighlight="true" ShowNearestTooltip="true"></ChartTooltipSettings>
        <ChartPrimaryXAxis IntervalType="IntervalType.Years" Minimum="new DateTime(2019, 01, 01)" Maximum="new DateTime(2023, 01, 01)" ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime" LabelFormat="yyyy" EdgeLabelPlacement="EdgeLabelPlacement.Shift">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            <ChartAxisLabelStyle FontStyle="bold"></ChartAxisLabelStyle>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis LabelFormat="{value}%" Minimum="-6" Maximum="6" Interval="3">
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
        </ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@USA" Name="USA" XName="Year" Width="2"
                         Opacity="0.75" YName="Rate" Type="ChartSeriesType.Area">
                <ChartMarker IsFilled="true" Visible="true" Height="7" Width="7" Shape="ChartShape.Circle">
                </ChartMarker>
                <ChartSeriesBorder Width="2"></ChartSeriesBorder>
            </ChartSeries>
            <ChartSeries DataSource="@Russia" Name="Russia" XName="Year" Width="2"
                         Opacity="0.75" YName="Rate" Type="ChartSeriesType.Area">
                <ChartMarker IsFilled="true" Visible="true" Height="7" Width="7" Shape="ChartShape.Diamond">
                </ChartMarker>
                <ChartSeriesBorder Width="2"></ChartSeriesBorder>
            </ChartSeries>
            <ChartSeries DataSource="@Bhutan" Name="Bhutan" XName="Year" Width="2"
                         Opacity="0.75" YName="Rate" Type="ChartSeriesType.Area">
                <ChartMarker IsFilled="true" Visible="true" Height="5" Width="5" Shape="ChartShape.Rectangle">
                </ChartMarker>
                <ChartSeriesBorder Width="2"></ChartSeriesBorder>
            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
</div>

@code{

    
    private Theme Theme { get; set; }
    public string Width { get; set; } = "90%";

    public List<AreaEmptyChartData> USA { get; set; } = new List<AreaEmptyChartData>
{
        new AreaEmptyChartData { Year = new DateTime(2019, 01, 01), Rate = -2.214 },
        new AreaEmptyChartData { Year = new DateTime(2020, 01, 01), Rate = 5.800 },
        new AreaEmptyChartData { Year = new DateTime(2021, 01, 01), Rate = 1.936 },
        new AreaEmptyChartData { Year = new DateTime(2022, 01, 01), Rate = 2.531 },
        new AreaEmptyChartData { Year = new DateTime(2023, 01, 01), Rate = 2.305 }
    };

    public List<AreaEmptyChartData> Russia { get; set; } = new List<AreaEmptyChartData>
{
        new AreaEmptyChartData { Year = new DateTime(2019, 01, 01), Rate = -2.654 },
        new AreaEmptyChartData { Year = new DateTime(2020, 01, 01), Rate = 5.988 },
        new AreaEmptyChartData { Year = new DateTime(2021, 01, 01), Rate = -1.201 },
        new AreaEmptyChartData { Year = new DateTime(2022, 01, 01), Rate = 3.585 },
        new AreaEmptyChartData { Year = new DateTime(2023, 01, 01), Rate = 1.206 }
    };

    public List<AreaEmptyChartData> Bhutan { get; set; } = new List<AreaEmptyChartData>
{
        new AreaEmptyChartData { Year = new DateTime(2019, 01, 01), Rate = -2.455 },
        new AreaEmptyChartData { Year = new DateTime(2020, 01, 01), Rate = -3.293 },
        new AreaEmptyChartData { Year = new DateTime(2021, 01, 01), Rate = 4.826 },
        new AreaEmptyChartData { Year = new DateTime(2022, 01, 01), Rate = 4.644 },
        new AreaEmptyChartData { Year = new DateTime(2023, 01, 01), Rate = 3.494 }
    };

    public class AreaEmptyChartData
    {
        public DateTime Year { get; set; }
        public double Rate { get; set; }
    }

    protected override void OnInitialized()
    {
        
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService != null && SampleService.IsDevice)
        {
            Width = "100%";
        }
    }

}
