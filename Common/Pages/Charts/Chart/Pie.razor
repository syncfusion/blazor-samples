@page "/chart/pie"
@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.Inputs

@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@

<SampleDescription>
    <p>This <a target='_blank' href='https://www.syncfusion.com/blazor-components/blazor-charts/chart-types/pie-chart' aria-label="Navigate to explore the Blazor Pie Chart">Blazor Pie Chart</a> example demonstrates a pie chart for global electricity generation by source. Datalabels show information about the points.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure a pie chart. The pie chart is a circular graphic, which is ideal for displaying categories as a proportion or a percentage of the whole . The radius of the pie chart can be customized using the <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Charts.AccumulationChartSeries.html#Syncfusion_Blazor_Charts_AccumulationChartSeries_Radius' aria-label="Navigate to the Radius property reference for accumulation chart series">Radius</a> property.</p>
    <p><code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
    <p>More information about the pie series can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/accumulation-chart/chart-types/pie-doughnut' aria-label="Navigate to the documentation for Pie and Doughnut in accumulation chart component">documentation section</a>.</p>
</ActionDescription>

<div  class="control-section" align='center'>
    <div class="control-section">
        <SfAccumulationChart EnableBorderOnMouseMove="false" Title="Global Electricity Generation by Source - 2024" SubTitle="Source: wikipedia.org" EnableAnimation="true" Theme="@Theme">
            <AccumulationChartTooltipSettings Header="" Format="<b>${point.x}</b><br>Percentage: <b>${point.y}%</b>" Enable="true" EnableHighlight="true"></AccumulationChartTooltipSettings>
            <AccumulationChartLegendSettings Visible="false"></AccumulationChartLegendSettings>
            <AccumulationChartSeriesCollection>
                <AccumulationChartSeries DataSource="@PieChartPoints" XName="Source" YName="Percentage" Radius="@Radius" Name="Browser" StartAngle="@StartAngle" BorderRadius="3"
                                         InnerRadius="0%" ExplodeIndex="0" Explode="true" ExplodeOffset="@ExplodeRadius">
                                         <AccumulationChartSeriesBorder Color="#FFFFFF" Width="1"></AccumulationChartSeriesBorder>
                    <AccumulationDataLabelSettings Visible="true" Name="DataLabelMappingName" Position="AccumulationLabelPosition.Outside">
                        <AccumulationChartDataLabelFont Size=@Size FontWeight="600"></AccumulationChartDataLabelFont>
                        <AccumulationChartConnector Length=@ConnectorLength Type="ConnectorType.Curve"></AccumulationChartConnector>
                    </AccumulationDataLabelSettings>
                </AccumulationChartSeries>
            </AccumulationChartSeriesCollection>
        </SfAccumulationChart>
    </div>
</div>

@code{

    
    public Theme Theme { get; set; }
    public int ExplodeIndex { get; set; } = 1;
    public string ExplodeRadius = "10%";
    public string Radius { get; set; } = "60%";
    public string ConnectorLength { get; set; } = "20px";
    public int StartAngle = 30;
    public string Size { get; set; } = "12px";
    public List<PieData> PieChartPoints { get; set; } = new List<PieData>
{
        new PieData { Source = "Coal", Percentage = 34.4, DataLabelMappingName = "Coal: 34.4%"},
        new PieData { Source = "Natural Gas", Percentage = 22.1, DataLabelMappingName = "Natural Gas: 22.1%"},
        new PieData { Source = "Hydro", Percentage = 14.4, DataLabelMappingName = "Hydro: 14.4%"},
        new PieData { Source = "Nuclear", Percentage = 9.0, DataLabelMappingName = "Nuclear: 9.0%"},
        new PieData { Source = "Wind", Percentage = 8.1, DataLabelMappingName = "Wind: 8.1%"},
        new PieData { Source = "Others", Percentage = 12.0, DataLabelMappingName = "Others: 12.0%"},
    };

    protected override void OnInitialized()
    {
        
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if(SampleService != null && SampleService.IsDevice)
        {
            StartAngle = 70;
            Radius = "40%";
            ConnectorLength = "10px";
            Size = "8px";
        }
    }

    public class PieData
    {
        public string? Source { get; set; }
        public double Percentage { get; set; }
        public string? DataLabelMappingName { get; set; }
    }

}
