@page "/chart/column-placement"

@using Syncfusion.Blazor
@using ThemeHelper
@using Syncfusion.Blazor.Charts

@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@

<SampleDescription>
    <p>This sample shows three series of columns in which each column is rendered with a different width and placed behind the previous column.</p>
</SampleDescription>
<ActionDescription>
    <p>
        In this example, you can see how to render and configure the column chart. The column chart is used to compare the frequency, count, total, or average of data in different categories
    </p>
    <p><code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.</p>
</ActionDescription>

<div class="control-section" align='center'>
    <SfChart Title="Population Distribution of the Top 5 Most Populous Countries (2024)" SubTitle="Source: statisticstimes.com" EnableSideBySidePlacement="false" Width="@Width" Theme="@Theme">
        <ChartTitleStyle TextOverflow="TextOverflow.Wrap"></ChartTitleStyle>
        <ChartSubTitleStyle TextOverflow="TextOverflow.Wrap"></ChartSubTitleStyle>
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartMargin Bottom="12"></ChartMargin>
        <ChartEvents OnAxisLabelRender="AxisLabelRender" SharedTooltipRender="SharedTooltipRender"></ChartEvents>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Interval="1">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Population Count (in Millions)" Interval="300000000">
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
        </ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@TotalData" ColumnWidth="0.5" XName="Country" YName="Population" Name="Total" Type="ChartSeriesType.Column" LegendShape="LegendShape.Rectangle">
                <ChartCornerRadius TopLeft="4" TopRight="4"></ChartCornerRadius>
            </ChartSeries>
            <ChartSeries DataSource="@MaleData" ColumnWidth="0.3" XName="Country" YName="Male" Name="Male" Type="ChartSeriesType.Column" LegendShape="LegendShape.Rectangle">
                <ChartCornerRadius TopLeft="4" TopRight="4"></ChartCornerRadius>
            </ChartSeries>
            <ChartSeries DataSource="@FemaleData" ColumnWidth="0.2" XName="Country" YName="Female" Name="Female" Type="ChartSeriesType.Column" LegendShape="LegendShape.Rectangle">
                <ChartCornerRadius TopLeft="4" TopRight="4"></ChartCornerRadius>
            </ChartSeries>
        </ChartSeriesCollection>
        <ChartTooltipSettings Enable="true" Shared="true"></ChartTooltipSettings>
        <ChartLegendSettings Visible="true" ShapeHeight="9" ShapeWidth="9"></ChartLegendSettings>
    </SfChart>
</div>

@code{

    
    private Theme Theme { get; set; }
    public string Width { get; set; } = "90%";
    public double AngleRotate { get; set; } = 0;
    public bool Rotation { get; set; } = false;
    public class PopulationData
    {
        public string? Country { get; set; }
        public long Population { get; set; }
    }

    public class GenderData
    {
        public string? Country { get; set; }
        public long Male { get; set; }
        public long Female { get; set; }
    }

    private List<PopulationData> TotalData = new List<PopulationData>
    {
        new PopulationData { Country = "India", Population = 1450935791 },
        new PopulationData { Country = "China", Population = 1419321278 },
        new PopulationData { Country = "USA", Population = 345426571 },
        new PopulationData { Country = "Indonesia", Population = 283487931 },
        new PopulationData { Country = "Pakistan", Population = 251269164 }
    };

    private List<GenderData> MaleData = new List<GenderData>
    {
        new GenderData { Country = "India", Male = 748323427 },
        new GenderData { Country = "China", Male = 723023723 },
        new GenderData { Country = "USA", Male = 173551527 },
        new GenderData { Country = "Indonesia", Male = 142407931 },
        new GenderData { Country = "Pakistan", Male = 127433405 }
    };

    private List<GenderData> FemaleData = new List<GenderData>
    {
        new GenderData { Country = "India", Female = 702612364 },
        new GenderData { Country = "China", Female = 696297555 },
        new GenderData { Country = "USA", Female = 171875044 },
        new GenderData { Country = "Indonesia", Female = 141080014 },
        new GenderData { Country = "Pakistan", Female = 123835758 }
    };

    protected override void OnInitialized()
    {
        
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        if (SampleService != null && SampleService.IsDevice)
        {
            AngleRotate = -90;
            Rotation = true;
            Width = "100%";
        }
    }
    
    public void AxisLabelRender(AxisLabelRenderEventArgs args)
    {
        if (double.TryParse(args.Text.Replace(",", ""), out double value))
        {
            if (args.Value >= 1_000_000)
            {
                args.Text = (value / 1_000_000).ToString("0.#") + "M";
            }
        }
    }

    public void SharedTooltipRender(SharedTooltipRenderEventArgs args)
    {
        if (args.Data is List<PointInfo> dataList && dataList.Count > 0)
        {
            List<string> tooltipText = new List<string>();

            foreach (var pointInfo in dataList)
            {
                double pointYValue = Convert.ToDouble(pointInfo.PointY);
                string value = pointYValue.ToString("N0", System.Globalization.CultureInfo.InvariantCulture);
                tooltipText.Add($"{pointInfo.SeriesName}: <b>{value}</b>");
            }
            args.Text = tooltipText;
        }
    }

}
