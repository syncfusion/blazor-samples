@page "/smith-chart/print-and-export"
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@using ThemeHelper
@inject NavigationManager NavigationManager

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the print and export options in the smith chart.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to export and print the rendered smith chart. The smith chart can be saved as <b>JPEG, PNG, SVG</b> or <b>PDF</b>.</p>
    <p>More information about the smith chart can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/smith-chart/getting-started-webapp" aria-label="Documentation section">documentation section</a>.</p>
</ActionDescription>

<div class="col-lg-9 control-section sb-property-border">
    <SfSmithChart @ref="Chart" Theme="Theme">
        <SmithChartHorizontalAxis>
            <SmithChartHorizontalMinorGridLines Visible="true"></SmithChartHorizontalMinorGridLines>
        </SmithChartHorizontalAxis>
        <SmithChartRadialAxis>
            <SmithChartRadialMinorGridLines Visible="true"></SmithChartRadialMinorGridLines>
        </SmithChartRadialAxis>
        <SmithChartSeriesCollection>
            <SmithChartSeries Name="Transmission" EnableAnimation="true" DataSource="SmithChartSeries" Resistance="Resistance" Reactance="Reactance">
                <SmithChartSeriesTooltip Visible="true"></SmithChartSeriesTooltip>
                <SmithChartSeriesMarker Shape="Shape.Circle" Visible="true">
                    <SmithChartSeriesMarkerBorder Width="2"></SmithChartSeriesMarkerBorder>
                </SmithChartSeriesMarker>
            </SmithChartSeries>
            <SmithChartLegendSettings Visible="true" Shape="Shape.Circle"></SmithChartLegendSettings>
        </SmithChartSeriesCollection>
    </SfSmithChart>
</div>
<div class="col-lg-3 property-section">
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table style="width: 100%">
                <tbody>
                <tr style="height: 50px">
                    <td style="width: 45%">
                        <div class="property-text">Export Type</div>
                    </td>
                    <td style="width: 70%;">
                        <div>
                            <SfDropDownList TValue="string" TItem="Typelist" DataSource="ExportFileTypes" @bind-Value="FileType" Width="100%">
                                <DropDownListEvents TValue="string" TItem="Typelist" ValueChange="OnFileTypeChange"></DropDownListEvents>
                                <DropDownListFieldSettings Text="Name" Value="Name"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 45%">
                        <div class="property-text">File Name</div>
                    </td>
                    <td style="width: 70%;">
                        <div class="e-float-input" style="margin-top: 5px; width:100%;">
                            <SfTextBox Value="@FileName" ValueChange="OnFileNameChange" Placeholder="Smith chart"></SfTextBox>
                        </div>
                    </td>
                </tr>
                </tbody>
            </table>
            <br />
            <div align="center" style="height: 45px; text-transform:none !important; width:100%">
                <SfButton IsPrimary="true" IsToggle="true" CssClass="e-custom" OnClick="OnExportClick">Export</SfButton>
            </div>
            <div align="center" style="height: 45px; text-transform:none !important; width:100%">
                <SfButton IsPrimary="true" IsToggle="true" CssClass="e-custom" OnClick="OnPrintClick">Print</SfButton>
            </div>
        </div>
    </div>
</div>

@code {
    public SfSmithChart? Chart { get; set; }
    public Theme Theme { get; set; }
    public string FileType { get; set; } = "JPEG";
    public string FileName { get; set; } = "Smith chart";

    public class SmithDataSource
    {
        public double Resistance { get; set; }
        public double Reactance { get; set; }
    }

    public List<SmithDataSource> SmithChartSeries { get; set; } = new List<SmithDataSource>
    {
        new SmithDataSource { Resistance = 0.15, Reactance = 0.01 },
        new SmithDataSource { Resistance = 0.15, Reactance = 0.15 },
        new SmithDataSource { Resistance = 0.18, Reactance = 0.3 },
        new SmithDataSource { Resistance = 0.2, Reactance = 0.4 },
        new SmithDataSource { Resistance = 0.25, Reactance = 0.6 },
        new SmithDataSource { Resistance = 0.38, Reactance = 0.95 },
        new SmithDataSource { Resistance = 0.6, Reactance = 1.25 },
        new SmithDataSource { Resistance = 1, Reactance = 1.6 },
        new SmithDataSource { Resistance = 1.65, Reactance = 1.9 },
        new SmithDataSource { Resistance = 2.75, Reactance = 2 },
        new SmithDataSource { Resistance = 4.5, Reactance = 0.01 },
        new SmithDataSource { Resistance = 3, Reactance = -2 },
        new SmithDataSource { Resistance = 1.65, Reactance = -1.95 },
        new SmithDataSource { Resistance = 1, Reactance = -1.65 },
        new SmithDataSource { Resistance = 0.6, Reactance = -1.25 },
        new SmithDataSource { Resistance = 0.35, Reactance = -0.9 },
        new SmithDataSource { Resistance = 0.25, Reactance = -0.6 },
        new SmithDataSource { Resistance = 0.25, Reactance = -0.4 },
        new SmithDataSource { Resistance = 0.25, Reactance = -0.3 },
        new SmithDataSource { Resistance = 0.25, Reactance = -0.15 },
        new SmithDataSource { Resistance = 0.25, Reactance = 0.01 }
    };

    public class Typelist
    {
        public string? Name { get; set; }
    }

    public List<Typelist> ExportFileTypes { get; set; } = new List<Typelist>
    {
        new Typelist { Name = "JPEG" },
        new Typelist { Name = "PNG" },
        new Typelist { Name = "SVG" },
        new Typelist { Name = "PDF" }
    };

    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }

    public void OnFileTypeChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, Typelist> args)
    {
        FileType = args.Value;
    }

    public void OnFileNameChange(Syncfusion.Blazor.Inputs.ChangedEventArgs args)
    {
        FileName = args.Value;
    }

    public async Task OnExportClick()
    {
        ExportType exportFileType = ExportType.JPEG;
        switch (FileType)
        {
            case "JPEG":
                exportFileType = ExportType.JPEG;
                break;
            case "PNG":
                exportFileType = ExportType.PNG;
                break;
            case "SVG":
                exportFileType = ExportType.SVG;
                break;
            case "PDF":
                exportFileType = ExportType.PDF;
                break;
        }

        if (Chart != null)
        await Chart.ExportAsync(exportFileType, FileName);
    }

    public async Task OnPrintClick()
    {
        if (Chart != null)
        await Chart.PrintAsync();
    }

}

<style>
    .property-text {
        font-family: "Roboto", "Segoe UI", "GeezaPro", "DejaVu Serif", "sans-serif" !important;
        font-size: 13px !important;
        font-weight: 400 !important;
    }
    #button-control {
        width: 100%;
        margin: 8% 0;
        text-align: center;
    }
    #button-control .e-btn {
        float: left;
    }
    @@media only screen and (max-width: 500px) {
        #button-control {
            margin-left: -3%;
        }
    }
    .button-section {
        width: 80%;
        margin: auto;
    }
    #button-control .col-xs-12 {
        margin: 15px 0;
    }
    @@font-face {
        font-family: 'button-icons';
        src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj1uSf8AAAEoAAAAVmNtYXDOXM6wAAABtAAAAFRnbHlmcV/SKgAAAiQAAAJAaGVhZBNt0QcAAADQAAAANmhoZWEIUQQOAAAArAAAACRobXR4NAAAAAAAAYAAAAA0bG9jYQNWA+AAAAIIAAAAHG1heHABGQAZAAABCAAAACBuYW1lASvfhQAABGQAAAJhcG9zdFAouWkAAAbIAAAA2AABAAAEAAAAAFwEAAAAAAAD9AABAAAAAAAAAAAAAAAAAAAADQABAAAAAQAAYD3WXF8PPPUACwQAAAAAANgtxgsAAAAA2C3GCwAAAAAD9AP0AAAACAACAAAAAAAAAAEAAAANAA0AAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wHnDQQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAAAAAIAAAADAAAAFAADAAEAAAAUAAQAQAAAAAYABAABAALnCOcN//8AAOcB5wr//wAAAAAAAQAGABQAAAABAAMABAAHAAIACgAJAAgABQAGAAsADAAAAAAADgAkAEQAWgByAIoApgDAAOAA+AEMASAAAQAAAAADYQP0AAIAADcJAZ4CxP08DAH0AfQAAAIAAAAAA9QD9AADAAcAACUhESEBIREhAm4BZv6a/b4BZv6aDAPo/BgD6AAAAgAAAAADpwP0AAMADAAANyE1ISUBBwkBJwERI1kDTvyyAYH+4y4BeQGANv7UTAxNlwEIPf6eAWI9/ukDEwAAAAIAAAAAA/QDngADAAcAADchNSETAyEBDAPo/Bj6+gPo/gxipgFy/t0CRwAAAQAAAAAD9AP0AAsAAAEhFSERMxEhNSERIwHC/koBtnwBtv5KfAI+fP5KAbZ8AbYAAQAAAAAD9AP0AAsAAAEhFSERMxEhNSERIwHh/isB1T4B1f4rPgIfPv4rAdU+AdUAAgAAAAAD9AOlAAMADAAANyE1ISUnBxc3JwcRIwwD6PwYAcWjLO7uLKI/Wj+hoSvs6iyhAm0AAAABAAAAAAP0A/QACwAAAREhFSERMxEhNSERAeH+KwHVPgHV/isD9P4rPv4rAdU+AdUAAAAAAgAAAAADdwP0AAMADAAANyE1ISUBBwkBJwERI4kC7v0SAVj+0SkBdgF4Kf7RPgw+rQEJL/64AUgv/vgC/AAAAAEAAAAAA/QD9AALAAABIRUhETMRITUhESMB2v4yAc5MAc7+MkwCJkz+MgHOTAHOAAIAAAAAA/QDzQADAAcAADchNSE1KQEBDAPo/BgB9AH0/gwzpZUCYAACAAAAAAP0A80AAwAHAAA3ITUhNSkBAQwD6PwYAfQB9P4MM6WVAmAAAAASAN4AAQAAAAAAAAABAAAAAQAAAAAAAQAMAAEAAQAAAAAAAgAHAA0AAQAAAAAAAwAMABQAAQAAAAAABAAMACAAAQAAAAAABQALACwAAQAAAAAABgAMADcAAQAAAAAACgAsAEMAAQAAAAAACwASAG8AAwABBAkAAAACAIEAAwABBAkAAQAYAIMAAwABBAkAAgAOAJsAAwABBAkAAwAYAKkAAwABBAkABAAYAMEAAwABBAkABQAWANkAAwABBAkABgAYAO8AAwABBAkACgBYAQcAAwABBAkACwAkAV8gYnV0dG9uLWljb25zUmVndWxhcmJ1dHRvbi1pY29uc2J1dHRvbi1pY29uc1ZlcnNpb24gMS4wYnV0dG9uLWljb25zRm9udCBnZW5lcmF0ZWQgdXNpbmcgU3luY2Z1c2lvbiBNZXRybyBTdHVkaW93d3cuc3luY2Z1c2lvbi5jb20AIABiAHUAdAB0AG8AbgAtAGkAYwBvAG4AcwBSAGUAZwB1AGwAYQByAGIAdQB0AHQAbwBuAC0AaQBjAG8AbgBzAGIAdQB0AHQAbwBuAC0AaQBjAG8AbgBzAFYAZQByAHMAaQBvAG4AIAAxAC4AMABiAHUAdAB0AG8AbgAtAGkAYwBvAG4AcwBGAG8AbgB0ACAAZwBlAG4AZQByAGEAdABlAGQAIAB1AHMAaQBuAGcAIABTAHkAbgBjAGYAdQBzAGkAbwBuACAATQBlAHQAcgBvACAAUwB0AHUAZABpAG8AdwB3AHcALgBzAHkAbgBjAGYAdQBzAGkAbwBuAC4AYwBvAG0AAAAAAgAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAQIBAwEEAQUBBgEHAQgBCQEKAQsBDAENAQ4ACm1lZGlhLXBsYXkLbWVkaWEtcGF1c2UQLWRvd25sb2FkLTAyLXdmLQltZWRpYS1lbmQHYWRkLW5ldwtuZXctbWFpbC13ZhB1c2VyLWRvd25sb2FkLXdmDGV4cGFuZC0wMy13Zg5kb3dubG9hZC0wMi13ZgphZGQtbmV3XzAxC21lZGlhLWVqZWN0Dm1lZGlhLWVqZWN0LTAxAAA=) format('truetype');
        font-weight: normal;
        font-style: normal;
    }
    .e-btn-sb-icons {
        font-family: 'button-icons';
        line-height: 1;
        font-style: normal;
        font-weight: normal;
        font-variant: normal;
        text-transform: none;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }
    .e-play-icon::before {
        content: '\e701';
    }
    .e-pause-icon::before {
        content: '\e705';
    }
    .e-open-icon::before {
        content: '\e70d';
    }
    .e-add-icon::before {
        content: '\e70a';
    }
    .e-custom {
        width: 80px;
    }
</style>