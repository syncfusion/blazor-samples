@page "/rich-text-editor/mention-integration"

@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.RichTextEditor

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample shows how to integrate @@Mention component within Rich Text Editor component. Type @@ character and select a user from the suggestion list.</p>
</SampleDescription>
<ActionDescription>
    <p> The @@Mention is a component used to display a list of items that users can select or tag from the suggested list. In this demo, configured the following properties with popup dimensions.</p>
    <ul>
        <li><code>AllowSpaces</code> - Allows to search a word with space.</li>
        <li><code>SuggestionCount</code> - Control the items in suggestion list.</li>
        <li><code>ItemTemplate</code> - Used to display the customized appearance in suggestion list.</li>
    </ul>
</ActionDescription>
<div class="control-section">
    <SfRichTextEditor ID="mentionIntegration">
        <p>Hello <span contenteditable="false" class="e-mention-chip"><a href="mailto:maria@gmail.com" title="maria@gmail.com">@@Maria</a></span>,</p>
        <p>Welcome to the mention integration with rich text editor demo. Type <code>@@</code> character and tag user from the suggestion list. </p>
    </SfRichTextEditor>
</div>
     <div id="mention_integration">
    <SfMention TItem="PersonData" Target="#mentionIntegration .e-rte-content .e-content" DataSource="@EmailData" SuggestionCount=8 AllowSpaces="true" PopupHeight="200px" PopupWidth="250px" SuffixText="&nbsp">
            <ItemTemplate>
                <table>
                    <tr>
                        <td><div id="mention-TemplateList"><img class="mentionEmpImage" src="@(SampleService.WebAssetsPath)images/dropdown-list/employees/@((context as PersonData).EmployeeImage).png" alt="Employee Profile" />
                            <span class="e-badge e-badge-success e-badge-overlap e-badge-dot e-badge-bottom @((context as PersonData).Status)"></span></div></td>
                        <td><span class="person">@((context as PersonData).Name)</span><span class="email">@((context as PersonData).EmailId)</span></td>
                    </tr>
                </table>
            </ItemTemplate>
            <DisplayTemplate>
                <a href="mailto:@((context as PersonData).EmailId)" title="@((context as PersonData).EmailId)">@@@((context as PersonData).Name)</a>
            </DisplayTemplate>
            <ChildContent>
            <MentionFieldSettings Text="Name"></MentionFieldSettings>
            </ChildContent>
        </SfMention>
    </div>

<style>
    #mention-TemplateList {
        position: relative;
        display: inline-block;
        padding: 2px;
    }
    .person, .email {
        display: block;
        line-height: 20px;
        text-indent: 5px;
    }
    .person {
        font-size: 16px;
    }
    .mentionEmpImage {
        display: inline-block;
        width: 46px;
        height: 46px;
        padding: 3px;
        border-radius: 25px;
    }
    #mention-TemplateList .e-badge-success {
        left: 76%;
        bottom: 4px;
        top: auto;
    }
    #mention_integration_rte-edit-view_popup .e-dropdownbase .e-list-item {
        line-height: 8px;
    }
    #mention-TemplateList .e-badge-success {
        background-color: #4d841d;
		color: #fff;
    }
    #mention-TemplateList .e-badge-success.away {
        background-color: #fedd2d;
		color: #fff;
    }
	#mention-TemplateList .e-badge-success.busy {
        background-color: #de1a1a;
		color: #fff;
    }
    #mention-TemplateList .e-badge.e-badge-dot {
        height: 10px;
        width: 10px;
    }
    #mention_integration .e-mention-chip{
        cursor: pointer;
    }
</style>

@code {
    public class PersonData
    {
        public string Name { get; set; }
        public string EmailId { get; set; }
        public string EmployeeImage { get; set; }
        public string Status { get; set; }
    }

    private List<PersonData> EmailData = new List<PersonData>
    {
        new PersonData() { Name = "Selma Rose", Status = "active", EmployeeImage = "2", EmailId = "selma@gmail.com" },
        new PersonData() { Name = "Russo Kay", Status = "away", EmployeeImage = "8", EmailId = "russo@gmail.com" },
        new PersonData() { Name = "Camden Kate", Status = "busy", EmployeeImage = "9", EmailId = "camden@gmail.com" },
        new PersonData() { Name = "Garth", Status = "active", EmployeeImage = "7", EmailId = "garth@gmail.com" },
        new PersonData() { Name = "Ursula Ann", Status = "busy", EmployeeImage = "3", EmailId = "ursula@gmail.com" },
        new PersonData() { Name = "Margaret", Status = "active", EmployeeImage = "10", EmailId = "margaret@gmail.com" },
        new PersonData() { Name = "Laura Grace", Status = "away", EmployeeImage = "1", EmailId = "laura@gmail.com" },
        new PersonData() { Name = "Robert", Status = "busy", EmployeeImage = "dp", EmailId = "robert@gmail.com" },
        new PersonData() { Name = "Albert", Status = "away", EmployeeImage = "8", EmailId = "albert@gmail.com" },
        new PersonData() { Name = "Michale", Status = "active", EmployeeImage = "4", EmailId = "michale@gmail.com" },
        new PersonData() { Name = "Andrew James", Status = "active", EmployeeImage = "db", EmailId = "james@gmail.com" },
        new PersonData() { Name = "William", Status = "active", EmployeeImage = "10", EmailId = "william@gmail.com" }
    };
}
