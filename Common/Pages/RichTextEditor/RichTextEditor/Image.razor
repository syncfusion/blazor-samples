
@page "/rich-text-editor/image"

@using Syncfusion.Blazor.RichTextEditor
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the option to insert an image into the Rich Text Editor content. Click the <b>Insert Image</b> button in the toolbar item to insert an image.</p>
</SampleDescription>
<ActionDescription>
   <p>When you select an image in Rich Text Editor, a quick toolbar appears with tools for customizing the image. The quick toolbar has the following items,
        <ul>
            <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.html#Syncfusion_Blazor_RichTextEditor_ImageToolbarCommand_Replace" aria-label="Class reference of Replace property in Rich Text Editor">Replace</a> - To replace the image with some other image.</li>
            <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.html#Syncfusion_Blazor_RichTextEditor_ImageToolbarCommand_Align" aria-label="Class reference of Align property in Rich Text Editor">Align</a> - Align the image with left, right and justify.</li>
            <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.html#Syncfusion_Blazor_RichTextEditor_ImageToolbarCommand_Caption" aria-label="Class reference of Image Captions property in Rich Text Editor">Image Captions</a> - Set the captions for the image.</li>
            <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.html#Syncfusion_Blazor_RichTextEditor_ImageToolbarCommand_Dimension" aria-label="Class reference of Change Size property in Rich Text Editor">Change Size</a> - Modify width and height of the image.</li>
            <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.html#Syncfusion_Blazor_RichTextEditor_ImageToolbarCommand_Remove" aria-label="Class reference of Delete property in Rich Text Editor">Delete</a> - Delete the image.</li>
            <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.html#Syncfusion_Blazor_RichTextEditor_ImageToolbarCommand_InsertLink" aria-label="Class reference of Link property in Rich Text Editor">Link</a> - Provide the link to the image.</li>
            <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.html#Syncfusion_Blazor_RichTextEditor_ImageToolbarCommand_Display" aria-label="Class reference of Display property in Rich Text Editor">Display</a> - To wrap text around the image using inline and break options.</li>
            <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.html#Syncfusion_Blazor_RichTextEditor_ImageToolbarCommand_AltText" aria-label="Class reference of Alternate Text property in Rich Text Editor">Alternate Text</a> - Provide an alternative text that will be displayed if the image is not available in the location.</li>
            <li><a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.ImageToolbarCommand.html#Syncfusion_Blazor_RichTextEditor_ImageToolbarCommand_Remove" aria-label="Class reference of Remove property in Rich Text Editor">Remove</a> – Remove the image from Rich Text Editor.</li>
        </ul>
        Additionally, to resize the image, select it and drag a corner handle.
        The commands displayed in the quick toolbar can be customized using properties of <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.RichTextEditorQuickToolbarSettings.html" aria-label="Class reference of RichTextEditorQuickToolbarSettings">RichTextEditorQuickToolbarSettings</a>.</p>
</ActionDescription>

<div class="col-lg-8 control-section" id="target">
    <div class="control-wrapper">
        <div class="sample-container">
            <div class="default-section">
                <SfRichTextEditor EnableAutoUrl="@AutoUrl">
                    <h2>Insert Image in Rich Text Editor!<br></h2><p>You can insert and edit images within this editor. Click inside the editor and use the <strong>image tool</strong> to add an image.</p><h5>What You Can Do</h5>
                    <ul><li><strong>Insert Images:</strong> Upload images from local storage or provide an image URL.</li>
                    <li><strong>Resize &amp; Drag:</strong> Easily adjust image dimensions and reposition them within the content.</li>
                    <li><strong>Align Images:</strong> Set images to align <strong>left, center, or right</strong>.</li>
                    <li><strong>Caption Support:</strong> Add captions to describe your images.</li>
                    <li><strong>Replace &amp; Remove:</strong> Change or delete images as needed.</li></ul><h5>Try It Out!</h5><p><img id="rteImageID" style="width: 300px; height: 300px; transform: rotate(0deg);" alt="Sky" src="https://cdn.syncfusion.com/ej2/richtexteditor-resources/RTE-Portrait.png" class="e-rte-image e-imginline"></p>
                    <RichTextEditorQuickToolbarSettings Image="@ImageTools" />
                    <RichTextEditorImageSettings SaveFormat="@SaveType"></RichTextEditorImageSettings>
                </SfRichTextEditor>
            </div>
        </div>
    </div>
</div>
<div class="property-section-title">Properties</div>
<div class="col-lg-4 property-section">
    <div id="property" title="Properties" class="property-panel-table">
        <table id="property" title="Properties">
            <tbody>
                <tr>
                    <td>
                        <div>Enable AutoUrl </div>
                    </td>
                    <td>
                        <div class="checkbox-container">
                            <SfCheckBox @bind-Checked="@Checkbox1" ValueChange="ReadOnlyChange" TChecked="bool" aria-label="Enable Auto Image URL detection" />
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>Save Format </div>
                    </td>
                    <td>
                        <div>
                            <SfDropDownList TItem="SaveFormatOptions" TValue="SaveFormat" PopupHeight="200px" @bind-Value="@DropValue" DataSource="@Options">
                                <DropDownListFieldSettings Text="Text" Value="Value" />
                                <DropDownListEvents TValue="SaveFormat" TItem="SaveFormatOptions" ValueChange="ValueChange" />
                            </SfDropDownList>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<style>
    .property-section-title {
        padding-top: 20px;
        font-size: 16px;
        font-weight: 600;
    }

    .property-section {
        padding-top: 20px;
    }

    .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before {
        content: "\e341";
    }

    .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before {
        content: "\e354";
    }

    .bootstrap4 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before {
        content: "\e752";
    }

    .bootstrap4 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before {
        content: "\e778";
    }

    .tailwind .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,
    .tailwind-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,
    .tailwind3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,
    .tailwind3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before {
        content: "\e7bd";
    }

    .tailwind .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,
    .tailwind-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,
    .tailwind3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,
    .tailwind3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before {
        content: "\e7b9";
    }

    .bootstrap5 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,
    .bootstrap5-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,
    .bootstrap5\.3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,
    .bootstrap5\.3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,
    .fluent .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,
    .fluent-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,
    .fluent2 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,
    .fluent2-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,
    .material3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before,
    .material3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-left::before {
        content: "\e713";
    }

    .bootstrap5 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,
    .bootstrap5-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,
    .bootstrap5\.3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,
    .bootstrap5\.3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,
    .fluent .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,
    .fluent-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,
    .fluent2 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,
    .fluent2-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,
    .material3 .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before,
    .material3-dark .e-rte-quick-popup .e-rte-quick-toolbar .e-rotate-right::before {
        content: "\e755";
    }
    
    .property-panel-table div {
        padding : 10px;
    }

    .checkbox-container{
        padding-left: 0px !important;
    }
</style>

@code {
    private SaveFormat SaveType = SaveFormat.Blob;
    private SaveFormat DropValue { get; set; } = SaveFormat.Blob;
    private bool AutoUrl = false;
    private bool Checkbox1 { get; set; } = false;

    private List<SaveFormatOptions> Options = new List<SaveFormatOptions>()
    {
        new SaveFormatOptions() { Value = SaveFormat.Blob, Text = "Blob" },
        new SaveFormatOptions() { Value = SaveFormat.Base64, Text = "Base64" },
    };
    private class SaveFormatOptions
    {
        public SaveFormat Value { get; set; }
        public string Text { get; set; }
    }
    private void ValueChange(@Syncfusion.Blazor.DropDowns.ChangeEventArgs<SaveFormat, SaveFormatOptions> args) => this.SaveType = args.ItemData.Value;
    private void ReadOnlyChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        this.AutoUrl = args.Checked;
    }
    private List<ImageToolbarItemModel> ImageTools = new List<ImageToolbarItemModel>()
{
        new ImageToolbarItemModel() { Command = ImageToolbarCommand.Replace },
        new ImageToolbarItemModel() { Command = ImageToolbarCommand.Align },
        new ImageToolbarItemModel() { Command = ImageToolbarCommand.Caption },
        new ImageToolbarItemModel() { Command = ImageToolbarCommand.Remove },
        new ImageToolbarItemModel() { Command = ImageToolbarCommand.Separator },
        new ImageToolbarItemModel() { Command = ImageToolbarCommand.InsertLink },
        new ImageToolbarItemModel() { Command = ImageToolbarCommand.Display },
        new ImageToolbarItemModel() { Command = ImageToolbarCommand.AltText },
        new ImageToolbarItemModel() { Command = ImageToolbarCommand.Dimension }
    };
}
