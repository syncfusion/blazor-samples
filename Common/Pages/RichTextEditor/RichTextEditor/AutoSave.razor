@page "/rich-text-editor/auto-save"

@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.RichTextEditor

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>
        This sample demonstrates how to save the Rich Text Editor’s content automatically at regular intervals. The following demo saves the content after 5 seconds of idle time from last typed time.
    </p>
</SampleDescription>
<ActionDescription>
    <p>The Rich Text Editor saves its content automatically when you focus out the editor, and you can save its content automatically at regular intervals based on the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.html#Syncfusion_Blazor_RichTextEditor_SfRichTextEditor_SaveInterval" aria-label="Class reference of SaveInterval property in Rich Text Editor">SaveInterval</a> and <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.html#Syncfusion_Blazor_RichTextEditor_SfRichTextEditor_AutoSaveOnIdle" aria-label="Class reference of AutoSaveOnIdle property in Rich Text Editor">AutoSaveOnIdle</a> properties while editing.
        <ul>
            <li>If <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.html#Syncfusion_Blazor_RichTextEditor_SfRichTextEditor_AutoSaveOnIdle" aria-label="Class reference of AutoSaveOnIdle property in Rich Text Editor">AutoSaveOnIdle</a> is set to true, the content is saved if the editor is idle for the number of milliseconds specified in the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.html#Syncfusion_Blazor_RichTextEditor_SfRichTextEditor_SaveInterval" aria-label="Class reference of SaveInterval property in Rich Text Editor">SaveInterval</a> property.</li>
            <li>If <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.html#Syncfusion_Blazor_RichTextEditor_SfRichTextEditor_AutoSaveOnIdle" aria-label="Class reference of AutoSaveOnIdle property in Rich Text Editor">AutoSaveOnIdle</a> is set to false, the editor saves the content at the regular interval of milliseconds specified in the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.html#Syncfusion_Blazor_RichTextEditor_SfRichTextEditor_SaveInterval" aria-label="Class reference of SaveInterval property in Rich Text Editor">SaveInterval</a> property.</li>
        </ul>
        <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.html#Syncfusion_Blazor_RichTextEditor_SfRichTextEditor_AutoSaveOnIdle" aria-label="Class reference of AutoSaveOnIdle property in Rich Text Editor">AutoSaveOnIdle</a> is set to <code>true</code> in this demo, and the <a href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.RichTextEditor.SfRichTextEditor.html#Syncfusion_Blazor_RichTextEditor_SfRichTextEditor_SaveInterval" aria-label="Class reference of SaveInterval property in Rich Text Editor">SaveInterval</a> is set to 5 seconds.
    </p>
</ActionDescription>

<div class="col-lg-8 control-section">
    <div class="control-wrapper">
        <div class="sample-container">
            <div class="default-section">
                <SfRichTextEditor ID="AutoSave" SaveInterval="_saveInterval" AutoSaveOnIdle="true" Placeholder="Start to type a content to save">
                    <h2>Welcome to the Rich Text Editor Demo!📝</h2><p style="text-align: start;">Experience the power of modern content editing with advanced formatting, media embedding, and many other features. You can explore this demo for yourself.</p><h5>Explore the Possibilities! 🚀</h5>
                    <ul><li><b>Highly customizable</b> -&nbsp;You can configure the toolbar, enable/disable features, and fine-tune the editing experience to match your needs.</li><li><b>Seamless content pasting</b> -&nbsp;Copy and paste from Microsoft Word, Outlook, or other editors or sources while preserving formatting, styles, and structure.</li><li><b>Import Word documents</b> -&nbsp;Convert <b>DOCX</b><b> files</b> into editable HTML content inside the editor using the Import from Word feature.</li><li><b>One-click Export</b> -&nbsp;Save your document as <b>PDF</b> 📄 or <b>Word (DOCX)</b> 📝 with just a single click.</li><li><b>@@Mentions</b> -&nbsp;Type&nbsp;<span class="e-mention-chip"><a href="mailto:albert@gmail.com" title="albert@gmail.com">@@Albert</a></span> to see available suggestions and tag users in your content.</li><li><b>Image Management</b> -&nbsp;Use the File Manager to browse, upload, and manage images within the editor.</li></ul><p><br /></p><h5>Powerful Features!</h5><p>A quick overview of the essential features of the Rich Text Editor.<br /></p>
                    <table class="e-rte-table" style="width: 61.0405%; min-width: 0px; height: 82px;"><thead style="height: 31.7073%;"><tr style="height: 31.7073%;"><th class="" style="width: 29.9807%;">Feature<br /></th><th class="" style="width: 70.0193%;">Description<br /></th></tr></thead><tbody><tr style="height: 34.1463%;"><td class="" style="width: 29.981%;">Text Formatting<br /></td><td style="width: 70.0193%;" class="">Bold, Italic, Underline, Strikethrough, and more.<br /></td></tr><tr style="height: 34.1463%;"><td style="width: 29.9807%;" class="">Lists &amp; Indentation<br /></td><td style="width: 70.019%;" class="">Ordered, unordered, nested lists.<br /></td></tr><tr><td style="width: 29.9807%;">Tables<br /></td><td style="width: 70.019%;" class="">Insert and edit tables with styling.<br /></td></tr><tr><td style="width: 29.9807%;">Media Embedding<br /></td><td style="width: 70.019%;" class="">Images, videos, and iframes.<br /></td></tr><tr><td style="width: 29.9807%;">Mentions<br /></td><td style="width: 70.019%;" class="">Tag users and add comments<br /></td></tr></tbody></table><p><br /></p><h5>Effortless Image Handling!</h5><p>Insert, resize, align, and manage images seamlessly within the editor.<br /></p><p style="text-align: center;"><img alt="Sky with sun" src="https://cdn.syncfusion.com/ej2/richtexteditor-resources/RTE-Overview.png" width="400" height="200" style="" class="e-rte-image e-imgcenter" /></p><p><br /></p><p style="text-align: center;"><b>"Great writing begins with a great editor."</b><b> ✍️</b> <br /></p>
                    <RichTextEditorToolbarSettings Items="@Items" />
                    <RichTextEditorEvents ValueChange="UpdateStatus" />
                </SfRichTextEditor>
                <div id='statusEle' class='current-status'>
                    <div id='saving' class="@_savingClass">
                        <div class="e-icons e-icon-refresh"> </div>
                        <p class='status-text'> Saving changes</p>
                    </div>
                    <div id='saved' class="@_savedClass">
                        <span class="e-icons e-icon-tick"> </span>
                        <p class='status-text'>Changes saved</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-lg-4 property-section">
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <div id="property" title="Properties" class="property-panel-table">
                <SfCheckBox Label="Auto Save" @bind-Checked="_switchChecked" ValueChange="OnChange" TChecked=bool/>
            </div>
        </div>
    </div>
</div>

@code{
    private bool _switchChecked { get; set; } = true;
    private int _saveInterval { get; set; } = 5000;
    private string _savedClass { get; set; } = "hide";
    private string _savingClass { get; set; } = "hide";
    
    private List<ToolbarItemModel> Items = new List<ToolbarItemModel>()
    {
        new ToolbarItemModel() { Command = ToolbarCommand.Bold },
        new ToolbarItemModel() { Command = ToolbarCommand.Italic },
        new ToolbarItemModel() { Command = ToolbarCommand.Underline },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.Formats },
        new ToolbarItemModel() { Command = ToolbarCommand.Alignments },
        new ToolbarItemModel() { Command = ToolbarCommand.Blockquote },
        new ToolbarItemModel() { Command = ToolbarCommand.OrderedList },
        new ToolbarItemModel() { Command = ToolbarCommand.UnorderedList },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.CreateLink },
        new ToolbarItemModel() { Command = ToolbarCommand.Image },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.SourceCode },
        new ToolbarItemModel() { Command = ToolbarCommand.Undo },
        new ToolbarItemModel() { Command = ToolbarCommand.Redo }
    };

    private async Task OnChange(ChangeEventArgs<bool> args)
    {
        this._saveInterval = args.Checked ? 5000 : 0;
        await Task.Delay(500);
        this._savedClass = this._savedClass = "hide";
    }

    private async Task UpdateStatus(Syncfusion.Blazor.RichTextEditor.ChangeEventArgs args)
    {
        if (this._switchChecked)
        {
            this._savingClass = "show";
            this._savedClass = "hide";
            // Place the codes here, which save the Rich Text Editor value into database.
            await Task.Delay(500);
            this._savingClass = "hide";
            this._savedClass = "show";   
        }
    }
}

<style>
    .current-status {
        float: right;
        padding: 11px;
        margin-right: 22px;
        font-size: 12px;
        display: inline-block;
    }

    .hide {
        display: none;
    }

    .show {
        display: block;
    }

    .e-icons.e-icon-refresh::before {
        content: "\e606";
    }

    .e-icons.e-icon-tick::before {
        content: "\e614";
    }

    .bootstrap4 .e-icons.e-icon-refresh::before {
        content: "\e710";
    }
    
    .bootstrap4 .e-icons.e-icon-tick::before {
        content: "\e718";
    }

    .tailwind .e-icons.e-icon-refresh::before,
    .tailwind-dark .e-icons.e-icon-refresh::before,
    .tailwind3 .e-icons.e-icon-refresh::before,
    .tailwind3-dark .e-icons.e-icon-refresh::before {
        content: "\e711";
    }

    .tailwind .e-icons.e-icon-tick::before,
    .tailwind-dark .e-icons.e-icon-tick::before,
    .tailwind3 .e-icons.e-icon-tick::before,
    .tailwind3-dark .e-icons.e-icon-tick::before {
        content: "\e75d";
    }

    .bootstrap5 .e-icons.e-icon-refresh::before,
    .bootstrap5-dark .e-icons.e-icon-refresh::before,
    .bootstrap5\.3 .e-icons.e-icon-refresh::before,
    .bootstrap5\.3-dark .e-icons.e-icon-refresh::before,
    .fluent .e-icons.e-icon-refresh::before,
    .fluent-dark .e-icons.e-icon-refresh::before,
    .fluent2 .e-icons.e-icon-refresh::before,
    .fluent2-dark .e-icons.e-icon-refresh::before,
    .material3 .e-icons.e-icon-refresh::before,
    .material3-dark .e-icons.e-icon-refresh::before{
        content: "\e706";
    }

    .bootstrap5 .e-icons.e-icon-tick::before,
    .bootstrap5-dark .e-icons.e-icon-tick::before,
    .bootstrap5\.3 .e-icons.e-icon-tick::before,
    .bootstrap5\.3-dark .e-icons.e-icon-tick::before,
    .fluent .e-icons.e-icon-tick::before,
    .fluent-dark .e-icons.e-icon-tick::before,
    .fluent2 .e-icons.e-icon-tick::before,
    .fluent2-dark .e-icons.e-icon-tick::before,
    .material3 .e-icons.e-icon-tick::before,
    .material3-dark .e-icons.e-icon-tick::before
    {        
        content: "\e774";
    }

    .status-text {
        padding: 4px;
    }

    .e-icon-refresh {
        width: 10px;
        display: inline-block;
        animation: spin 2s linear infinite;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .status-text {
        font-size: 14px;
        display: inline-block;
    }
</style>