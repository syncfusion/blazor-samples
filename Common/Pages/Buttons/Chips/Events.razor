@page "/chips/events"

@using Syncfusion.Blazor.Buttons
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the events that trigger on every action of the Chips component. The event details are showcased in the event trace panel.</p>
</SampleDescription>
<ActionDescription>
    <p>In this demo, the Chips component performs the following actions which can be traced by the event trace panel.</p>
    <ul>
        <li><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Buttons.ChipEvents.html#Syncfusion_Blazor_Buttons_ChipEvents_Created" aria-label="Class reference of Created event in Chip">Created</a> - Triggers when the chip is created.</li>
        <li><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Buttons.ChipEvents.html#Syncfusion_Blazor_Buttons_ChipEvents_OnBeforeClick" aria-label="Class reference of OnBeforeClick event in Chip" >OnBeforeClick</a> - Triggers before the chip gets clicked.</li>
        <li><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Buttons.ChipEvents.html#Syncfusion_Blazor_Buttons_ChipEvents_OnClick" aria-label="Class reference of OnClick event in Chip">OnClick</a> - Triggers when the chip item is clicked.</li>
        <li><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Buttons.ChipEvents.html#Syncfusion_Blazor_Buttons_ChipEvents_OnDelete" aria-label="Class reference of OnDelete event in Chip">OnDelete</a> - Triggers before the chip item is deleted.</li>
        <li><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Buttons.ChipEvents.html#Syncfusion_Blazor_Buttons_ChipEvents_Deleted" aria-label="Class reference of Deleted event in Chip">Deleted</a> - Triggers after the chip item is deleted.</li>
        <li><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Buttons.ChipEvents.html#Syncfusion_Blazor_Buttons_ChipEvents_Destroyed" aria-label="Class reference of Destroyed event in Chip">Destroyed</a> - Triggers when the component is destroyed.</li>
    </ul>
    <p>For more information, refer to the <a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Buttons.ChipEvents.html" aria-label="Class reference of ChipEvents"> Events </a> from the documentation.</p>
</ActionDescription>


<div class="col-lg-8 control-section sb-property-border chip-container">
    <div id="chip-wrapper">
        <SfChip EnableDelete="true">
            <ChipEvents Created="@Created"
                        OnBeforeClick="@OnBeforeClick"
                        OnClick="@OnClick"
                        OnDelete="@OnDelete"
                        Deleted="@Deleted"></ChipEvents>
            <ChipItems>
                <ChipItem Text="Apple" CssClass="e-primary"></ChipItem>
                <ChipItem Text="Microsoft" CssClass="e-info"></ChipItem>
                <ChipItem Text="Google" CssClass="e-success"></ChipItem>
                <ChipItem Text="Tesla" CssClass="e-warning"></ChipItem>
                <ChipItem Text="Intel" CssClass="e-danger"></ChipItem>
            </ChipItems>
        </SfChip>
    </div>
</div>
<div class="col-lg-4 property-section">
    <div class="property-panel-section">
        <div class="property-panel-header">Event Trace</div>
        <div class="property-panel-content">
            <table id="property" class="property-panel-table">
                <tbody>
                    <tr>
                        <td>
                            <div class="eventarea">
                                <div class="EventLog" id="EventLog" style="word-break: normal;">
                                    <span>@((MarkupString)EventLog)</span>
                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="event-btn">
                                <button class="e-btn e-outline" @onclick="ClearLog">Clear log</button>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@code{
    private string EventLog = string.Empty;
    
    // Clears the event log.
    public void ClearLog()
    {
        this.EventLog = string.Empty;
    }
    // Specifies the event handler for the Created event.
    private void Created(object args)
    {
        this.EventLog = this.EventLog + "<span><b>Created</b> event is triggered<hr></span>";
    }
    // Specifies the event handler for the OnBeforeClick event.
    private void OnBeforeClick(Syncfusion.Blazor.Buttons.ChipEventArgs args)
    {
        this.EventLog = this.EventLog + "<span><b>OnBeforeClick</b> event is triggered<hr></span>";
    }
    // Specifies the event handler for the OnClick event.
    private void OnClick(Syncfusion.Blazor.Buttons.ChipEventArgs args)
    {
        this.EventLog = this.EventLog + "<span><b>OnClick</b> event is triggered<hr></span>";
    }
    // Specifies the event handler for the OnDelete event.
    private void OnDelete(Syncfusion.Blazor.Buttons.ChipEventArgs args)
    {
        this.EventLog = this.EventLog + "<span><b>OnDelete</b> event is triggered<hr></span>";
    }
    // Specifies the event handler for the Deleted event.
    private void Deleted(Syncfusion.Blazor.Buttons.ChipDeletedEventArgs args)
    {
        this.EventLog = this.EventLog + "<span><b>Deleted</b> event is triggered<hr></span>";
    }
}

<style>
    /* Sample specific styles */
    .control-wrapper {
        margin: 0 auto;
    }

    #chip-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 100px;
    }

    .eventarea {
        height: 245px;
        overflow: auto;
    }

    .event-btn {
        padding-bottom: 10px
    }
    /* Sample level event log related styles */
    #EventLog b {
        color: #388e3c;
    }

    #EventLog hr {
        margin: 1px 10px 1px 0px;
        border-top: 1px solid #eee;
    }
</style>
