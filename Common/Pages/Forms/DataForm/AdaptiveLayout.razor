@page "/data-form/adaptive-layout"

@*Hidden:Lines*@
@using BlazorDemos.Models.Form;
@inherits SampleBaseComponent
@*End:Hidden*@

@using Syncfusion.Blazor
@using Syncfusion.Blazor.DataForm
@using Syncfusion.Blazor.Inputs


<SampleDescription>
    <p>The example below demonstrates the adaptive layout structure of the Blazor Data Form component. The form fields' dimensions dynamically adjust when the screen size changes or when rendered on various devices with differing screen dimensions. This feature can be implemented using the <a href="https://www.syncfusion.com/blazor-components/blazor-media-query" aria-label="Blazor Media Query">Blazor Media Query</a> component.</p>
</SampleDescription>

<ActionDescription>
    <p>Blazor Media Query consists of three breakpoints. For the <code>Small</code> screen size (less than or equal to 768px), both the FormGroup and FormItems column will be singular. For the <code>Medium</code> screen size (between 768px and 1024px), the FormGroup column will be dual, and FormFields, if rendered with half the column size, will change to full width. For the <code>Large</code> screen size (greater than or equal to 1024px), both the Form and FormGroup will consist of two columns; if the <code>ColumnSpan</code> property is specified, the FormFields will also split.</p>
</ActionDescription>


<div class="col-lg-12 control-section">
    <div class="control-wrapper">
        <SfMediaQuery ActiveBreakpointChanged="LayoutChangedhandler"></SfMediaQuery>
        <SfDataForm ID="MyForm"
                    Model="@_orderDetailsModel"
                    ColumnCount="@FormColumn"
                    ColumnSpacing="50px"
                    ButtonsAlignment="FormButtonsAlignment.Right">
            <FormValidator>
                <DataAnnotationsValidator></DataAnnotationsValidator>
            </FormValidator>
            <FormItems>
                <FormGroup LabelText="User Information">
                    <FormItem Field="@nameof(_orderDetailsModel.FirstName)" Placeholder="Enter first name"/>
                    <FormItem Field="@nameof(_orderDetailsModel.LastName)" Placeholder="Enter last name"/>
                    <FormItem Field="@nameof(_orderDetailsModel.EmailID)" Placeholder="someone@example.com"/>
                    <FormItem Field="@nameof(_orderDetailsModel.PhoneNumber)" >
                        <Template>
                            <label class="e-form-label">Phone Number</label>
                            <SfMaskedTextBox Mask="+(00) 0000000000" Placeholder="eg. +12 1234567890" @bind-Value="@_orderDetailsModel.PhoneNumber"></SfMaskedTextBox>
                        </Template>
                    </FormItem>
                    <FormItem Field="@nameof(_orderDetailsModel.AcceptTerms)" EditorType="FormEditorType.Switch"/>
                </FormGroup>
                <FormGroup LabelText="Shipping Address" ColumnCount="2" ColumnSpacing="20px">
                    <FormItem Field="@nameof(_orderDetailsModel.Country)" ColumnSpan="1" Placeholder="e.g. Australia"/>
                    <FormItem Field="@nameof(_orderDetailsModel.City)" ColumnSpan="1" LabelText="City" Placeholder="e.g. Brisbane" />
                    <FormItem Field="@nameof(_orderDetailsModel.ShippedDate)" ColumnSpan="2" LabelText="Shipped Date" EditorType="FormEditorType.DatePicker" Placeholder="M/d/yyyy"/>
                    <FormItem Field="@nameof(_orderDetailsModel.AddressLine)" ColumnSpan="2" EditorType="FormEditorType.TextArea" LabelText="Address Line" Placeholder="e.g. House number and street name."/>
                    <FormItem Field="@nameof(_orderDetailsModel.AddressLine2)" ColumnSpan="2" EditorType="FormEditorType.TextArea" LabelText="Address Line 2" Placeholder="e.g. Apartment, suite, unit, etc.. (Optional)"/>
                </FormGroup>
            </FormItems>
        </SfDataForm>
    </div>
</div>
<style>
    .control-wrapper {
        max-width: 100%;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }
</style>
@code {
    public int FormItemColumnSpan = 2;
    public int FormGroupColumn = 2;
    public int FormColumn = 2;
    public void LayoutChangedhandler(string activeBreakpoint)
    {
        if (activeBreakpoint == "Small")
        {
            FormGroupColumn = FormColumn = 1;
        }
        else if (activeBreakpoint == "Medium")
        {
            FormColumn = 2;
            FormItemColumnSpan = 1;
        }
        else
        {
            FormColumn = FormGroupColumn = FormItemColumnSpan = 2;
        }
    }

    // private string activeBreakpoint { get; set; } = "Large";
    private OrderDetails _orderDetailsModel = new OrderDetails();
}
