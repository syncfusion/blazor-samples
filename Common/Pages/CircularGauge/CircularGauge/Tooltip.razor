@page "/circular-gauge/tooltip"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.CircularGauge
@using ThemeHelper
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample helps in visualizing the tooltip of the pointer and the range in a circular gauge.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to display the tooltip for the pointer and the range in a circular gauge. The <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeTooltipSettings.html" aria-label="Class reference of CircularGaugeTooltipSettings">CircularGaugeTooltipSettings</a> is used to enable and customize the tooltip. To see the tooltip in action, hover your mouse over the pointer or the range, or tap them on touch-enabled devices.</p>
    <p>More information on the tooltip can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/circular-gauge/user-interaction/#showing-tooltip-at-mouse-position" aria-label="Blazor Circular Gauge Tooltip documentation" >documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <SfCircularGauge EnablePointerDrag="true" AnimationDuration="2000" Theme="@Theme" Background="transparent">
        <CircularGaugeTitleStyle Size="15px" Color="grey" FontFamily="inherit" />
        <CircularGaugeAxes>
            <CircularGaugeAxis StartAngle="240" EndAngle="120" Minimum="0" Maximum="120" Radius="90%">
                <CircularGaugeAxisLabelStyle UseRangeColor="true">
                    <CircularGaugeAxisLabelFont FontFamily="inherit"></CircularGaugeAxisLabelFont>
                </CircularGaugeAxisLabelStyle>
                <CircularGaugeAxisLineStyle Width="0" />
                <CircularGaugeAxisMajorTicks Height="10" Offset="-3.7" Color="white" />
                <CircularGaugeAxisMinorTicks Width="0" />
                <CircularGaugePointers>
                    <CircularGaugePointer Value=70 Radius="60%" Color="#33BCBD">
                        <CircularGaugePointerAnimation Enable="true" Duration="1500" />
                        <CircularGaugeCap Radius="10">
                            <CircularGaugeCapBorder Color="#33BCBD" Width="5" />
                        </CircularGaugeCap>
                    </CircularGaugePointer>
                </CircularGaugePointers>
                <CircularGaugeRanges>
                    <CircularGaugeRange Start="0" End="50" Radius="102%" Color="#3A5DC8" StartWidth="10" EndWidth="10" />
                    <CircularGaugeRange Start="50" End="120" Radius="102%" Color="#33BCBD" StartWidth="10" EndWidth="10" />
                </CircularGaugeRanges>
            </CircularGaugeAxis>
        </CircularGaugeAxes>
        <CircularGaugeTooltipSettings Enable="true" EnableAnimation="false" Type="@Type" ShowAtMousePosition="false" Format="Current Value: {value}">
            <CircularGaugeTooltipTextStyle Size="13px" FontFamily="inherit"></CircularGaugeTooltipTextStyle>
            <CircularGaugeRangeTooltipSettings ShowAtMousePosition="false" Format="Start Value: {start} <br/> End Value: {end}" >
                <CircularGaugeRangeTooltipTextStyle Size="13px" FontFamily="inherit" />
            </CircularGaugeRangeTooltipSettings>
        </CircularGaugeTooltipSettings>
    </SfCircularGauge>
</div>

@code {
    public Theme Theme { get; set; }
    public string[] Type = { "Pointer", "Range" };
    
    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }
}