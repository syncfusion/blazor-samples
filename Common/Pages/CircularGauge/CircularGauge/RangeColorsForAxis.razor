@page "/circular-gauge/range-color-for-axis"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.CircularGauge;
@using ThemeHelper
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample shows the basic rendering of the circular gauge, which includes an axis and a range. Here, the appropriate range color is applied to its respective axis labels, minor ticks, and major ticks.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure the range and axis in the circular gauge with the same color. To accomplish this, set the <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLabelStyle.html#Syncfusion_Blazor_CircularGauge_CircularGaugeAxisLabelStyle_UseRangeColor" aria-label="UseRangeColor">Class reference of UseRangeColor property in Circular Gauge</a> property in <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeAxisLabelStyle.html" aria-label="Class reference of CircularGaugeAxisLabelStyle">CircularGaugeAxisLabelStyle</a>, <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeAxisMajorTicks.html" aria-label="Class reference of CircularGaugeAxisMajorTicks">CircularGaugeAxisMajorTicks</a>, and <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.CircularGauge.CircularGaugeAxisMinorTicks.html" aria-label="Class reference of CircularGaugeAxisMinorTicks">CircularGaugeAxisMinorTicks</a> to <b>true</b>.</p>
</ActionDescription>

<div class="control-section">
    <SfCircularGauge Theme="@Theme" AnimationDuration="2000" Background="transparent">
        <CircularGaugeAxes>
            <CircularGaugeAxis Radius="100%" StartAngle="0" EndAngle="0" Direction="GaugeDirection.AntiClockWise">
                <CircularGaugeAxisLineStyle Width="0"></CircularGaugeAxisLineStyle>
                <CircularGaugeAxisMajorTicks Position="Position.Outside" Width="1" Height="25" Interval="10" UseRangeColor="true" />
                <CircularGaugeAxisMinorTicks Position="Position.Outside" Width="1" Height="8" Interval="2" UseRangeColor="true" />
                <CircularGaugeRanges>
                    <CircularGaugeRange Start="0" End="35" Radius="90%" StartWidth="55" EndWidth="55" Color="#F8A197" />
                    <CircularGaugeRange Start="35" End="70" Radius="90%" StartWidth="55" EndWidth="55" Color="#C45072" />
                    <CircularGaugeRange Start="70" End="100" Radius="90%" StartWidth="55" EndWidth="55" Color="#1B679F" />
                </CircularGaugeRanges>
                <CircularGaugeAxisLabelStyle Offset="2" Position="Position.Outside" UseRangeColor="true" HiddenLabel="HiddenLabel.First">
                    <CircularGaugeAxisLabelFont FontFamily="inherit"></CircularGaugeAxisLabelFont>
                </CircularGaugeAxisLabelStyle>
                <CircularGaugePointers>
                    <CircularGaugePointer Radius="0%">
                        <CircularGaugeCap Radius="0" />
                    </CircularGaugePointer>
                </CircularGaugePointers>
            </CircularGaugeAxis>
        </CircularGaugeAxes>
    </SfCircularGauge>
</div>

@code {
    public Theme Theme { get; set; }
    
    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }
}