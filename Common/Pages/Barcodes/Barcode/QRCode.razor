@page "/barcodes/qr-code"

@*Hidden:Lines*@
@inherits SampleBaseComponent;
@*End:Hidden*@
@using Syncfusion.Blazor.BarcodeGenerator
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns

<SampleDescription>
    <p>This sample displays a machine-readable optical label that contains information about the item to which it is attached. The information may be a location, a URL, an address book, etc.</p>
</SampleDescription>
<ActionDescription>
    <p>This example shows how to display a URL as an optical label using the <code><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.BarcodeGenerator.SfQRCodeGenerator.html" aria-label="SfQRCodeGenerator">SfQRCodeGenerator</a></code> component. </p>
    <p>You can customize the QR barcode's <code><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.BarcodeGenerator.SfQRCodeGenerator.html#Syncfusion_Blazor_BarcodeGenerator_SfQRCodeGenerator_Value" aria-label="Value">Value</a></code>, allowing you to modify the barcode content. Adjust its <code><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.BarcodeGenerator.SfQRCodeGenerator.html#Syncfusion_Blazor_BarcodeGenerator_SfQRCodeGenerator_Width" aria-label="Width">Width</a></code>, <code><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.BarcodeGenerator.SfQRCodeGenerator.html#Syncfusion_Blazor_BarcodeGenerator_SfQRCodeGenerator_Height" aria-label="Height">Height</a></code>, <code><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.BarcodeGenerator.SfQRCodeGenerator.html#Syncfusion_Blazor_BarcodeGenerator_SfQRCodeGenerator_BackgroundColor" aria-label="Background Color">Background Color</a></code>, and <code><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.BarcodeGenerator.SfQRCodeGenerator.html#Syncfusion_Blazor_BarcodeGenerator_SfQRCodeGenerator_ForeColor" aria-label="Fore Color">Fore Color</a></code> to control its size and appearance.</p>
    <p>The <code><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.BarcodeGenerator.QRCodeGeneratorDisplayText.html#Syncfusion_Blazor_BarcodeGenerator_QRCodeGeneratorDisplayText_Visibility" aria-label="Text Visibility">Text Visibility</a></code> option lets you choose whether to display the accompanying text. <code><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.BarcodeGenerator.QRCodeGeneratorDisplayText.html#Syncfusion_Blazor_BarcodeGenerator_QRCodeGeneratorDisplayText_Margin" aria-label="Margin">Margin</a></code> properties such as left, right, top, and bottom define the spacing around the barcode.</p>
    <p>The <code><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.BarcodeGenerator.SfQRCodeGenerator.html#Syncfusion_Blazor_BarcodeGenerator_SfQRCodeGenerator_Version" aria-label="Version">Version</a></code> property is used to set the version of the QR barcode. Also, the Barcode component provides support to set the error correction level on a QR-type barcode by using the <code><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.BarcodeGenerator.SfQRCodeGenerator.html#Syncfusion_Blazor_BarcodeGenerator_SfQRCodeGenerator_ErrorCorrectionLevel" aria-label="ErrorCorrectionLevel">ErrorCorrectionLevel</a></code> property.</p>
    <p>The <code><a target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.BarcodeGenerator.SfQRCodeGenerator.html#Syncfusion_Blazor_BarcodeGenerator_SfQRCodeGenerator_Export_System_String_Syncfusion_Blazor_BarcodeGenerator_BarcodeExportType_" aria-label="Download">Download</a></code> button allows users to save the barcode as an image.</p>
</ActionDescription>

<div class="col-lg-9 control-section" style="width: 64%;height:600px">
    <div class="center">
        <div class="centercontrol">
            <SfQRCodeGenerator @ref="QRCodeGenerator" Width="@barcodeWidth" Height="@barcodeHeight" Value="@qrcodeValue" BackgroundColor="@backgroundColor" ForeColor="@foreColor" Version="@version" ErrorCorrectionLevel="@errorCorrectionLevel">
                <QRCodeGeneratorDisplayText Text="@qrcodeValue" Visibility="@textVisibility">
                    <QRCodeTextMargin Left="@leftTextMargin" Top="@topTextMargin" Right="@rightTextMargin" Bottom="@bottomTextMargin"></QRCodeTextMargin>
                </QRCodeGeneratorDisplayText>
                <QRMargin Left="@leftMargin" Top="@topMargin" Right="@rightMargin" Bottom="@bottomMargin"></QRMargin>
            </SfQRCodeGenerator>
        </div>
    </div>
</div>
<div class="col-lg-3 property-section" style="padding-right: 0px; min-width:36%;border-left:1px solid #D7D7D7; height:630px">
    <div class="property-panel-header">
        Appearance
    </div>
    <div id="propertypanel">
        <div class="property-section-content">
            <div class="row sb-child-row">
                <div class="col-xs-2 top barcode-panel-left">
                    Value
                </div>
                <div class="col-xs-10">
                    <SfTextBox Value="@qrcodeValue" OnInput="@QRcodeValueChange" CssClass="@CssClass" Width="103%"></SfTextBox>
                </div>
            </div>
            <div class="row sb-child-row">
                <div>
                    <div class="col-xs-2 top barcode-panel-left">
                        Width
                    </div>
                    <div class="col-xs-4 barcode-panel-left">
                        <SfNumericTextBox TValue="double" Value="@width" Format="n0" Decimals=0 Min=0 Step=5 Width="110%">
                            <NumericTextBoxEvents TValue="double" ValueChange="BarcodeWidthChanged" />
                        </SfNumericTextBox>
                    </div>
                </div>
                <div>
                    <div class="col-xs-2 top barcode-panel-left">
                        Height
                    </div>
                    <div class="col-xs-4 barcode-panel-left">
                        <SfNumericTextBox TValue="double" Value="@height" Format="n0" Decimals=0 Min=0 Step=5 Width="110%">
                            <NumericTextBoxEvents TValue="double" ValueChange="BarcodeHeightChanged" />
                        </SfNumericTextBox>
                    </div>
                </div>
            </div>
            <div class="row sb-child-row">
                <div>
                    <div class="col-xs-3 top barcode-panel-left">
                        Background Color
                    </div>
                    <div class="col-xs-3 top barcode-panel-left">
                        <SfColorPicker @bind-Value="@backgroundColor" ValueChange="BackgroundColorChange"></SfColorPicker>
                    </div>
                </div>
                <div>
                    <div class="col-xs-3 top barcode-panel-left">
                        Fore Color
                    </div>
                    <div class="col-xs-3 top barcode-panel-left">
                        <SfColorPicker @bind-Value="@foreColor" ValueChange="ForeColorChange"></SfColorPicker>
                    </div>
                </div>
            </div>
            <div class="row sb-child-row">
                <div class="col-xs-3 top barcode-panel-left">
                    Text Visibility
                </div>
                <div class="col-xs-3" style="margin-top:6px">
                    <SfCheckBox Checked="@textVisibility" ValueChange="TextVisibilityChange" TChecked="bool"></SfCheckBox>
                </div>
            </div>
            <div class="property-panel-header">
                Margin
            </div>
            <div class="row sb-child-row">
                <div>
                    <div class="col-xs-2 top barcode-panel-left">
                        Left
                    </div>
                    <div class="col-xs-4 barcode-panel-left">
                        <SfNumericTextBox TValue="double" Value="@leftMargin" Format="n0" Decimals=0 Min=-10 Max=30 Step=1 Width="110%">
                            <NumericTextBoxEvents TValue="double" ValueChange="LeftMarginChanged" />
                        </SfNumericTextBox>
                    </div>
                </div>
                <div>
                    <div class="col-xs-2 top barcode-panel-left">
                        Right
                    </div>
                    <div class="col-xs-4 barcode-panel-left">
                        <SfNumericTextBox TValue="double" Value="@rightMargin" Format="n0" Decimals=0 Min=-10 Max=30 Step=1 Width="110%">
                            <NumericTextBoxEvents TValue="double" ValueChange="RightMarginChanged" />
                        </SfNumericTextBox>
                    </div>
                </div>
            </div>
            <div class="row sb-child-row">
                <div>
                    <div class="col-xs-2 top barcode-panel-left">
                        Top
                    </div>
                    <div class="col-xs-4 barcode-panel-left">
                        <SfNumericTextBox TValue="double" Value="@topMargin" Format="n0" Decimals=0 Min=-10 Max=30 Step=1 Width="110%">
                            <NumericTextBoxEvents TValue="double" ValueChange="TopMarginChanged" />
                        </SfNumericTextBox>
                    </div>
                </div>
                <div>
                    <div class="col-xs-2 top barcode-panel-left">
                        Bottom
                    </div>
                    <div class="col-xs-4 barcode-panel-left">
                        <SfNumericTextBox TValue="double" Value="@bottomMargin" Format="n0" Decimals=0 Min=-10 Max=30 Step=1 Width="110%">
                            <NumericTextBoxEvents TValue="double" ValueChange="BottomMarginChanged" />
                        </SfNumericTextBox>
                    </div>
                </div>
            </div>
            <div class="row sb-child-row">
                <div>
                    <div class="col-xs-5 top barcode-panel-left" style="width:42%">
                        Version
                    </div>
                    <div class="col-xs-7 barcode-panel-left" style="width:42%">
                        <SfNumericTextBox TValue="int" Value="@vesionNo" Format="n0" Decimals=0 Min=0 Max=40 Step=1 Width="155%">
                            <NumericTextBoxEvents TValue="int" ValueChange="versionChanged" />
                        </SfNumericTextBox>
                    </div>
                </div>
            </div>
            <div class="row sb-child-row">
                <div>
                    <div class="col-xs-5 top barcode-panel-left" style="width:42%">
                        Error Correction Level
                    </div>
                    <div class="col-xs-7 barcode-panel-left" style="width:46%">
                        <SfDropDownList TValue="string" TItem="CorrectionLevel" @bind-Value="@level" DataSource="@correctionLevel" Width="140%">
                            <DropDownListFieldSettings Value="correction" Text="correction"></DropDownListFieldSettings>
                            <DropDownListEvents TValue="string" TItem="CorrectionLevel" ValueChange="errorCorrectionLevelChanged"></DropDownListEvents>
                        </SfDropDownList>
                    </div>
                </div>
            </div>
            <div class="row sb-child-row" style="padding-top:20px">
                <div class="col-xs-4 barcode-panel-left">
                    <SfButton @onclick="ExportBarcode" Content="Download" iconCss="e-icons e-download"></SfButton>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    .centercontrol {
        margin: auto;
        width: 50%;
        padding-left: 12%;
        padding-top: 5%;
        height: 50%;
    }

    .top {
        margin-top: 10px;
    }

    .sb-child-row {
        margin-top: 8px;
    }

    .col-xs-2 {
        width: 16.66666667%;
    }

    .allowedText {
        margin-left: 14px;
        margin-right: 17px;
        margin-top: 14px;
        width: auto;
        height: auto;
    }

    .row {
        margin-left: 0px;
        margin-right: 0px;
        display: block;
    }

    .texstyle {
        display: table;
        height: 35px;
        padding-right: 4px;
        padding-left: 0px;
        width: 50%;
        padding-top: 15px;
        float: left;
        position: relative;
        min-height: 1px;
    }

    .col-xs-6 {
        padding-left: 0px;
        padding-right: 0px;
        padding-top: 5px;
        float: left;
    }

    .property-section {
        padding-bottom: 20px;
        height: 740px;
        padding-right: 0px;
        display: inline-block;
    }

    .center {
        margin-left: 14px;
        margin-right: 17px;
        margin-top: 14px;
        min-width: 280px;
        width: auto;
        border: 2px solid lightgray;
        min-height: 55%;
        padding-top: 35px;
    }

    @@media screen and (max-width: 570px) {
        .centercontrol {
            width: 60%;
            padding-left: 0px;
        }
    }
</style>
@code
{
    string qrcodeValue = "Syncfusion";
    double width = 200;
    double height = 150;
    string barcodeWidth = "200px";
    string barcodeHeight = "150px";
    bool textVisibility = true;
    string backgroundColor = "#FFFFFF";
    string foreColor = "#000000";
    double leftMargin = 0;
    double rightMargin = 0;
    double topMargin = 0;
    double bottomMargin = 0;
    double leftTextMargin = 10;
    double rightTextMargin = 10;
    double topTextMargin = 10;
    double bottomTextMargin = 10;
    private SfQRCodeGenerator? QRCodeGenerator;
    string? CssClass { get; set; }
    int vesionNo = 0;
    QRCodeVersion version = QRCodeVersion.Auto;
    string level = "Low";
    ErrorCorrectionLevel errorCorrectionLevel = ErrorCorrectionLevel.Low;
    public class CorrectionLevel
    {
        public string? correction { get; set; }
    }
    List<CorrectionLevel> correctionLevel = new List<CorrectionLevel> {
    new CorrectionLevel() { correction = "Low" },
    new CorrectionLevel() { correction = "Medium" },
    new CorrectionLevel() { correction = "Quartile" },
    new CorrectionLevel() { correction = "High" },
    };

    public void OnInvalid(ValidationFailedEventArgs args)
    {
        CssClass = "e-error";
    }
    private void BarcodeWidthChanged(Syncfusion.Blazor.Inputs.ChangeEventArgs<double> args)
    {
        barcodeWidth = args.Value.ToString() + "px";
        width = args.Value;
    }
    private void BarcodeHeightChanged(Syncfusion.Blazor.Inputs.ChangeEventArgs<double> args)
    {
        barcodeHeight = args.Value.ToString() + "px";
        height = args.Value;
    }
    private void QRcodeValueChange(ChangeEventArgs args)
    {
        qrcodeValue = args.Value!.ToString()!;
    }
    private void TextVisibilityChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        if (args.Checked)
            textVisibility = true;
        else
            textVisibility = false;
    }
    public void BackgroundColorChange(ColorPickerEventArgs args)
    {
        backgroundColor = args.CurrentValue!.Hex!.ToString();
    }
    public void ForeColorChange(ColorPickerEventArgs args)
    {
        foreColor = args.CurrentValue!.Hex!.ToString();
    }
    public void TopMarginChanged(Syncfusion.Blazor.Inputs.ChangeEventArgs<double> args)
    {
        topMargin = args.Value;
    }
    public void BottomMarginChanged(Syncfusion.Blazor.Inputs.ChangeEventArgs<double> args)
    {
        bottomMargin = args.Value;
    }
    public void LeftMarginChanged(Syncfusion.Blazor.Inputs.ChangeEventArgs<double> args)
    {
        leftMargin = args.Value;
    }
    public void RightMarginChanged(Syncfusion.Blazor.Inputs.ChangeEventArgs<double> args)
    {
        rightMargin = args.Value;
    }

    /// <summary>
    /// Updates the QR code version (0-40, where 0 means Auto)
    /// </summary>
    public void versionChanged(Syncfusion.Blazor.Inputs.ChangeEventArgs<int> args)
    {
        int value = args.Value;
        vesionNo = args.Value;

        if (value >= 0 && value <= 40)
        {
            // QR Code versions range from 1-40, with 0 representing Auto mode
            QRCodeVersion newVersion = (QRCodeVersion)value;

            // Verify this is a valid enum value
            if (Enum.IsDefined(typeof(QRCodeVersion), newVersion))
            {
                version = newVersion;
            }
        }
    }
    private void errorCorrectionLevelChanged(ChangeEventArgs<string, CorrectionLevel> args)
    {
        switch(args.Value)
        {
            case "Low":
                errorCorrectionLevel = ErrorCorrectionLevel.Low;
                break;
            case "Medium":
                errorCorrectionLevel = ErrorCorrectionLevel.Medium;
                break;
            case "High":
                errorCorrectionLevel = ErrorCorrectionLevel.High;
                break;
            case "Quartile":
                errorCorrectionLevel = ErrorCorrectionLevel.Quartile;
                break;
        }
    }
    private void ExportBarcode()
    {
        if (QRCodeGenerator != null)
        {
            QRCodeGenerator.Export("QRCode", BarcodeExportType.JPG);
        }
    }
}
