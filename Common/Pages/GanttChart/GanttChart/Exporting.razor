@page "/gantt-chart/exporting"

@using Syncfusion.Blazor.Gantt
@using Syncfusion.Blazor.Navigations
@using ej2_blazor_ganttdata

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the client-side exporting of Gantt, which allows you to export Gantt data to Excel, CSV, and PDF formats. Using the Gantt toolbar buttons, you can export Gantt data to the desired format.</p>
</SampleDescription>
<ActionDescription>
    <p>In this demo, toolbar actions are defined in <a aria-label="Navigate to the OnToolbarClick event reference in gantt event" target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.GanttEvents-1.html#Syncfusion_Blazor_Gantt_GanttEvents_1_OnToolbarClick'>OnToolbarClick</a> event to export the Gantt data using the <a aria-label="Navigate to the ExportToExcelAsync method reference for gantt chart component" target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.SfGantt-1.html#Syncfusion_Blazor_Gantt_SfGantt_1_ExportToExcelAsync'>ExcelExport</a> and <a aria-label="Navigate to the ExportToCsvAsync method reference for gantt chart component" target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.SfGantt-1.html#Syncfusion_Blazor_Gantt_SfGantt_1_ExportToCsvAsync'>CsvExport</a> methods and <a aria-label="Navigate to the ExportToPdfAsync method reference for gantt chart component" target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.SfGantt-1.html#Syncfusion_Blazor_Gantt_SfGantt_1_ExportToPdfAsync_Syncfusion_Blazor_Gantt_GanttPdfExportProperties_'>PdfExport</a> methods.</p>
    <p>
        More information about exporting in Gantt can be found in this <a aria-label="Navigate to the documentation for excel export in gantt chart component" target='_blank' href='https://blazor.syncfusion.com/documentation/gantt-chart/excel-export'>documentation section</a>.
    </p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGantt @ref="GanttChartInstance" ID="GanttExport" DataSource="@Tasks" Height="450px" AllowPdfExport="true" Width="100%"
                     HighlightWeekends="true" Toolbar="ToolbarActions" AllowExcelExport="true" AllowSelection="true"
                     GridLines="GridLine.Both" TreeColumnIndex="1" ProjectStartDate="@ProjectStart" ProjectEndDate="@ProjectEnd" ScrollToTaskbarOnClick="true">
                <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate" EndDate="EndDate" Progress="Progress"
                                 Dependency="Predecessor" ParentID="ParentId"></GanttTaskFields>
                <GanttColumns>
                    <GanttColumn Field="TaskId" Width="100"></GanttColumn>
                    <GanttColumn Field="TaskName" HeaderText="Task Name" Width="250" ClipMode="Syncfusion.Blazor.Grids.ClipMode.EllipsisWithTooltip"></GanttColumn>
                    <GanttColumn Field="StartDate" HeaderText="Start Date"></GanttColumn>
                    <GanttColumn Field="EndDate" HeaderText="End Date"></GanttColumn>
                    <GanttColumn Field="Progress" HeaderText="Progress"></GanttColumn>
                    <GanttColumn Field="Predecessor" HeaderText="Dependency"></GanttColumn>
                </GanttColumns>
                <GanttLabelSettings LeftLabel="TaskName" TaskLabel="Progress" TValue="GanttData.TaskData"></GanttLabelSettings>
                <GanttSplitterSettings ColumnIndex="2"></GanttSplitterSettings>
                <GanttEvents OnToolbarClick="HandleToolbarClick" TValue=GanttData.TaskData></GanttEvents>
                <GanttTimelineSettings>
                    <GanttTopTierSettings Unit="TimelineViewMode.Week" Format="MMM dd, y"></GanttTopTierSettings>
                    <GanttBottomTierSettings Unit="TimelineViewMode.Day"></GanttBottomTierSettings>
                </GanttTimelineSettings>
            </SfGantt>
        </div>
    </div>
</div>

@code {
    private DateTime ProjectStart { get; set; } = new DateTime(2025, 3, 25);
    private DateTime ProjectEnd { get; set; } = new DateTime(2025, 9, 01);
    private List<GanttData.TaskData> Tasks { get; set; } = new List<GanttData.TaskData>();

    private List<object> ToolbarActions { get; set; } = new List<object>
    {
        #pragma warning disable BL0005 // Component parameter should not be set outside of its component.
        "ZoomIn", "ZoomOut", "ZoomToFit", "ExcelExport", "CsvExport",
        new ToolbarItem { Text = "PDF Export", TooltipText = "PDF Export", Id = "PdfExport", PrefixIcon = "e-pdfexport" }
        #pragma warning restore BL0005 // Component parameter should not be set outside of its component.
    };

    private SfGantt<GanttData.TaskData>? GanttChartInstance { get; set; }

    protected override void OnInitialized()
    {
        Tasks = GanttData.EditingData();
    }

    public async Task HandleToolbarClick(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id == "GanttExport_excelexport")
        {
            await GanttChartInstance.ExportToExcelAsync();
        }
        else if (args.Item.Id == "GanttExport_csvexport")
        {
            await GanttChartInstance.ExportToCsvAsync();
        }
        else if (args.Item.Id == "PdfExport")
        {
            await GanttChartInstance.ExportToPdfAsync();
        }
    }
}