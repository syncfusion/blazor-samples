@page "/gantt-chart/scheduling-mode"

@using Syncfusion.Blazor.Gantt
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>
        The Gantt provides support for automatic and manual task scheduling modes. Scheduling mode of a task is used to
        indicate whether the start and end dates of a task will be automatically validated or not. Using the <a aria-label="Navigate to the task mode property reference for gantt chart component" target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.SfGantt-1.html#Syncfusion_Blazor_Gantt_SfGantt_1_TaskMode'>TaskMode</a> property, the scheduling mode of a task can be changed. The following are the enumeration values
        that can be set to the property <code>TaskMode</code>.
    </p>
    <ul>
        <li><code>Auto</code></li>
        <li><code>Manual</code></li>
        <li><code>Custom</code></li>
    </ul>
</SampleDescription>
<ActionDescription>
    <p>When the <code>TaskMode</code> property is set to Auto scheduling mode, all the tasks in the project will be rendered as automatically scheduled tasks. Thus the start and end dates of the tasks in the project will be automatically validated.</p>
    <p>When the <code>TaskMode</code> property is set to Manual scheduling mode, all the tasks in the project will be rendered with dates as they are in the data source. Thus the dates of the tasks will not get validated automatically by the system.</p>
    <p>When the <code>TaskMode</code> property is set to Custom, the scheduling mode for each task will be mapped from the data source field. The property <a aria-label="Navigate to the Manual property reference for gantt task fields" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.GanttTaskFields.html#Syncfusion_Blazor_Gantt_GanttTaskFields_Manual">Manual</a> of <a aria-label="Navigate to the class reference for gantt task fields" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.GanttTaskFields.html">GanttTaskFields</a> is used to map the scheduling mode field from the data source.</p>
    <p>More information about scheduling tasks can be found in this <a aria-label="Navigate to the documentation for scheduling tasks in gantt chart component" target="_blank" href="https://blazor.syncfusion.com/documentation/gantt-chart/scheduling-tasks">documentation section</a>.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGantt DataSource="@TaskCollection" Height="450px" Width="100%" TreeColumnIndex="1" ProjectStartDate="@ProjectStartDate" ProjectEndDate="@ProjectEndDate" TaskMode="ScheduleMode.Custom">
                <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate" EndDate="EndDate" Duration="Duration" Progress="Progress" ParentID="ParentId" Manual="IsManual">
                </GanttTaskFields>
                <GanttColumns>
                    <GanttColumn Field="TaskId" ></GanttColumn>
                    <GanttColumn Field="TaskName" ></GanttColumn>
                    <GanttColumn Field="IsManual" HeaderText="Task Mode"></GanttColumn>
                    <GanttColumn Field="StartDate" HeaderText="Start Date"></GanttColumn>
                    <GanttColumn Field="EndDate" HeaderText="End Date"></GanttColumn>
                    <GanttColumn Field="Duration" HeaderText="Duration"></GanttColumn>
                    <GanttColumn Field="Progress" HeaderText="Progress"></GanttColumn>
                </GanttColumns>
                <GanttLabelSettings LeftLabel="TaskName" TValue="ScheduleData.TaskData"></GanttLabelSettings>
                <GanttSplitterSettings Position="40%"></GanttSplitterSettings>
            </SfGantt>
        </div>
    </div>
</div>


@code{
    private DateTime ProjectStartDate { get; set; } = new DateTime(2021, 3, 27);
    private DateTime ProjectEndDate { get; set; } = new DateTime(2021, 7, 6);
    private List<ScheduleData.TaskData> TaskCollection { get; set; } = new List<ScheduleData.TaskData>();

    protected override void OnInitialized()
    {
        TaskCollection = ScheduleData.GetTaskCollection();
    }
}
