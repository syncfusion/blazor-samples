@page "/gantt-chart/clipboard"

@using Syncfusion.Blazor.Gantt
@using Syncfusion.Blazor.Navigations
@using ej2_blazor_defaultdata

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates copy to clipboard functionality of the Gantt component. Select rows and click the 'Copy' button from the toolbar to copy the content of rows. To copy with a header, click the 'Copy with Header' button from the toolbar. </p>
</SampleDescription>
<ActionDescription>
    <p>In this demo, selected rows of data can be copied into the clipboard using the following Keyboard shortcuts, toolbar interactions, or the <a aria-label="Navigate to the CopyAsync method reference for gantt chart component" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.SfGantt-1.html#Syncfusion_Blazor_Gantt_SfGantt_1_CopyAsync_System_Nullable_System_Boolean__">CopyAsync</a> method.</p>
    <ul>
        <li><code>Ctrl + C</code> - Selects rows or cells data without header.</li>
        <li><code>Ctrl + Shift + H</code> - Selects rows or cells data with a header.</li>
    </ul>
    <p>More information on the clipboard can be found in this <a aria-label="Navigate to the documentation for clipboard in gantt chart component" target="_blank" href="https://blazor.syncfusion.com/documentation/gantt-chart/clipboard">documentation section</a>.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGantt DataSource="@TaskCollection" @ref="GanttChartInstance" Height="450px" Width="100%" HighlightWeekends="true" TreeColumnIndex="1"
                     ProjectStartDate="@ProjectStartDate" ProjectEndDate="@ProjectEndDate" ScrollToTaskbarOnClick="true" Toolbar="@toolbarItems">
                <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate" EndDate="EndDate" Duration="Duration" Progress="Progress"
                Dependency="Predecessor" ParentID="ParentId"></GanttTaskFields>
                <GanttColumns>
                    <GanttColumn Field="TaskId"></GanttColumn>
                    <GanttColumn Field="TaskName" Width="250"></GanttColumn>
                    <GanttColumn Field="StartDate"></GanttColumn>
                    <GanttColumn Field="EndDate"></GanttColumn>
                    <GanttColumn Field="Duration"></GanttColumn>
                    <GanttColumn Field="Progress"></GanttColumn>
                    <GanttColumn Field="Predecessor"></GanttColumn>
                </GanttColumns>
                <GanttLabelSettings LeftLabel="TaskName" TValue="DefaultData.TaskData"></GanttLabelSettings>
                <GanttSplitterSettings Position="50%"></GanttSplitterSettings>
                <GanttEvents OnToolbarClick="ToolbarClickHandler" TValue="DefaultData.TaskData"></GanttEvents>
            </SfGantt>
        </div>
    </div>
</div>

@code {
    private DateTime ProjectStartDate { get; set; } = new DateTime(2021, 3, 24);
    private DateTime ProjectEndDate { get; set; } = new DateTime(2021, 7, 18);
    public List<DefaultData.TaskData> TaskCollection { get; private set; } = new List<DefaultData.TaskData>();
    private SfGantt<DefaultData.TaskData>? GanttChartInstance { get; set; }
    public List<Object> toolbarItems = new List<Object>()
    {
        #pragma warning disable BL0005 // Component parameter should not be set outside of its component.
        new ToolbarItem() { Id = "copyHeader", Text = "Copy With Header", PrefixIcon = "e-copy"},
        new ToolbarItem() { Id = "copy", Text = "Copy", PrefixIcon = "e-copy"}
        #pragma warning restore BL0005 // Component parameter should not be set outside of its component.
    };
    protected override void OnInitialized()
    {
        TaskCollection = DefaultData.ProjectNewData();
    }

    public async Task ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        var selectedRecords = await GanttChartInstance.GetSelectedRecordsAsync();
        if (selectedRecords.Any())
        {
            bool copyWithHeader = args.Item.Id == "copyHeader";
            await GanttChartInstance.CopyAsync(copyWithHeader);
        }
    }

}