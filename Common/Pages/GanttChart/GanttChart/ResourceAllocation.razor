@page "/gantt-chart/resource-allocation"

@using Syncfusion.Blazor.Gantt
@using ej2_blazor_defaultdata

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the options to allocate one or more resources to a task based on the task requirement such as work needed. The Work is the total labor hours necessary to complete a task.</p>
</SampleDescription>
<ActionDescription>
    <p>
        In this example, you can see how to allocate single or multiple resources for a task by editing. Based on the task complexity and resource availability, you can plan and allocate resources to tasks in the project. In this demo, a set of predefined resources is used, and their IDs are assigned to the resource assignment collection. Resource information can be displayed in the Gantt chart using the <a aria-label="Navigate to the class reference for gantt label settings" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.GanttLabelSettings-1.html">LabelSettings</a> property.
    </p>

    <p>
        Resources can be mapped using the <a aria-label="Navigate to the class reference for gantt resource fields" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.GanttResource-2.html">GanttResource</a> component with the following properties:
    </p>
    <ul>
        <li><code>Id</code> - To map resource ID.</li>
        <li><code>Name</code> - To map resource name.</li>
        <li><code>MaxUnits</code> - To map resource units.</li>
        <li><code>DataSource</code> - To map resource data source.</li>
    </ul>

    <p>
        Resource assignments between tasks can be mapped using the <a aria-label="Navigate to the class reference for gantt assignment fields" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.GanttAssignmentFields-2.html">GanttAssignmentFields</a> component with the following properties:
    </p>
    <ul>
        <li><code>PrimaryKey</code> - To map the primary key.</li>
        <li><code>TaskID</code> - To map the task ID.</li>
        <li><code>ResourceID</code> - To map the resource ID.</li>
        <li><code>DataSource</code> - To map the resource assignment data source.</li>
    </ul>

    <p>
        The work, duration, and resource unit fields of a task depend on each other, and will change automatically when any one of these fields is edited. However, the field values can also be set as constant using the <a aria-label="Navigate to the task type property reference for gantt task fields" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.GanttTaskFields.html#Syncfusion_Blazor_Gantt_GanttTaskFields_TaskType">TaskType</a> property of <code>GanttTaskFields</code>. The following values can be set for the type property:
    </p>
    <ul>
        <li><code>FixedDuration</code> - The duration task field will remain constant while updating resource units or the work field.</li>
        <li><code>FixedWork</code> - The work field will remain constant while updating resource units or duration fields.</li>
        <li><code>FixedUnit</code> - Resource units will remain constant while updating duration or work fields.</li>
    </ul>

    <p>
        The <a aria-label="Navigate to the documentation for work in gantt chart component" target="_blank" href="https://blazor.syncfusion.com/documentation/gantt-chart/work">Work</a> can be mapped from the data source field using the <code>Work</code> property of <a aria-label="Navigate to the class reference for gantt task fields" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.GanttTaskFields.html">GanttTaskFields</a>. When the Work value is mapped from the data source, the end date and duration of the task will be calculated automatically based on the work and resource unit values from the data source. Work can be measured in hours, days, and minutes, with hours being the default scale. This can be changed using the <a aria-label="Navigate to the work unit property reference for gantt chart component" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.SfGantt-1.html#Syncfusion_Blazor_Gantt_SfGantt_1_WorkUnit">WorkUnit</a> property.
    </p>

    <p>
        More information about resources in Gantt can be found in this <a aria-label="Navigate to the documentation for resources in gantt chart component" target="_blank" href="https://blazor.syncfusion.com/documentation/gantt-chart/resources">documentation section</a>.
    </p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGantt DataSource="@TaskCollection" Height="450px" Width="100%" TreeColumnIndex="1" ProjectStartDate="@ProjectStartDate" ProjectEndDate="@ProjectEndDate" WorkUnit="WorkUnit.Hour"
            Toolbar="@(new List<string>(){ "Add", "Edit", "Update", "Delete", "Cancel", "ExpandAll", "CollapseAll"})">
                <GanttTaskFields Id="Id" Name="Name" StartDate="StartDate" EndDate="EndDate" Duration="Duration" Progress="Progress"
                ParentID="ParentId" Work="Work" TaskType="TaskType">
                </GanttTaskFields>
                <GanttResource DataSource="ResourceCollection" Id="Id" Name="Name" MaxUnits="MaxUnit" TValue="ResourceModel.TaskInfoModel" TResources="ResourceModel.ResourceInfoModel"></GanttResource>
                <GanttAssignmentFields DataSource="AssignmentCollection" PrimaryKey="PrimaryId" TaskID="TaskId" ResourceID="ResourceId" Units="Unit" TValue="ResourceModel.TaskInfoModel" TAssignment="ResourceModel.AssignmentModel"></GanttAssignmentFields>
                <GanttLabelSettings RightLabel="Resources" TValue="ResourceModel.TaskInfoModel"></GanttLabelSettings>
                <GanttEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" AllowTaskbarEditing="true"
                ShowDeleteConfirmDialog="true"></GanttEditSettings>
                <GanttColumns>
                    <GanttColumn Field="Id" HeaderText="ID"></GanttColumn>
                    <GanttColumn Field="Name" HeaderText="Event Name" Width="250px"></GanttColumn>
                    <GanttResourceColumn HeaderText="Event Resources"></GanttResourceColumn>
                    <GanttColumn Field="Work" HeaderText="Work (Hours)"></GanttColumn>
                    <GanttColumn Field="Duration" HeaderText="Duration"></GanttColumn>
                    <GanttColumn Field="TaskType" HeaderText="Task Type"></GanttColumn>
                    <GanttColumn Field="StartDate" HeaderText="Start Date"></GanttColumn>
                    <GanttColumn Field="EndDate" HeaderText="End Date"></GanttColumn>
                </GanttColumns>
                <GanttEditDialogFields>
                    <GanttEditDialogField Type="GanttDialogFieldType.Resources"></GanttEditDialogField>
                </GanttEditDialogFields>
                <GanttAddDialogFields>
                    <GanttAddDialogField Type="GanttDialogFieldType.Resources"></GanttAddDialogField>
                </GanttAddDialogFields>
                <GanttSplitterSettings Position="28%"> </GanttSplitterSettings>
            </SfGantt>
        </div>
    </div>
</div>
@code{
    private DateTime ProjectStartDate = new DateTime(2021, 3, 28);
    private DateTime ProjectEndDate = new DateTime(2021, 7, 28);
    private List<ResourceModel.TaskInfoModel> TaskCollection { get; set; } = new List<ResourceModel.TaskInfoModel>();
    private List<ResourceModel.ResourceInfoModel> ResourceCollection { get; set; } = new List<ResourceModel.ResourceInfoModel>();
    private static List<ResourceModel.AssignmentModel> AssignmentCollection { get; set; } = new List<ResourceModel.AssignmentModel>();
    protected override void OnInitialized()
    {
        TaskCollection = ResourceModel.GetTaskCollection();
        ResourceCollection = ResourceModel.GetResources;
        AssignmentCollection = ResourceModel.GetAssignmentCollection();
    }
}


