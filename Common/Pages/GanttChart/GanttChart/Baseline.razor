@page "/gantt-chart/baseline"

@using Syncfusion.Blazor.Gantt
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons

@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample visualizes the complete service schedule for a car. Baselines are enabled to view the deviation between the planned dates and actual dates.</p>
</SampleDescription>
<ActionDescription>
    <p>Baselines can be enabled in Gantt Chart by enabling the <a aria-label="Navigate to the RenderBaseline property reference for gantt chart component" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.SfGantt-1.html#Syncfusion_Blazor_Gantt_SfGantt_1_RenderBaseline">RenderBaseline</a> property along with mapping the data source values for <a aria-label="Navigate to the Baseline Start Date property reference for gantt task fields" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.GanttTaskFields.html#Syncfusion_Blazor_Gantt_GanttTaskFields_BaselineStartDate">BaselineStartDate</a> and <a aria-label="Navigate to the BaselineEndDate property reference for gantt chart component" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.GanttTaskFields.html#Syncfusion_Blazor_Gantt_GanttTaskFields_BaselineEndDate">BaselineEndDate</a> properties of <code>GanttTaskFields</code>. The Baseline will appear for all types of tasks in the project such as child tasks, parent tasks, and also for milestones. You can change the color of baselines using <a aria-label="Navigate to the Baseline Color property reference for gantt chart component" target="_blank" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Gantt.SfGantt-1.html#Syncfusion_Blazor_Gantt_SfGantt_1_BaselineColor">BaselineColor</a> property.</p>
    <p>More information on baseline can be found in this <a aria-label="Navigate to the documentation for baseline in gantt chart component" target="_blank" href="https://blazor.syncfusion.com/documentation/gantt-chart/baseline">documentation section</a>.</p>
</ActionDescription>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGantt ID="Gantt" DataSource="@TaskCollection" Height="450px" Width="100%" RowHeight="38" HighlightWeekends="true"
                     TreeColumnIndex="1" ProjectStartDate="@ProjectStartDate" ProjectEndDate="@ProjectEndDate" RenderBaseline="@IsBaselineVisible" Toolbar="@toolbarItems">
                <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate" EndDate="EndDate" Duration="Duration" Progress="Progress"
                                 ParentID="ParentId" BaselineStartDate="BaselineStartDate" BaselineEndDate="BaselineEndDate">
                </GanttTaskFields>
                <GanttColumns>
                    <GanttColumn Field="TaskId" HeaderText="Task Id"></GanttColumn>
                    <GanttColumn Field="TaskName" HeaderText="Task Name" ClipMode="Syncfusion.Blazor.Grids.ClipMode.EllipsisWithTooltip"></GanttColumn>
                    <GanttColumn Field="StartDate" HeaderText="Start Date"></GanttColumn>
                    <GanttColumn Field="EndDate" HeaderText="End Date"></GanttColumn>
                    <GanttColumn Field="BaselineStartDate" HeaderText="Baseline Start Date" Width="200"></GanttColumn>
                    <GanttColumn Field="BaselineEndDate" HeaderText="Baseline End Date" Width="200"></GanttColumn>
                </GanttColumns>
                <GanttLabelSettings LeftLabel="TaskName" TValue="BaseData.TaskData"></GanttLabelSettings>
                <GanttSplitterSettings Position="28%"></GanttSplitterSettings>
            </SfGantt>
        </div>
    </div>
</div>

@code {
    public SfGantt<BaseData.TaskData>? Gantt { get; set; }
    public bool IsChecked { get; set; } = true;
    public bool IsBaselineVisible => IsChecked;
    private DateTime ProjectStartDate { get; set; } = new DateTime(2021, 3, 24);
    private DateTime ProjectEndDate { get; set; } = new DateTime(2021, 7, 6);
    public List<BaseData.TaskData> TaskCollection { get; set; } = new List<BaseData.TaskData>();
    private List<Object>? toolbarItems;
    protected override void OnInitialized()
    {
        TaskCollection = BaseData.GetTaskCollection();
        toolbarItems = new List<Object>
        {
            new ItemModel
            {
                Id = "ShowBaseline",
                Template = (RenderFragment)(builder =>
                {
                    builder.OpenComponent<SfCheckBox<bool>>(0);
                    builder.AddAttribute(1, "Label", "Show Baseline");
                    builder.AddAttribute(2, "Checked", BindConverter.FormatValue(IsChecked));
                    builder.AddAttribute(3, "CheckedChanged", EventCallback.Factory.Create<bool>(this, __value => IsChecked = __value));
                    builder.CloseComponent();
                })
            }
        };
    }
}
<style>
    .e-toolbar{
        border-bottom-left-radius:0;
        border-bottom-right-radius:0;
        border-style:solid;
        border-width:1px 1px 0;
    }
    .material3 .e-gantt-toolbar-template,
    .material3-dark .e-gantt-toolbar-template
    {
        padding: 7px;
    }
</style>