@page "/linear-gauge/custom-pointer"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.LinearGauge
@using ThemeHelper
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the inclusion of text and image pointers in the linear gauge. Additionally, multiple pointer support is enabled.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure text and image pointers in the linear gauge. The properties available in <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.LinearGauge.LinearGaugePointer.html" aria-label="Class reference of LinearGaugePointer">LinearGaugePointer</a> and <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.LinearGauge.LinearGaugeAnnotation.html" aria-label="Class reference of LinearGaugeAnnotation">LinearGaugeAnnotation</a> help in the customization of the text and image pointers in the linear gauge.</p>
    <p>More information on the pointers can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/linear-gauge/pointers" aria-label="Blazor Linear Gauge Pointer documentation" >documentation section</a>.</p>
</ActionDescription>

<style>
    .divclass {
        padding: 6px;
        color: white;
        border: solid #0074E3;
        cursor: pointer;
    }
</style>

<div class="control-section">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
            <div align="center" style="margin: auto;width: 30%;padding: 10px;">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <div class="divclass" style="width:86px;color:@HorizontalTextColor;font-size:15px;border: 2px solid #0074E3;background-color:@HorizontalBackgroundColor;text-align:center;" @onclick="HorizontalGauge">
                                    Horizontal
                                </div>
                            </td>
                            <td>
                                <div class="divclass" style="width:86px;color:@VerticalTextColor;font-size:15px;border: 2px solid #0074E3;background-color:@VerticalBackgroundColor;text-align:center;" @onclick="VerticalGauge">
                                    Vertical
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <pre style="background-color: inherit; border:hidden"></pre>
    <div class="row">
        <div class="@ClassStyle" align="center">
            <SfLinearGauge Title="Text widget" AnimationDuration="2000" Orientation="@GaugeOrientation" Theme="@Theme" Height="@Height" Width="@Width" Background="transparent">                
                <LinearGaugeTitleStyle FontWeight="499" FontFamily="inherit" />
                <LinearGaugeAxes>
                    <LinearGaugeAxis Minimum="0" Maximum="100" OpposedPosition="true">
                        <LinearGaugeLine Width="20" />
                        <LinearGaugeMajorTicks Interval="20" Height="7" Width="1" />
                        <LinearGaugeMinorTicks Interval="10" Height="3" />
                        <LinearGaugeAxisLabelStyle>
                            <LinearGaugeAxisLabelFont FontFamily="inherit" FontWeight="499" />
                        </LinearGaugeAxisLabelStyle>
                        <LinearGaugePointers>
                            <LinearGaugePointer PointerValue="@InvertedTrianglePointerValue" Placement="Placement.Center" Position="Position.Cross" MarkerType="MarkerType.Circle" Width="30" Color="#173BBB" Offset="@TextPointerOffset" />
                        </LinearGaugePointers>
                        <LinearGaugeAnnotations>
                            <LinearGaugeAnnotation AxisIndex="0" AxisValue="@InvertedTrianglePointerValue" X="0" Y="0" ZIndex="1">
                                <ContentTemplate>
                                    <div class="pointer-value-display">@InvertedTrianglePointerValue.ToString()</div>
                                </ContentTemplate>
                            </LinearGaugeAnnotation>
                        </LinearGaugeAnnotations>
                    </LinearGaugeAxis>
                </LinearGaugeAxes>
            </SfLinearGauge>
        </div>
        <div class="@ClassStyle" align="center">
            <SfLinearGauge Title="Icon widget" AnimationDuration="2000" Orientation="@GaugeOrientation" Theme="@Theme" Height="@Height" Width="@Width" Background="transparent">
                <LinearGaugeTitleStyle FontWeight="499" FontFamily="inherit" />
                <LinearGaugeAxes>
                    <LinearGaugeAxis Minimum="0" Maximum="100" OpposedPosition="true">
                        <LinearGaugeLine Width="20" />
                        <LinearGaugeMajorTicks Interval="20" Height="7" Width="1" />
                        <LinearGaugeMinorTicks Interval="10" Height="3" />
                        <LinearGaugeAxisLabelStyle>
                            <LinearGaugeAxisLabelFont FontFamily="inherit" FontWeight="499" />
                        </LinearGaugeAxisLabelStyle>
                        <LinearGaugePointers>
                            <LinearGaugePointer PointerValue="90" Placement="Placement.Near" MarkerType="MarkerType.Image" ImageUrl="@(SampleService?.WebAssetsPath + "images/linear-gauge/thumb-icon.png")" Height="30" Width="45" />
                        </LinearGaugePointers>
                    </LinearGaugeAxis>
                </LinearGaugeAxes>
            </SfLinearGauge>
        </div>
        <div class="@ClassStyle" align="center">
            <SfLinearGauge Title="Multiple widget pointers" AnimationDuration="2000" Orientation="@GaugeOrientation" Theme="@Theme" Height="@Height" Width="@Width" Background="transparent">
                <LinearGaugeTitleStyle FontWeight="499" FontFamily="inherit" />
                <LinearGaugeAxes>
                    <LinearGaugeAxis Minimum="0" Maximum="100" OpposedPosition="true">
                        <LinearGaugeLine Width="20" />
                        <LinearGaugeMajorTicks Interval="20" Height="7" Width="1" />
                        <LinearGaugeMinorTicks Interval="10" Height="3" />
                        <LinearGaugeAxisLabelStyle>
                            <LinearGaugeAxisLabelFont FontFamily="inherit" FontWeight="499" />
                        </LinearGaugeAxisLabelStyle>
                        <LinearGaugePointers>
                            <LinearGaugePointer PointerValue="@CircleFirstPointerValue" Placement="Placement.Center" Position="Position.Cross" MarkerType="MarkerType.Circle" Width="30" Color="#173BBB" Offset="@TextPointerOffset" />
                            <LinearGaugePointer PointerValue="30" Placement="Placement.Near" MarkerType="MarkerType.Image" ImageUrl="@(SampleService?.WebAssetsPath + "images/linear-gauge/thumb-icon.png")" Height="30" Width="45" />
                        </LinearGaugePointers>
                        <LinearGaugeAnnotations>
                            <LinearGaugeAnnotation AxisIndex="0" AxisValue="@CircleFirstPointerValue" X="0" Y="0" ZIndex="1">
                                <ContentTemplate>
                                    <div class="pointer-value-display">@CircleFirstPointerValue.ToString()</div>
                                </ContentTemplate>
                            </LinearGaugeAnnotation>
                        </LinearGaugeAnnotations>
                    </LinearGaugeAxis>
                </LinearGaugeAxes>
            </SfLinearGauge>
        </div>
    </div>
</div>

<style>
    .pointer-value-display {
        margin-top: -8px;
        font-size: 12px;
        color: white;
        margin-left: -7px;
    }
</style>

@code {
    public Theme Theme { get; set; }
    public string TextPointerOffset = "-2";
    public string VerticalBackgroundColor = "#0074E3";
    public string HorizontalBackgroundColor = "white";
    public string VerticalTextColor = "white";
    public string HorizontalTextColor = "black";
    public string Width = "160px";
    public string Height = "350px";
    public string ClassStyle = "col-xs-5 col-sm-5 col-lg-4 col-md-4";
    private Orientation GaugeOrientation = Orientation.Vertical;
    public double InvertedTrianglePointerValue = 55;
    public double CircleFirstPointerValue = 60;
    
    private void VerticalGauge()
    {
        GaugeOrientation = Orientation.Vertical;
        Width = "160px";
        Height = "350px";
        VerticalBackgroundColor = "#0074E3";
        HorizontalBackgroundColor = "white";
        VerticalTextColor = "white";
        HorizontalTextColor = "black";
        ClassStyle = "col-xs-5 col-sm-5 col-lg-4 col-md-4";
        TextPointerOffset = "-2";
    }

    private void HorizontalGauge()
    {
        GaugeOrientation = Orientation.Horizontal;
        Width = "450px";
        Height = "150px";
        ClassStyle = "";
        VerticalBackgroundColor = "white";
        HorizontalBackgroundColor = "#0074E3";
        VerticalTextColor = "black";
        HorizontalTextColor = "white";
        TextPointerOffset = "2";
    }

    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }
}
