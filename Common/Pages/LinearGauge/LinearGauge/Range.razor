@page "/linear-gauge/range"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.LinearGauge
@using ThemeHelper
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the various customization options for the linear gauge's range. For example, an exponential appearance, a gradient color, and a multiple range.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render and configure ranges in the linear gauge. The <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.LinearGauge.LinearGaugeRanges.html" aria-label="Class reference of LinearGaugeRanges">LinearGaugeRanges</a>, <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.LinearGauge.LinearGaugeRange.html" aria-label="Class reference of LinearGaugeRange">LinearGaugeRange</a>, <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.LinearGauge.LinearGradient.html" aria-label="Class reference of LinearGradient">LinearGradient</a> are used to display multiple ranges, perform range customization, and apply gradient colors, respectively.</p>
    <p>More information on the ranges can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/linear-gauge/ranges" aria-label="Blazor Linear Gauge Ranges documentation" >documentation section</a>.</p>
</ActionDescription>

<style>
    .divclass {
        padding: 6px;
        color: white;
        border: solid #0074E3;
        cursor: pointer;
    }
</style>

<div class="control-section">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-lg-12 col-md-12">
            <div align="center" style="margin: auto;width: 30%;padding: 10px;">
                <table>
                    <tbody>
                        <tr>
                            <td>
                                <div class="divclass" style="width:86px;color:@HorizontalTextColor;font-size:15px;border: 2px solid #0074E3;background-color:@HorizontalBackgroundColor;text-align:center;" @onclick="HorizontalGauge">
                                    Horizontal
                                </div>
                            </td>
                            <td>
                                <div class="divclass" style="width:86px;color:@VerticalTextColor;font-size:15px;border: 2px solid #0074E3;background-color:@VerticalBackgroundColor;text-align:center;" @onclick="VerticalGauge">
                                    Vertical
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <pre style="background-color: inherit; border:hidden"></pre>
    <div class="row">
        <div align="center" style="float: left;padding: 20px;"></div>
        <div class="@ClassStyle" align="center">
            <SfLinearGauge Title="Default" AnimationDuration="2000" Orientation="@GaugeOrientation" Theme="@Theme" Height="@Height" Width="@Width" Background="transparent">
                <LinearGaugeTitleStyle FontWeight="499" FontFamily="inherit" />
                <LinearGaugeAxes>
                    <LinearGaugeAxis Minimum="0" Maximum="100" OpposedPosition="true">
                        <LinearGaugeLine Width="5" />
                        <LinearGaugeMajorTicks Interval="20" Height="7" Width="1" Position="Position.Outside" />
                        <LinearGaugeMinorTicks Interval="10" Height="3" Position="Position.Outside" />
                        <LinearGaugeAxisLabelStyle Position="Position.Outside">
                            <LinearGaugeAxisLabelFont FontFamily="inherit" />
                        </LinearGaugeAxisLabelStyle>
                        <LinearGaugeRanges>
                            <LinearGaugeRange Start="0" End="100" StartWidth="10" EndWidth="10" Color="#F45656" Offset="5" />
                        </LinearGaugeRanges>
                        <LinearGaugePointers>
                            <LinearGaugePointer Width="0" />
                        </LinearGaugePointers>
                    </LinearGaugeAxis>
                </LinearGaugeAxes>
            </SfLinearGauge>
        </div>
        <div class="@ClassStyle" align="center">
            <SfLinearGauge Title="Exponential" AnimationDuration="2000" Orientation="@GaugeOrientation" Theme="@Theme" Height="@Height" Width="@Width" Background="transparent">
                <LinearGaugeTitleStyle FontWeight="499" FontFamily="inherit" />
                <LinearGaugeAxes>
                    <LinearGaugeAxis Minimum="0" Maximum="100" OpposedPosition="true">
                        <LinearGaugeLine Width="5" />
                        <LinearGaugeMajorTicks Interval="20" Height="7" Width="1" Position="Position.Outside" />
                        <LinearGaugeMinorTicks Interval="10" Height="3" Position="Position.Outside" />
                        <LinearGaugeAxisLabelStyle Position="Position.Outside">
                            <LinearGaugeAxisLabelFont FontFamily="inherit" />
                        </LinearGaugeAxisLabelStyle>
                        <LinearGaugeRanges>
                            <LinearGaugeRange Start="0" End="50" StartWidth="2" EndWidth="15" Color="#F45656" Offset="5" />
                            <LinearGaugeRange Start="50" End="100" StartWidth="15" EndWidth="50" Color="#F45656" Offset="5" />
                        </LinearGaugeRanges>
                        <LinearGaugePointers>
                            <LinearGaugePointer Width="0" />
                        </LinearGaugePointers>
                    </LinearGaugeAxis>
                </LinearGaugeAxes>
            </SfLinearGauge>
        </div>
        <div class="@ClassStyle" align="center">
            <SfLinearGauge Title="Concave" AnimationDuration="2000" Orientation="@GaugeOrientation" Theme="@Theme" Height="@Height" Width="@Width" Background="transparent">
                <LinearGaugeTitleStyle FontWeight="499" FontFamily="inherit" />
                <LinearGaugeAxes>
                    <LinearGaugeAxis Minimum="0" Maximum="100" OpposedPosition="true">
                        <LinearGaugeLine Width="5" />
                        <LinearGaugeMajorTicks Interval="20" Height="7" Width="1" Position="Position.Outside" />
                        <LinearGaugeMinorTicks Interval="10" Height="3" Position="Position.Outside" />
                        <LinearGaugeAxisLabelStyle Position="Position.Outside">
                            <LinearGaugeAxisLabelFont FontFamily="inherit" />
                        </LinearGaugeAxisLabelStyle>
                        <LinearGaugeRanges>
                            <LinearGaugeRange Start="0" End="50" StartWidth="50" EndWidth="20" Color="#F45656" Offset="5" />
                            <LinearGaugeRange Start="50" End="100" StartWidth="20" EndWidth="50" Color="#F45656" Offset="5" />
                        </LinearGaugeRanges>
                        <LinearGaugePointers>
                            <LinearGaugePointer Width="0" />
                        </LinearGaugePointers>
                    </LinearGaugeAxis>
                </LinearGaugeAxes>
            </SfLinearGauge>
        </div>
        <div class="@ClassStyle" align="center">
            <SfLinearGauge Title="Gradient shader" AnimationDuration="2000" Orientation="@GaugeOrientation" Theme="@Theme" Height="@Height" Width="@Width" Background="transparent">
                <LinearGaugeTitleStyle FontWeight="499" FontFamily="inherit" />
                <LinearGaugeAxes>
                    <LinearGaugeAxis Minimum="0" Maximum="100" OpposedPosition="true">
                        <LinearGaugeLine Width="5" />
                        <LinearGaugeMajorTicks Interval="20" Height="7" Width="1" Position="Position.Outside" />
                        <LinearGaugeMinorTicks Interval="10" Height="3" Position="Position.Outside" />
                        <LinearGaugeAxisLabelStyle Position="Position.Outside">
                            <LinearGaugeAxisLabelFont FontFamily="inherit" />
                        </LinearGaugeAxisLabelStyle>
                        <LinearGaugeRanges>
                            <LinearGaugeRange Start="0" End="100" StartWidth="50" EndWidth="50" Offset="5">
                                <LinearGradient StartValue="0%" EndValue="100%">
                                    <ColorStops>
                                        <ColorStop Opacity="1" Offset="0%" Color="#FB7D55" />
                                        <ColorStop Opacity="1" Offset="50%" Color="#ECC85B" />
                                        <ColorStop Opacity="1" Offset="100%" Color="#6FC78A" />
                                    </ColorStops>
                                </LinearGradient>
                            </LinearGaugeRange>
                        </LinearGaugeRanges>
                        <LinearGaugePointers>
                            <LinearGaugePointer Width="0" />
                        </LinearGaugePointers>
                    </LinearGaugeAxis>
                </LinearGaugeAxes>
            </SfLinearGauge>
        </div>
        <div class="@ClassStyle" align="center">
            <SfLinearGauge Title="Multiple ranges" AnimationDuration="2000" Orientation="@GaugeOrientation" Theme="@Theme" Height="@Height" Width="@Width" Background="transparent">
                <LinearGaugeTitleStyle FontWeight="499" FontFamily="inherit" />
                <LinearGaugeAxes>
                    <LinearGaugeAxis Minimum="0" Maximum="100" OpposedPosition="true">
                        <LinearGaugeLine Width="5" />
                        <LinearGaugeMajorTicks Interval="20" Height="7" Width="1" Position="Position.Outside" />
                        <LinearGaugeMinorTicks Interval="10" Height="3" Position="Position.Outside" />
                        <LinearGaugeAxisLabelStyle Position="Position.Outside">
                            <LinearGaugeAxisLabelFont FontFamily="inherit" />
                        </LinearGaugeAxisLabelStyle>
                        <LinearGaugeRanges>
                            <LinearGaugeRange Start="0" End="30" StartWidth="50" EndWidth="50" Color="#FB7D55" Offset="5" />
                            <LinearGaugeRange Start="30" End="65" StartWidth="50" EndWidth="50" Color="#ECC85B" Offset="5" />
                            <LinearGaugeRange Start="65" End="100" StartWidth="50" EndWidth="50" Color="#6FC78A" Offset="5" />
                        </LinearGaugeRanges>
                        <LinearGaugePointers>
                            <LinearGaugePointer Width="0" />
                        </LinearGaugePointers>
                    </LinearGaugeAxis>
                </LinearGaugeAxes>
            </SfLinearGauge>
        </div>
    </div>
</div>

@code {
    public Theme Theme { get; set; }
    public string VerticalBackgroundColor = "#0074E3";
    public string HorizontalBackgroundColor = "white";
    public string VerticalTextColor = "white";
    public string HorizontalTextColor = "black";
    public string Width = "190px";
    public string Height = "350px";
    public string ClassStyle = "col-xs-4 col-sm-4 col-lg-2 col-md-2 ";
    public Orientation GaugeOrientation = Orientation.Vertical;
    
    private void VerticalGauge()
    {
        GaugeOrientation = Orientation.Vertical;
        Width = "170px";
        Height = "350px";
        VerticalBackgroundColor = "#0074E3";
        HorizontalBackgroundColor = "white";
        VerticalTextColor = "white";
        HorizontalTextColor = "black";
        ClassStyle = "col-xs-4 col-sm-4 col-lg-2 col-md-2";
    }

    private void HorizontalGauge()
    {
        GaugeOrientation = Orientation.Horizontal;
        Width = "450px";
        Height = "150px";
        ClassStyle = "";
        VerticalBackgroundColor = "white";
        HorizontalBackgroundColor = "#0074E3";
        VerticalTextColor = "black";
        HorizontalTextColor = "white";
    }

    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }
}