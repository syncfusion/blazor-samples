@page "/maps/marker-template"

@using Syncfusion.Blazor.Maps
@using Syncfusion.Blazor
@using ThemeHelper
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@

<SampleDescription>
    <p>This sample represents the temperature of various Australian cities using marker templates.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to use a template as a marker in the map. With the help of the <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Maps.MapsMarker-1.html#Syncfusion_Blazor_Maps_MapsMarker_1_MarkerTemplate" aria-label="Class reference of MarkerTemplate property in Maps">MarkerTemplate</a>, any custom HTML element can be used as a marker, as shown here.</p>
    <p>More information about marker template can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/maps/markers#adding-marker-template" aria-label="Blazor Maps Marker documentation" >documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <SfMaps Theme="@Theme" Background="transparent">
        <MapsAreaSettings Background="transparent" />
        <MapsTitleSettings Text="Australia Cities Weather Details">
            <MapsTitleTextStyle Size="16px" FontFamily="Segoe UI" />
        </MapsTitleSettings>
        <MapsZoomSettings Enable="false" />
        <MapsLayers>
            <MapsLayer ShapeData='new {dataOptions = SampleService?.WebAssetsPath + "data/maps/australia.json"}' TValue="string">
                <MapsShapeSettings Autofill="true" Palette="@Palette">
                    <MapsShapeBorder Width="0.5" Color="#FFFFFF" />
                </MapsShapeSettings>
                <MapsMarkerSettings>
                    <MapsMarker Visible="true" DataSource="@MarkerTemperatures" TValue="Temperatures">
                        <MarkerTemplate>
                            @{
                            var Data = context as Temperatures;
                            <div>
                                <img class="markerTemplate" src="@(GetWeatherIcon(Data?.Temperature ?? 0))" alt="Weather Icon" />
                                <p>@Data?.Name:@Data?.TemperatureÂ°C</p>
                            </div>
                            }
                        </MarkerTemplate>
                    </MapsMarker>
                </MapsMarkerSettings>
            </MapsLayer>
        </MapsLayers>
    </SfMaps>
</div>
<style>
    .markerTemplate {
        height: 30px;
        width: 30px;
        display: block;
        margin: auto;
        font-size: 14px;
    }
</style>
@code {
    public string[] Palette = new string[] { "#E2B247", "#88DB46", "#42C4E2", "#C08AF8", "#52BACC", "#F4CE2F", "#6986ED" };
    public class Temperatures
    {
        public double Latitude { get; set; }
        public double Longitude { get; set; }
        public string? Name { get; set; }
        public double Temperature { get; set; }
    };
    public List<Temperatures> MarkerTemperatures = new List<Temperatures>
    {
        new Temperatures { Name = "Perth", Latitude = -31.950527, Longitude = 115.860457, Temperature = 31.6 },
        new Temperatures { Name = "Adelaide", Latitude = -34.928499, Longitude = 138.600746, Temperature = 28.5 },
        new Temperatures { Name = "Townsville", Latitude = -19.2589635, Longitude = 146.8169483, Temperature = 31.3 },
        new Temperatures { Name = "Sydney", Latitude = -33.868820, Longitude = 151.209296, Temperature = 26.4 },
        new Temperatures { Name = "Alice Springs", Latitude = -23.698042, Longitude = 133.880747, Temperature = 36.4 },
        new Temperatures { Name = "Brisbane", Latitude = -27.469771, Longitude = 153.025124, Temperature = 29.1 }
    };
    public string GetWeatherIcon(double temperature)
    {
        if (temperature <= 27)
            return SampleService?.WebAssetsPath + "images/maps/weather-rain.svg";
        else if (temperature >= 30)
            return SampleService?.WebAssetsPath + "images/maps/weather-clear.svg";
        else
            return SampleService?.WebAssetsPath + "images/maps/weather-clouds.svg";
    }
    public Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }
}