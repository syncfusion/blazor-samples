@page "/maps/navigation-lines"

@using Syncfusion.Blazor.Maps
@using Syncfusion.Blazor
@using ThemeHelper
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample depicts the sea shipping routes between various cities.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render lines between two points in map using <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Maps.MapsNavigationLine.html" aria-label="Class reference of MapsNavigationLine">MapsNavigationLine</a>. You can use <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Maps.MapsNavigationLine.html#Syncfusion_Blazor_Maps_MapsNavigationLine_DashArray" aria-label="Class reference of DashArray property in Maps">DashArray</a>, <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Maps.MapsNavigationLine.html#Syncfusion_Blazor_Maps_MapsNavigationLine_Width" aria-label="Class reference of Width property in Maps">Width</a>, and <a target="_blank" class="code" href="https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.Maps.MapsNavigationLine.html#Syncfusion_Blazor_Maps_MapsNavigationLine_Color" aria-label="Class reference of Color property in Maps">Color</a> properties to customize the appearance of the navigation lines.</p>
    <p>More information about navigation lines can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/maps/navigation-line" aria-label="Blazor Maps Navigation Line documentation" >documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <SfMaps Theme="@Theme" Background="transparent">
        <MapsAreaSettings Background="transparent" />
        <MapsTitleSettings Text="Shipping Sea Route Between Various Cities">
            <MapsTitleTextStyle Size="18px" FontFamily="Segoe UI" />
        </MapsTitleSettings>
        <MapsZoomSettings Enable="false" ZoomFactor="13" />
        <MapsAreaSettings Background="#4863A0" />
        <MapsCenterPosition Latitude="25.54244147012483" Longitude="-89.62646484375" />
        <MapsLayers>
            <MapsLayer ShapeData='new {dataOptions = SampleService?.WebAssetsPath + "data/maps/world-map.json"}' TValue="string">
                <MapsShapeSettings Fill="#789071" />
                <MapsNavigationLines>
                    @foreach (NavigationLineData line in NavigationLine)
                    {
                    <MapsNavigationLine Visible="true" Angle="0.01" DashArray="1" Color="#FFFFFF"
                                        Latitude="@line.Latitudes" Longitude="@line.Longitudes" />
                    }
                </MapsNavigationLines>
                <MapsMarkerSettings>
                    <MapsMarker Visible="true" Shape="MarkerType.Circle" Fill="#FFFFFF" DataSource="@PenisularMarker" TValue="Country" AnimationDuration="0">
                    </MapsMarker>
                    @foreach (Country marker in PenisularMarker)
                    {
                    <MapsMarker Visible="true" DataSource="@(new List<Country> { marker })" TValue="Country">
                        <MarkerTemplate>
                            <div class="markerTemplate" style="@(GetMarkerStyle(marker.Name ?? string.Empty))">
                                <p>@marker.Name</p>
                            </div>
                        </MarkerTemplate>
                    </MapsMarker>
                    }
                </MapsMarkerSettings>
            </MapsLayer>
        </MapsLayers>
    </SfMaps>
    <div class="urllink">
        Source:
        <a href="http://www.lineaships.com/en/linea-peninsular/" target="_blank">www.lineaships.com</a>
    </div>
</div>
<style>
    .markerTemplate {
        font-size: 12px;
        color: #FFFFFF;
        text-shadow: 0px 1px 1px black;
        font-weight: 500;
    }
</style>
@code {
    public List<NavigationLineData> NavigationLine = new List<NavigationLineData>
    {
        new NavigationLineData
        {
            Latitudes = new double[] { 22.403410892712124, 29.756032197482973 },
            Longitudes = new double[] { -97.8717041015625, -95.36270141601562 }
        },
        new NavigationLineData
        {
            Latitudes = new double[] { 22.403410892712124, 30.180747605060766 },
            Longitudes = new double[] { -97.8717041015625, -85.81283569335938 }
        },
        new NavigationLineData
        {
            Latitudes = new double[] { 22.403410892712124, 27.9337540167772 },
            Longitudes = new double[] { -97.8717041015625, -82.49908447265625 }
        },
        new NavigationLineData
        {
            Latitudes = new double[] { 22.403410892712124, 21.282336521195344 },
            Longitudes = new double[] { -97.8717041015625, -89.6649169921875 }
        },
        new NavigationLineData
        {
            Latitudes = new double[] { 29.756032197482973, 21.282336521195344 },
            Longitudes = new double[] { -95.36270141601562, -89.6649169921875 }
        },
        new NavigationLineData
        {
            Latitudes = new double[] { 30.180747605060766, 21.282336521195344 },
            Longitudes = new double[] { -85.81283569335938, -89.6649169921875 }
        },
        new NavigationLineData
        {
            Latitudes = new double[] { 27.9337540167772, 21.282336521195344 },
            Longitudes = new double[] { -82.49908447265625, -89.6649169921875 }
        }
    };

    public List<Country> PenisularMarker = new List<Country>
    {
        new Country { Latitude = 22.403410892712124, Longitude = -97.8717041015625, Name = "ALTAMIRA" },
        new Country { Latitude = 29.756032197482973, Longitude = -95.36270141601562, Name = "HOUSTON" },
        new Country { Latitude = 30.180747605060766, Longitude = -85.81283569335938, Name = "PANAMA CITY" },
        new Country { Latitude = 27.9337540167772, Longitude = -82.49908447265625, Name = "TAMPA" },
        new Country { Latitude = 21.282336521195344, Longitude = -89.6649169921875, Name = "PROGRESO" }
    };
    public string GetMarkerStyle(string cityName)
    {
        return cityName switch
        {
            "ALTAMIRA" => "margin-left:-65px;margin-top:10px;",
            "PROGRESO" => "margin-top:40px;",
            _ => "margin-top:-20px;"
        };
    }
    public Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }
    public class Country
    {
        public double Latitude { get; set; }
        public double Longitude { get; set; }
        public string? Name { get; set; }
    };
    public class NavigationLineData
    {
        public double[]? Latitudes { get; set; }
        public double[]? Longitudes { get; set; }
    }
}