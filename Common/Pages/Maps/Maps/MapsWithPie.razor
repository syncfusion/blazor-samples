@page "/maps/map-with-pie-chart"

@using Syncfusion.Blazor.Maps
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor
@using ThemeHelper
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample demonstrates the placement of pie charts on a map. The age groups of the top 6 largest countries are depicted in a pie chart.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render a pie chart as a marker on a map. Any custom HTML element can be used as a marker.</p>
    <p>More information about marker can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/maps/markers" aria-label="Blazor Maps Marker documentation" >documentation section</a>.</p>
</ActionDescription>

<div class="control-section">
    <SfMaps Theme="@Theme" Background="transparent">
        <MapsAreaSettings Background="transparent" />
        <MapsZoomSettings Enable="false" />
        <MapsTitleSettings Text="Top 6 Largest Countries Age Group Details">
            <MapsTitleTextStyle Size="16px" FontFamily="Segoe UI" />
        </MapsTitleSettings>
        <MapsLegendSettings Visible="true" Position="Syncfusion.Blazor.Maps.LegendPosition.Bottom" ShapePadding="5">
            <MapsLegendTextStyle FontFamily="Segoe UI"></MapsLegendTextStyle>
        </MapsLegendSettings>
        <MapsLayers>
            <MapsLayer ShapeData='new {dataOptions = SampleService?.WebAssetsPath + "data/maps/world-map.json"}' TValue="string">
                <MapsShapeSettings Fill="#E5E5E5">
                    <MapsShapeColorMappings>
                        <MapsShapeColorMapping StartRange="1" EndRange="14" Color="@ShapeColorOne" Label="0-14 year" />
                        <MapsShapeColorMapping StartRange="15" EndRange="24" Color="@ShapeColorTwo" Label="15-24 year" />
                        <MapsShapeColorMapping StartRange="25" EndRange="54" Color="@ShapeColorThree" Label=" 25-54 year" />
                        <MapsShapeColorMapping StartRange="55" EndRange="64" Color="@ShapeColorFour" Label="55-64 year" />
                    </MapsShapeColorMappings>
                </MapsShapeSettings>
                <MapsMarkerSettings>
                    @foreach (PieMarker pieData in PieMarkers)
                    {
                        <MapsMarker Visible="true" DataSource="@pieData.DataSource" TValue="PieDataSource">
                            <MarkerTemplate>
                                @{
                                    <div style="margin-top:0px;margin-left:0px;border-style: hidden;">
                                        <SfAccumulationChart Background="transparent" Height="60px" Width="60px">
                                            <AccumulationChartTooltipSettings Enable="true"></AccumulationChartTooltipSettings>
                                            <AccumulationChartLegendSettings Visible="false"></AccumulationChartLegendSettings>
                                            <AccumulationChartSeriesCollection>
                                                <AccumulationChartSeries Explode="true" ExplodeIndex="0" ExplodeOffset="20%" Name="@pieData.Name" DataSource="@PieData[pieData.Index]" XName="X" YName="Y" Palettes='new string[] { "#634D6F", "#B34D6D", "#557C5C", "#5E55E2", "#7C744D" }'>
                                                    <AccumulationDataLabelSettings Visible="false"></AccumulationDataLabelSettings>
                                                </AccumulationChartSeries>
                                            </AccumulationChartSeriesCollection>
                                        </SfAccumulationChart>
                                    </div>
                                }
                            </MarkerTemplate>
                        </MapsMarker>
                    }
                </MapsMarkerSettings>
            </MapsLayer>
        </MapsLayers>
    </SfMaps>
</div>
@code {
    public string[] ShapeColorOne = { "#634D6F" };
    public string[] ShapeColorTwo = { "#B34D6D" };
    public string[] ShapeColorThree = { "#557C5C" };
    public string[] ShapeColorFour = { "#5E55E2" };
    public class Pie
    {
        public string? X { get; set; }
        public double Y { get; set; }
    }
    public class PieDataSource
    {
        public double Latitude { get; set; }
        public double Longitude { get; set; }
    }
    public class PieMarker
    {
        public string? Name { get; set; }
        public List<PieDataSource>? DataSource { get; set; }
        public int Index { get; set; }
    }
    public List<PieMarker> PieMarkers = new List<PieMarker>
    {
        new PieMarker { Name = "Russia", DataSource = new List<PieDataSource> { new PieDataSource { Latitude = 61.938950426660604, Longitude = 97.03125 } }, Index = 0 },
        new PieMarker { Name = "Canada", DataSource = new List<PieDataSource> { new PieDataSource { Latitude = 57.70414723434193, Longitude = -114.08203125 } }, Index = 1 },
        new PieMarker { Name = "United States of America", DataSource = new List<PieDataSource> { new PieDataSource { Latitude = 39.90973623453719, Longitude = -103.0078125 } }, Index = 2 },
        new PieMarker { Name = "China", DataSource = new List<PieDataSource> { new PieDataSource { Latitude = 35.746512259918504, Longitude = 102.216796875 } }, Index = 3 },
        new PieMarker { Name = "Brazil", DataSource = new List<PieDataSource> { new PieDataSource { Latitude = -8.667918002363107, Longitude = -52.55859375 } }, Index = 4 },
        new PieMarker { Name = "Australia", DataSource = new List<PieDataSource> { new PieDataSource { Latitude = -23.725011735951796, Longitude = 132.978515625 } }, Index = 5 }
    };

    public List<List<Pie>> PieData = new List<List<Pie>>
    {
        new List<Pie> { new Pie { X = "0-14 years", Y = 16 }, new Pie { X = "15-24 years", Y = 11.5 }, new Pie { X = "25-54 years", Y = 45.9 }, new Pie { X = "55-64 years", Y = 13.5 } },
        new List<Pie> { new Pie { X = "0-14 years", Y = 15.5 }, new Pie { X = "15-24 years", Y = 12.9 }, new Pie { X = "25-54 years", Y = 41.4 }, new Pie { X = "55-64 years", Y = 13.3 } },
        new List<Pie> { new Pie { X = "0-14 years", Y = 20 }, new Pie { X = "15-24 years", Y = 13.7 }, new Pie { X = "25-54 years", Y = 40.2 }, new Pie { X = "55-64 years", Y = 12.3 } },
        new List<Pie> { new Pie { X = "0-14 years", Y = 17.2 }, new Pie { X = "15-24 years", Y = 15.4 }, new Pie { X = "25-54 years", Y = 46.9 }, new Pie { X = "55-64 years", Y = 11.3 } },
        new List<Pie> { new Pie { X = "0-14 years", Y = 24.2 }, new Pie { X = "15-24 years", Y = 16.7 }, new Pie { X = "25-54 years", Y = 43.6 }, new Pie { X = "55-64 years", Y = 8.2 } },
        new List<Pie> { new Pie { X = "0-14 years", Y = 18.1 }, new Pie { X = "15-24 years", Y = 13.4 }, new Pie { X = "25-54 years", Y = 42 }, new Pie { X = "55-64 years", Y = 11.8 } }
    };
    
    public Theme Theme { get; set; }
    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    }
}