@page "/maps/default-functionalities"

@using Syncfusion.Blazor.Maps
@using Syncfusion.Blazor
@using ThemeHelper
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent
@*End:Hidden*@

<SampleDescription>
    <p>This sample shows the global time across various regions of the world based on their time zone in a map layer. Markers are used to show the global time in each region.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to render a world map using the provided GeoJSON data. The markers help to highlight specific regions and their time based on time zones over the map layer.</p>
    <p>More information about maps can be found in this <a target="_blank" href="https://blazor.syncfusion.com/documentation/maps/getting-started" aria-label="Blazor Maps Getting Started documentation" >documentation section</a>.</p>
</ActionDescription>

<style>
    .circle {
        height: 8px;
        width: 8px;
        background-color: red;
        border-radius: 50%;
        margin-left: 20px;
    }

    .text {
        margin-top: -4px;
        font-size: 14px;
        font-weight: 600;
        text-align: center;
    }

    .timeText {
        font-size: 10px;
        margin-top: -5px;
        text-align: center;
    }

    .lastCircle {
        height: 8px;
        width: 8px;
        background-color: red;
        border-radius: 50%;
        margin-left: 20px;
        margin-left: 11px;
    }

    .lastText {
        margin-top: -4px;
        font-size: 14px;
        font-weight: 600;
        text-align: center;
        margin-left: -15px;
    }

    .lastTimeText {
        font-size: 10px;
        margin-top: -5px;
        text-align: center;
        margin-left: -15px;
    }

    .commonText {
        margin-left: 10px;
        margin-top: 30px;
    }
    @@media (max-width: 300px) {
        .lastText, .lastTimeText {
            margin-left: -30px; 
        }
        .lastCircle {
            margin-left: 4px;
        }
    }
</style>
<div class="control-section">
    <SfMaps Background="transparent" Theme="@Theme">
        <MapsAreaSettings Background="transparent" />
        <MapsLayers>
            <MapsLayer ShapeData='new {dataOptions = SampleService?.WebAssetsPath + "data/maps/world-map.json"}' TValue="string">
                <MapsMarkerSettings>
                    <MapsMarker Visible="true" DataSource="SeattleMarkerData" TValue="MapMarkerDataSource">
                        <MarkerTemplate>
                            @{
                                var Data = context as MapMarkerDataSource;
                                <div class="commonText">
                                    <div class="circle"></div>
                                    <div class="text" style="color:@TextColor">@Data?.Name</div>
                                    <div class="timeText" style="color:@TextColor">03:25:51 AM</div>
                                </div>
                            }
                        </MarkerTemplate>
                    </MapsMarker>
                    <MapsMarker Visible="true" DataSource="BelemMarkerData" TValue="MapMarkerDataSource">
                        <MarkerTemplate>
                            @{
                                var Data = context as MapMarkerDataSource;
                                <div class="commonText">
                                    <div class="circle"></div>
                                    <div class="text" style="color:@TextColor">@Data?.Name</div>
                                    <div class="timeText" style="color:@TextColor">07:25:51 AM</div>
                                </div>
                            }
                        </MarkerTemplate>
                    </MapsMarker>
                    <MapsMarker Visible="true" DataSource="GreenlandMarkerData" TValue="MapMarkerDataSource">
                        <MarkerTemplate>
                            @{
                                var Data = context as MapMarkerDataSource;
                                <div class="commonText">
                                    <div class="circle" style="margin-left: 25px;"></div>
                                    <div class="text" style="color:@TextColor">@Data?.Name</div>
                                    <div class="timeText" style="color:@TextColor">08:25:51 AM</div>
                                </div>
                            }
                        </MarkerTemplate>
                    </MapsMarker>
                    <MapsMarker Visible="true" DataSource="YakutskMarkerData" TValue="MapMarkerDataSource">
                        <MarkerTemplate>
                            @{
                                var Data = context as MapMarkerDataSource;
                                <div class="commonText">
                                    <div class="circle"></div>
                                    <div class="text" style="color:@TextColor">@Data?.Name</div>
                                    <div class="timeText" style="color:@TextColor">20:25:51 PM</div>
                                </div>
                            }
                        </MarkerTemplate>
                    </MapsMarker>
                    <MapsMarker Visible="true" DataSource="DelhiMarkerData" TValue="MapMarkerDataSource">
                        <MarkerTemplate>
                            @{
                                var Data = context as MapMarkerDataSource;
                                <div class="commonText">
                                    <div class="circle"></div>
                                    <div class="text" style="color:@TextColor">@Data?.Name</div>
                                    <div class="timeText" style="color:@TextColor">16:55:51 PM</div>
                                </div>
                            }
                        </MarkerTemplate>
                    </MapsMarker>
                    <MapsMarker Visible="true" DataSource="BrisbaneMarkerData" TValue="MapMarkerDataSource">
                        <MarkerTemplate>
                            @{
                                var Data = context as MapMarkerDataSource;
                                <div class="commonText">
                                    <div class="lastCircle"></div>
                                    <div class="lastText" style="color:@TextColor">@Data?.Name</div>
                                    <div class="lastTimeText" style="color:@TextColor">21:25:51 PM</div>
                                </div>
                            }
                        </MarkerTemplate>
                    </MapsMarker>
                    <MapsMarker Visible="true" DataSource="HarareMarkerData" TValue="MapMarkerDataSource">
                        <MarkerTemplate>
                            @{
                                var Data = context as MapMarkerDataSource;
                                <div class="commonText">
                                    <div class="circle"></div>
                                    <div class="text" style="color:@TextColor">@Data?.Name</div>
                                    <div class="timeText" style="color:@TextColor">13:25:51 PM</div>
                                </div>
                            }
                        </MarkerTemplate>
                    </MapsMarker>
                </MapsMarkerSettings>
                <MapsShapeSettings Fill="#E5E5E5" />
            </MapsLayer>
        </MapsLayers>
        <MapsZoomSettings Enable="false" />
        <MapsLegendSettings Visible="false" />
        <MapsTitleSettings Text="World Clock">
            <MapsTitleTextStyle Size="16px" FontFamily="Segoe UI" />
        </MapsTitleSettings>
    </SfMaps>
</div>

@code {
    public Theme Theme { get; set; }
    public string TextColor = "inherit";
    public class MapMarkerDataSource
    {
        public double Latitude { get; set; }
        public double Longitude { get; set; }
        public string? Name { get; set; }
    };

    public List<MapMarkerDataSource> SeattleMarkerData = new List<MapMarkerDataSource>
    {
        new MapMarkerDataSource { Latitude = 47.60621, Longitude = -122.332071, Name = "Seattle" }
    };

    public List<MapMarkerDataSource> BelemMarkerData = new List<MapMarkerDataSource>
    {
        new MapMarkerDataSource { Latitude = -1.455833, Longitude = -48.503887, Name = "Belem" }
    };

    public List<MapMarkerDataSource> GreenlandMarkerData = new List<MapMarkerDataSource>
    {
        new MapMarkerDataSource { Latitude = 71.706936, Longitude = -42.604303, Name = "Greenland" }
    };

    public List<MapMarkerDataSource> YakutskMarkerData = new List<MapMarkerDataSource>
    {
        new MapMarkerDataSource { Latitude = 62.035452, Longitude = 129.675475, Name = "Yakutsk" }
    };

    public List<MapMarkerDataSource> DelhiMarkerData = new List<MapMarkerDataSource>
    {
        new MapMarkerDataSource { Latitude = 28.704059, Longitude = 77.10249, Name = "Delhi" }
    };

    public List<MapMarkerDataSource> BrisbaneMarkerData = new List<MapMarkerDataSource>
    {
        new MapMarkerDataSource { Latitude = -27.469771, Longitude = 153.025124, Name = "Brisbane" }
    };

    public List<MapMarkerDataSource> HarareMarkerData = new List<MapMarkerDataSource>
    {
        new MapMarkerDataSource { Latitude = -17.825166, Longitude = 31.03351, Name = "Harare" }
    };
    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        TextColor = (Theme.ToString().IndexOf("Dark") > -1 || Theme.ToString().IndexOf("HighContrast") > -1) ? "#000000" : "inherit";
    }
}
