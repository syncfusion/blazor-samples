<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <LangVersion>9.0</LangVersion>
    <RootNamespace>BlazorDemos</RootNamespace>
    <EnableMSDeployAppOffline>true</EnableMSDeployAppOffline>
    <ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <Target Name="RemoveStaticFiles" AfterTargets="AfterPublish">
    <PropertyGroup>
      <Files>$(PublishDir)\wwwroot\_content</Files>
    </PropertyGroup>

    <ItemGroup>
		    <Directories Include="$(Files)\**" Exclude="$(Files)\**\syncfusion-blazor.min.js;$(Files)\**\syncfusion-blazor.min.js.gz;$(Files)\**\syncfusion-blazor.min.js.br;      $(Files)\**\syncfusion-blazor-documenteditor.min.js;$(Files)\**\syncfusion-blazor-documenteditor.min.js.gz;$(Files)\**\syncfusion-blazor-documenteditor.min.js.br;$(Files)\**\syncfusion-blazor-spreadsheet.min.js;$(Files)\**\syncfusion-blazor-spreadsheet.min.js.gz;$(Files)\**\syncfusion-blazor-spreadsheet.min.js.br;$(Files)\Syncfusion.Blazor.Themes\**;$(Files)\Blazor_Server_Common_NET9\**;&#xD;&#xA;        $(Files)\**\syncfusion-blazor-base.min.js;$(Files)\**\syncfusion-blazor-base.min.js.gz;$(Files)\**\syncfusion-blazor-base.min.js.br;$(Files)\**\syncfusion-blazor-extended.min.js;$(Files)\**\syncfusion-blazor-extended.min.js.gz;$(Files)\**\syncfusion-blazor-extended.min.js.br;$(Files)\**\data.min.js;$(Files)\**\data.min.js.gz;$(Files)\**\data.min.js.br;$(Files)\**\diagrams.min.js;$(Files)\**\diagrams.min.js.gz;$(Files)\**\diagrams.min.js.br;$(Files)\**\Syncfusion.Blazor.SmartComponents.*.lib.module.js;$(Files)\**\Syncfusion.Blazor.SmartComponents.*.lib.module.js.gz;$(Files)\**\Syncfusion.Blazor.SmartComponents.*.lib.module.js.br;$(Files)\**\Syncfusion.Blazor.SmartComponents.*.bundle.scp.css;$(Files)\**\Syncfusion.Blazor.SmartComponents.*.bundle.scp.css.gz;$(Files)\**\Syncfusion.Blazor.SmartComponents.*.bundle.scp.css.br;" />
    </ItemGroup>

    <Delete Files="@(Directories)" ContinueOnError="true" />
  </Target>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants>TRACE;RELEASE;NET9_0;$(SyncfusionLicensing);STAGING</DefineConstants>
    <ConfigurationValue>Release</ConfigurationValue>
	<Staging Condition="'$(DefineConstants)' != '' and $(DefineConstants.Contains('STAGING'))">true</Staging>
  </PropertyGroup>

   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>TRACE;DEBUG;NET9_0;STAGING</DefineConstants>
    <ConfigurationValue>Debug</ConfigurationValue>
  </PropertyGroup>

  <PropertyGroup Condition="'$(STAGING)' != ''">
    <DefineConstants>$(DefineConstants);STAGING</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ISSTAGING)' != ''">
    <DefineConstants>$(DefineConstants);ISSTAGING</DefineConstants>
  </PropertyGroup>

    <!-- Set AppEnvironment to Debug if Configuration is Debug OR STAGING is true -->
    <PropertyGroup Condition="'$(Configuration)' == 'Debug' Or '$(Staging)' == 'true'">
	    <AppEnvironment>Debug</AppEnvironment>
    </PropertyGroup>

    <!-- Default to Release if AppEnvironment is not already set -->
    <PropertyGroup Condition="'$(AppEnvironment)' == ''">
	    <AppEnvironment>Release</AppEnvironment>
    </PropertyGroup>

    <!-- Set AppEnvironment to Staging if Configuration is Release AND Staging is true -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release' And '$(Staging)' == 'true'">
      <AppEnvironment>Staging</AppEnvironment>
  </PropertyGroup>

  <Target Name="UpdateScriptReference" BeforeTargets="BeforeBuild" Condition="'$(Configuration)'=='Release'">
    <ReadLinesFromFile File="Components\App.razor">
      <Output TaskParameter="Lines" ItemName="AppRazorLines" />
    </ReadLinesFromFile>
    <ItemGroup>
      <AppRazorLinesUpdated Include="@(AppRazorLines->Replace('index.js','index.min.js'))" />
    </ItemGroup>
    <WriteLinesToFile File="Components\App.razor" Lines="@(AppRazorLinesUpdated)" Overwrite="true" />
  </Target>
  
    <Target Name="MinifyAssets" BeforeTargets="BeforeBuild" Condition="'$(Configuration)'=='Release'">

      <ItemGroup>
        <_CssFiles Include="..\Common\wwwroot\**\*.css" Exclude="..\Common\wwwroot\**\*.min.css" />
        <_JsFiles Include="..\Common\wwwroot\**\*.js" Exclude="..\Common\wwwroot\**\*.min.js" />
      </ItemGroup>

      <Exec
        Command="dotnet &quot;../Common/AssetMinifier/Blazor-StaticAssetMinifier/AssetMinifier.dll&quot; &quot;%( _CssFiles.FullPath )&quot;"
        Condition="Exists('%( _CssFiles.FullPath )')"
        StandardOutputImportance="High"
        StandardErrorImportance="High" />

      <Exec
        Command="dotnet &quot;../Common/AssetMinifier/Blazor-StaticAssetMinifier/AssetMinifier.dll&quot; &quot;%( _JsFiles.FullPath )&quot;"
        Condition="Exists('%( _JsFiles.FullPath )')"
        StandardOutputImportance="High"
        StandardErrorImportance="High" />

  </Target>

    <Target Name="ProductionBuild" BeforeTargets="BeforeBuild">
	    <Delete Files="wwwroot/version.js" />
	    <WriteLinesToFile File="wwwroot/version.js" Lines='export const data={"version":"net9.0","configuration":"$(AppEnvironment)"}' />
    </Target>

  <ItemGroup>
    <Content Remove="App.razor" />
    <Content Remove="wwwroot\Blazor_Server_Demos_NET8.lib.module.js" />
  </ItemGroup>
  
  <ItemGroup>
    <ProjectReference Include="..\Common\Blazor_Server_Common_NET9.csproj" />
  </ItemGroup>

</Project>
